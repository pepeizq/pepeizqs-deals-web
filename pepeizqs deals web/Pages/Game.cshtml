@page "/game/{id:int}/{nombre?}"

@model pepeizqs_deals_web.Pages.GameModel

@using Herramientas
@using Microsoft.AspNetCore.Identity
@using pepeizqs_deals_web.Areas.Identity.Data
@using System.Net;

@inject SignInManager<Usuario> SignInManager
@inject UserManager<Usuario> UserManager

@{
	#nullable disable

	ViewData["Title"] = Model.juego.Nombre;
	Layout = "/Pages/Shared/_Layout.cshtml";

	bool usuarioLogeado = false;
	usuarioLogeado = SignInManager.IsSignedIn(User);

	Usuario usuario = null;

	bool adminLogeado = false;

	if (usuarioLogeado == true)
	{
		usuario = await UserManager.GetUserAsync(User);

		if (usuario != null)
		{
			if (global::BaseDatos.Usuarios.Buscar.RolDios(usuario.Id) == true)
			{
				adminLogeado = true;
			}
		}
	}

	if (usuarioLogeado == true)
	{
		@if (adminLogeado == true)
		{
			@(await Html.RenderComponentAsync<Componentes.Admin.Juego>(RenderMode.Server, new
			{
				idioma = Model.idioma,
				juego = Model.juego
			}))
		}
	}

	bool seo = false;
	string? userAgent = string.Empty;

	if (HttpContext != null)
	{
		userAgent = HttpContext.Request.Headers.UserAgent;

		if (string.IsNullOrEmpty(userAgent) == false)
		{
			if (userAgent.Contains("http://www.google.com/bot.html") == true || userAgent.Contains("http://www.bing.com/bingbot.htm") == true)
			{
				seo = true;
			}
		}
	}

	if (seo == true)
	{
		string enlace = "https://pepeizqdeals.com/game/" + Model.juego.Id.ToString() + "/" + Herramientas.EnlaceAdaptador.Nombre(Model.juego.Nombre) + "/";

		string descripcion = string.Empty;

		if (Model.juego.Caracteristicas != null)
		{
			if (string.IsNullOrEmpty(Model.juego.Caracteristicas.Descripcion) == false)
			{
				descripcion = Model.juego.Caracteristicas.Descripcion;
			}
		}

		string imagen = string.Empty;

		if (Model.juego.Imagenes != null)
		{
			if (string.IsNullOrEmpty(Model.juego.Imagenes.Header_460x215) == false)
			{
				imagen = Model.juego.Imagenes.Header_460x215;
			}
		}

		@(await Html.RenderComponentAsync<Componentes.Secciones.Seo>(RenderMode.ServerPrerendered, new
		{
			idioma = Model.idioma,
			titulo = Model.juego.Nombre,
			enlace = enlace,
			canonical = enlace,
			descripcion = descripcion,
			imagen = imagen
		}))

		@(await Html.RenderComponentAsync<Componentes.Secciones.Juego>(RenderMode.ServerPrerendered, new
		{
			idioma = Model.idioma,
			juego = Model.juego,
			userAgent = userAgent
		}))
	}
	else
	{
		@(await Html.RenderComponentAsync<Componentes.Secciones.Juego>(RenderMode.Server, new
		{
			idioma = Model.idioma,
			juego = Model.juego,
			usuario = usuario,
			userAgent = userAgent
		}))
	}
}