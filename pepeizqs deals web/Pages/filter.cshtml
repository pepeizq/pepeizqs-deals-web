@page "/filter/{ids?}/"

@using Microsoft.AspNetCore.Identity
@using pepeizqs_deals_web.Areas.Identity.Data

@model pepeizqs_deals_web.Pages.filterModel

@inject SignInManager<Usuario> SignInManager
@inject UserManager<Usuario> UserManager

@{
	#nullable disable

    ViewData["Title"] = Herramientas.Idiomas.BuscarTexto(Model.idioma, "Title", "Filter"); ;
    Layout = "/Pages/Shared/_Layout.cshtml";

	bool usuarioLogeado = SignInManager.IsSignedIn(User);
	Usuario usuario = new Usuario();

	if (usuarioLogeado == true)
	{
		usuario = await UserManager.GetUserAsync(User);
	}

	if (string.IsNullOrEmpty(Model.ids) == false)
	{
		bool seo = false;
		string userAgent = string.Empty;

		if (HttpContext != null)
		{
			userAgent = HttpContext.Request.Headers.UserAgent;

			if (string.IsNullOrEmpty(userAgent) == false)
			{
				if (userAgent.Contains("http://www.google.com/bot.html") == true || userAgent.Contains("http://www.bing.com/bingbot.htm") == true)
				{
					seo = true;
				}
			}
		}

		if (seo == true)
		{
			@(await Html.RenderComponentAsync<Componentes.Secciones.Filtro>(RenderMode.ServerPrerendered, new
			{
				idioma = Model.idioma,
				ids = Model.ids
			}))
		}
		else
		{
			@(await Html.RenderComponentAsync<Componentes.Secciones.Filtro>(RenderMode.Server, new
			{
				idioma = Model.idioma,
				ids = Model.ids,
				usuarioId = usuario?.Id
			}))
		}
	}
	else
	{
		@(await Html.RenderComponentAsync<Componentes.Secciones.Filtro>(RenderMode.Server, new
		{
			idioma = Model.idioma,
			usuarioId = usuario?.Id
		}))
	}
}