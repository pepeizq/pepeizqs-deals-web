@page "/publisher/{id}/"

@model pepeizqs_deals_web.Pages.publisherModel

@using Microsoft.AspNetCore.Identity
@using pepeizqs_deals_web.Areas.Identity.Data

@inject SignInManager<Usuario> SignInManager
@inject UserManager<Usuario> UserManager

@{
    #nullable disable

    string titulo = null;
    string enlace = null;

    if (Model.publisher != null)
    {
        if (string.IsNullOrEmpty(Model.id) == false)
        {
            enlace = "/publisher/" + Model.id + "/";
        }

        if (string.IsNullOrEmpty(Model.publisher.Nombre) == false)
        {
            titulo = Model.publisher.Nombre + " (" + Herramientas.Idiomas.CogerCadena(Model.idioma, "String5", "Publisher") + ")";        
        }       
    }
    else
    {
        titulo = "publisher";
    }

    bool usuarioLogeado = SignInManager.IsSignedIn(User);
    Usuario usuario = new Usuario();

    bool adminLogeado = false;

    if (usuarioLogeado == true)
    {
        usuario = await UserManager.GetUserAsync(User);

        if (global::BaseDatos.Usuarios.Buscar.RolDios(usuario.Id) == true)
        {
            adminLogeado = true;
        }
    }

    ViewData["Title"] = titulo;
    Layout = "/Pages/Shared/_Layout.cshtml";

    if (usuarioLogeado == true)
    {
        if (adminLogeado == true)
        {
            @(await Html.RenderComponentAsync<Componentes.Admin.Publisher>(RenderMode.Server, new
            {
                id = Model.id
            }))
        }
    }

    if (Model.publisher != null)
    {
        bool seo = false;
        string? userAgent = string.Empty;

        if (HttpContext != null)
        {
            userAgent = HttpContext.Request.Headers.UserAgent;

            if (string.IsNullOrEmpty(userAgent) == false)
            {
                if (userAgent.Contains("http://www.google.com/bot.html") == true || userAgent.Contains("http://www.bing.com/bingbot.htm") == true)
                {
                    seo = true;
                }
            }
        }

        if (seo == true)
        {
            @(await Html.RenderComponentAsync<Componentes.Secciones.Seo>(RenderMode.ServerPrerendered, new
            {
                idioma = Model.idioma,
                titulo = titulo,
                enlace = enlace,
                canonical = enlace,
                descripcion = Model.publisher.Descripcion,
                imagen = Model.publisher.Imagen
            }))

            @(await Html.RenderComponentAsync<Componentes.Secciones.Publisher>(RenderMode.ServerPrerendered, new
            {
                idioma = Model.idioma,
                id = Model.publisher.Id,
                nombre = Model.publisher.Nombre,
                descripcion = Model.publisher.Descripcion,
                imagen = Model.publisher.Imagen,
                acepciones = Model.publisher.Acepciones
            }))
        }
        else
        {
            @(await Html.RenderComponentAsync<Componentes.Secciones.Publisher>(RenderMode.Server, new
            {
                idioma = Model.idioma,
                usuario = usuario,
                id = Model.publisher.Id,
                nombre = Model.publisher.Nombre,
                descripcion = Model.publisher.Descripcion,
                imagen = Model.publisher.Imagen,
                acepciones = Model.publisher.Acepciones
            }))
        }
    }
}