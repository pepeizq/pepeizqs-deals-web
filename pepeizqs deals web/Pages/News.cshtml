@page "/news/{id:int}/{nombre?}/"

@model pepeizqs_deals_web.Pages.NewsModel

@using Herramientas
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using pepeizqs_deals_web.Areas.Identity.Data

@inject SignInManager<Usuario> SignInManager
@inject UserManager<Usuario> UserManager

@{
	#nullable disable

	string titulo = Herramientas.Idiomas.ElegirTexto(Model.idioma, Model.noticia.TituloEn, Model.noticia.TituloEs);

	ViewData["Title"] = titulo;
	Layout = "/Pages/Shared/_Layout.cshtml";

	bool usuarioLogeado = SignInManager.IsSignedIn(User);
	Usuario usuario = new Usuario();

	bool adminLogeado = false;

	if (usuarioLogeado == true)
	{
		usuario = await UserManager.GetUserAsync(User);

		if (global::BaseDatos.Usuarios.Buscar.RolDios(usuario.Id) == true)
		{
			adminLogeado = true;
		}
	}

	string enlace = "https://pepeizqdeals.com/news/" + Model.noticia.Id.ToString() + "/" + Herramientas.EnlaceAdaptador.Nombre(titulo) + "/";

	string imagen = Model.noticia.Imagen;

	if (usuarioLogeado == true)
	{
		@if (adminLogeado == true)
		{
			@(await Html.RenderComponentAsync<Componentes.Admin.Noticia>(RenderMode.ServerPrerendered, new
			{
				idioma = Model.idioma,
				noticiaId = Model.noticia.Id
			}))
		}
	}

	bool seo = false;
	string? userAgent = string.Empty;

	if (HttpContext != null)
	{
		userAgent = HttpContext.Request.Headers.UserAgent;

		if (string.IsNullOrEmpty(userAgent) == false)
		{
			if (userAgent.Contains("http://www.google.com/bot.html") == true || userAgent.Contains("http://www.bing.com/bingbot.htm") == true)
			{
				seo = true;
			}
		}
	}

	if (seo == true)
	{
		@(await Html.RenderComponentAsync<Componentes.Secciones.Seo>(RenderMode.ServerPrerendered, new
		{
			idioma = Model.idioma,
			titulo = titulo,
			enlace = enlace,
			canonical = enlace,
			imagen = imagen
		}))

		@(await Html.RenderComponentAsync<Componentes.Secciones.Noticia>(RenderMode.ServerPrerendered, new
		{
			idioma = Model.idioma,
			noticiaId = Model.noticia.Id
		}))
	}
	else
	{
		@(await Html.RenderComponentAsync<Componentes.Secciones.Noticia>(RenderMode.Server, new
		{
			idioma = Model.idioma,
			noticiaId = Model.noticia.Id,
			usuarioId = usuario?.Id
		}))
	}
}