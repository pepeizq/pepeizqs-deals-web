@using BaseDatos.Tiendas
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.Data.SqlClient

@code {

    #nullable disable

    protected override async Task OnInitializedAsync()
    {
        WebApplicationBuilder builder = WebApplication.CreateBuilder();
        string piscinaTiendas = builder.Configuration.GetValue<string>("PoolTiendas:Contenido");
        string piscinaUsada = Environment.GetEnvironmentVariable("APP_POOL_ID", EnvironmentVariableTarget.Process);

        if (piscinaTiendas == piscinaUsada)
        {
            SqlConnection conexion = new SqlConnection();

            try
            {
                conexion = Herramientas.BaseDatos.Conectar();
            }
            catch { }

            if (conexion.State == System.Data.ConnectionState.Open)
            {
                TimeSpan siguienteComprobacion = TimeSpan.FromMinutes(120);
                List<string> ids = new List<string>();

                foreach (var tienda in Tiendas2.TiendasCargar.GenerarListado())
                {
                    if (tienda.AdminInteractuar == true)
                    {
                        ids.Add(tienda.Id);
                    }
                }

                if (Admin.ComprobarTiendasUso(conexion, TimeSpan.FromSeconds(60)) == null)
                {
                    AdminTarea tiendaComprobar = Admin.TiendaSiguiente(conexion);

                    if ((DateTime.Now - tiendaComprobar.Fecha > siguienteComprobacion) || tiendaComprobar.MinimoHoras == false)
                    {
                        try
                        {
                            await Tiendas2.TiendasCargar.TareasGestionador(conexion, tiendaComprobar.Id);

                            Environment.Exit(1);
                        }
                        catch (Exception ex)
                        {
                            BaseDatos.Errores.Insertar.Ejecutar(tiendaComprobar.Id, ex, conexion);
                        }            
                    }
                }
            }
        }
    }
}
