@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Data.SqlClient
@using Microsoft.VisualBasic
@using Newtonsoft.Json

@inject NavigationManager NavManager

@if (publisher != null)
{
	<div style="padding: 20px; background: var(--fondoCuerpo);">
		<div style="display: flex; align-items: center; margin-bottom: 20px;">
			<div style="width: 100%;">
				Admin Editar • @publisher.Nombre
			</div>
		</div>

		<div style="display: flex; align-items: center; margin-bottom: 20px;">
			<div style="width: 15%; padding-right: 20px; text-align: right;">
				Nombre
			</div>

			<div style="width: 85%;">
				<textarea @onchange="(e => TextoCambiaNombre2(e))" class="entrada-texto" rows="1">@textoNombre2</textarea>
			</div>
		</div>

		<div style="display: flex; align-items: center; margin-bottom: 20px;">
			<div style="width: 15%; padding-right: 20px; text-align: right;">
				Acepciones
			</div>

			<div style="width: 85%;">
				<textarea @onchange="(e => TextoCambiaAcepciones(e))" class="entrada-texto" rows="1">@textoAcepciones</textarea>
			</div>
		</div>
	</div>

	<hr />
}
else
{
	<div style="padding: 20px; background: var(--fondoCuerpo);">
		<div style="display: flex; align-items: center; margin-bottom: 20px;">
			<div style="width: 100%;">
				Admin Añadir Publisher
			</div>
		</div>

		<div style="display: flex; align-items: center; margin-bottom: 20px; gap: 20px;">
			<div style="width: 15%; text-align: right;">
				Nombre
			</div>

			<div style="width: 85%;">
				<textarea @onchange="(e => TextoCambiaNombre(e))" class="entrada-texto" rows="1">@textoNombre</textarea>
			</div>
		</div>

		<div style="display: flex; align-items: center; margin-bottom: 20px; gap: 20px;">
			<div style="width: 15%; text-align: right;">

			</div>

			<div style="width: 85%;">
				<button @onclick="(e => AñadirPublisher(e))" class="boton-pequeño" style="padding: 10px 15px; width: auto;">
					Añadir
				</button>
			</div>
		</div>

	</div>
}

@code {

	#nullable disable

	[Parameter]
	public string id { get; set; }

	public BaseDatos.Publishers.Publisher publisher = new BaseDatos.Publishers.Publisher();

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(10);
		publisher = BaseDatos.Publishers.Buscar.Id(id);

		if (publisher != null)
		{
			textoNombre2 = publisher.Nombre;
			textoAcepciones = JsonConvert.SerializeObject(publisher.Acepciones);

			if (textoAcepciones == "null")
			{
				textoAcepciones = "[" + Strings.ChrW(34) + "acepcion" + Strings.ChrW(34) + "]";
			}
		}
	}

	private string textoNombre2 = string.Empty;

	private void TextoCambiaNombre2(ChangeEventArgs texto)
	{
		if (string.IsNullOrEmpty(texto.Value.ToString().Trim()) == false)
		{
			string nuevoTexto = texto.Value.ToString().Trim();
			publisher.Nombre = nuevoTexto;

			SqlConnection conexion = Herramientas.BaseDatos.Conectar();

			using (conexion)
			{
				BaseDatos.Publishers.Actualizar.Nombre(publisher, conexion);
			}
		}
	}

	private string textoAcepciones = string.Empty;

	private void TextoCambiaAcepciones(ChangeEventArgs texto)
	{
		if (string.IsNullOrEmpty(texto.Value.ToString().Trim()) == false)
		{
			string nuevoTexto = texto.Value.ToString().Trim();
			publisher.Acepciones = JsonConvert.DeserializeObject<List<string>>(nuevoTexto);

			SqlConnection conexion = Herramientas.BaseDatos.Conectar();

			using (conexion)
			{
				BaseDatos.Publishers.Actualizar.Acepciones(publisher, conexion);
			}
		}
	}

	//-------------------------------------------------------

	private string textoNombre = string.Empty;

	private void TextoCambiaNombre(ChangeEventArgs texto)
	{
		if (string.IsNullOrEmpty(texto.Value.ToString().Trim()) == false)
		{
			textoNombre = texto.Value.ToString().Trim();
		}
	}

	private void AñadirPublisher(MouseEventArgs e)
	{
		BaseDatos.Publishers.Publisher nuevoPublisher = new BaseDatos.Publishers.Publisher();
		nuevoPublisher.Id = id;
		nuevoPublisher.Nombre = textoNombre;
		nuevoPublisher.Descripcion = string.Empty;
		nuevoPublisher.Imagen = string.Empty;

		BaseDatos.Publishers.Insertar.Ejecutar(nuevoPublisher);

		NavManager.NavigateTo("/publisher/" + nuevoPublisher.Id, true);
	}
}
