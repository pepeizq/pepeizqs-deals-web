@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.VisualBasic;

<div class="perfil">

	<div style="display: flex; margin-bottom: 20px;">
		<div class="opciones-combobox" style="margin-left: 20px; width: 33%;">
			<select @onchange="@(e => CambiarNoticiaTipo(e))">
				@foreach (global::Noticias.NoticiaTipo tipo in global::Noticias.NoticiasCargar.CargarNoticiasTipo())
				{
					<option value="@tipo">@tipo</option>
				}
			</select>
		</div>
	</div>

	@if (noticiaTipoSeleccionada == global::Noticias.NoticiaTipo.Bundles.ToString())
	{
		<hr />

		<div class="opciones-combobox" style="margin-left: 20px; margin-top: 10px; width: 33%;">
			<select @onchange="@(e => CambiarBundle(e))">
				@foreach (Bundles2.Bundle bundle in Bundles2.BundlesCargar.GenerarListado())
				{
					<option value="@bundle.Tipo">@bundle.NombreTienda</option>
				}
			</select>
		</div>

		@if (bundleSeleccionado != null)
		{
			<div style="margin-left: 20px; margin-top: 20px;">
				@foreach (var bundle in BaseDatos.Bundles.Buscar.UnTipo(bundleSeleccionado, Herramientas.Tiempo.Actual))
				{
					<button @onclick="@(e => ClickearBundle(e, bundle.Id))" class="boton-pequeño" style="margin: 10px 0px;">
						<div style="display: flex; align-items: center;">
							<img src="@Bundles2.BundlesCargar.DevolverBundle(bundle.Tipo).ImagenTienda" style="width: 12%; margin: 10px;" />
							<div style="margin-left: 20px;">@bundle.NombreBundle</div>
						</div>
					</button>
				}
			</div>

			<hr />

			<div style="margin-left: 20px; margin-bottom: 10px;">
				<label style="margin: 10px;">Juegos:</label>
				<input type="text" class="entrada-texto" value="@juegos" />
			</div>
		}
	}
	else if (noticiaTipoSeleccionada == global::Noticias.NoticiaTipo.Gratis.ToString())
	{
		<hr />

		<div class="opciones-combobox" style="margin-left: 20px; margin-top: 10px; width: 33%;">
			<select @onchange="@(e => CambiarGratis(e))">
				@foreach (Gratis2.Gratis gratis in Gratis2.GratisCargar.GenerarListado())
				{
					<option value="@gratis.Tipo">@gratis.Nombre</option>
				}
			</select>
		</div>

		@if (gratisSeleccionado != null)
		{
			<div style="margin-left: 20px; margin-top: 20px;">
				@foreach (var gratis in BaseDatos.Gratis.Buscar.UnTipo(gratisSeleccionado, Herramientas.Tiempo.Actual).OrderBy(x => x.FechaEmpieza).Reverse().ToList())
				{
					<button @onclick="@(e => ClickearGratisJuego(e, gratis.JuegoId))" class="boton-pequeño" style="margin: 10px 0px;">
						<div style="display: flex; align-items: center;">
							@if (juegos != null)
							{
								@if (juegos.Contains(gratis.JuegoId.ToString()) == true)
								{
									<div style="margin-left: 10px; margin-right: 20px;"><i class="fa-solid fa-check"></i></div>
								}
							}

							<img src="@Gratis2.GratisCargar.DevolverGratis(gratis.Tipo).Imagen" style="width: 12%; margin: 10px;" />
							<div style="margin-left: 20px;">@gratis.Nombre</div>
						</div>
					</button>
				}
			</div>

			<hr />

			<div style="margin-left: 20px; margin-bottom: 10px;">
				<label style="margin: 10px;">Juegos:</label>
				<input type="text" class="entrada-texto" value="@juegos" />
			</div>
		}
	}
	else if (noticiaTipoSeleccionada == global::Noticias.NoticiaTipo.Suscripciones.ToString())
	{
		<hr />

		<div class="opciones-combobox" style="margin-left: 20px; margin-top: 10px; width: 33%;">
			<select @onchange="@(e => CambiarSuscripcion(e))">
				@foreach (Suscripciones2.Suscripcion suscripcion in Suscripciones2.SuscripcionesCargar.GenerarListado())
				{
					<option value="@suscripcion.Id">@suscripcion.Nombre</option>
				}
			</select>
		</div>

		@if (suscripcionSeleccionada != null)
		{
			<div style="margin-left: 20px; margin-top: 20px;">
				@foreach (var suscripcion in BaseDatos.Suscripciones.Buscar.UnTipo(suscripcionSeleccionada, Herramientas.Tiempo.Actual).OrderBy(x => x.FechaEmpieza).Reverse().ToList())
				{
					<button @onclick="@(e => ClickearSuscripcionJuego(e, suscripcion.JuegoId))" class="boton-pequeño" style="margin: 10px 0px;">
						<div style="display: flex; align-items: center;">
							@if (juegos != null)
							{
								@if (juegos.Contains(suscripcion.JuegoId.ToString()) == true)
								{
									<div style="margin-left: 10px; margin-right: 20px;"><i class="fa-solid fa-check"></i></div>
								}
							}

							<img src="@Suscripciones2.SuscripcionesCargar.DevolverSuscripcion(suscripcion.Tipo).Imagen" style="width: 12%; margin: 10px;" />
							<div style="margin-left: 20px;">@suscripcion.Nombre</div>
						</div>
					</button>
				}
			</div>

			<hr />

			<div style="margin-left: 20px; margin-bottom: 10px;">
				<label style="margin: 10px;">Juegos:</label>
				<input type="text" class="entrada-texto" value="@juegos" />
			</div>
		}
	}
	else if (noticiaTipoSeleccionada == global::Noticias.NoticiaTipo.Rumores.ToString())
	{
		<hr />

		<div style="margin-left: 20px; margin-bottom: 10px;">
			<label style="margin: 10px;">Juegos IDs:</label>
			<input type="text" class="entrada-texto" value="@juegos" />
		</div>

		<div style="margin-left: 20px; margin-bottom: 10px;">
			<label style="margin: 10px;">Juegos Buscador:</label>
			<input type="text" @oninput="TextoCambiaBuscador" class="entrada-texto" style="margin-bottom: 20px;"/>

			@if (juegosBuscador != null)
			{
				@if (juegosBuscador.Count > 0)
				{
					<div>
						@foreach (var juego in juegosBuscador)
						{
							<div class="perfil-flexible-centrado perfil-espacio-top">
								<button @onclick="@(e => SeleccionarJuego(e, @juego.Id.ToString(), juego.Imagenes.Capsule_231x87, @juego.Nombre))" class="boton-pequeño">
									<div class="perfil-flexible-centrado">
										<div style="width: 12%;">
											<img src="@juego.Imagenes.Capsule_231x87" style="max-height:100%; max-width:100%;" />
										</div>

										<div style="width: 88%; padding-left: 15px; padding-right: 15px;">
											@juego.Id - @juego.Nombre
										</div>
									</div>
								</button>
							</div>
						}
					</div>
				}
			}
		</div>
	}

	<hr />

	<div style="margin-left: 20px;">
		<label style="margin: 10px;">Título EN:</label>
		<input type="text" @onchange="@(e => CambiarTituloEn(e))" class="entrada-texto" value="@tituloEn" />
	</div>

	<div style="margin-top: 10px; margin-left: 20px; margin-bottom: 10px;">
		<label style="margin: 10px;">Título ES:</label>
		<input type="text" @onchange="@(e => CambiarTituloEs(e))" class="entrada-texto" value="@tituloEs" />
	</div>

	<hr />

	<div style="margin-left: 20px;">
		<label style="margin: 10px;">Imagen Noticia:</label>
		<input @onchange="@(e => CambiarImagenNoticia(e))" class="entrada-texto" value="@imagen">
		<img src="@imagen" style="max-width: 300px; max-height: 300px; margin-top: 10px;" />
	</div>

	<hr />

	<div style="margin-left: 20px;">
		<label style="margin: 10px;">Fecha Termina:</label>
		<input type="datetime-local" @onchange="@(e => CambiarFecha(e))" class="entrada-texto" style="width: 33%; min-width: 100px;" value="@fechaSeleccionada">
	</div>

	<div style="margin-top: 10px; margin-left: 20px; margin-bottom: 10px;">
		<label style="margin: 10px;">Enlace:</label>
		<input type="text" class="entrada-texto" value="@enlace" />
	</div>

	<hr />

	<div style="margin-left: 20px;">
		<label style="margin: 10px;">Contenido EN:</label>
		<textarea @onchange="@(e => CambiarContenidoEn(e))" class="entrada-texto" rows="8">@contenidoEn</textarea>
	</div>

	<div style="margin-top: 20px; margin-left: 20px; margin-bottom: 10px;">
		@((MarkupString)contenidoEn)
	</div>

	<hr />

	<div style="margin-left: 20px;">
		<label style="margin: 10px;">Contenido ES:</label>
		<textarea @onchange="@(e => CambiarContenidoEs(e))" class="entrada-texto" rows="8">@contenidoEs</textarea>
	</div>

	<div style="margin-top: 20px; margin-left: 20px; margin-bottom: 10px;">
		@((MarkupString)contenidoEs)
	</div>

	<hr />

	<div style="display: flex; margin-top: 20px; width: 20%;">
		<button @onclick="@(e => AñadirNoticia(e))" class="boton-pequeño" style="text-align: center;">Añadir Noticia</button>
	</div>
</div>

@code {

	#nullable disable

	private string noticiaTipoSeleccionada = null;

	private string juegos = null;
	private List<Juegos.Juego> juegosBuscador = new List<Juegos.Juego>();

	private string bundleSeleccionado = null;
	private string gratisSeleccionado = null;
	private string suscripcionSeleccionada = null;

	private string tituloEn = null;
	private string tituloEs = null;
	private string contenidoEn = null;
	private string contenidoEs = null;
	private string enlace = null;
	private string imagen = null;

	private string fechaSeleccionada = null;

	private void CambiarNoticiaTipo(ChangeEventArgs texto)
	{
		noticiaTipoSeleccionada = texto.Value.ToString();	

		//-------------------------------------------------------

		if (noticiaTipoSeleccionada == global::Noticias.NoticiaTipo.Bundles.ToString())
		{
			bundleSeleccionado = Bundles2.BundlesCargar.GenerarListado()[1].Id.ToString();
		}
		else if (noticiaTipoSeleccionada == global::Noticias.NoticiaTipo.Gratis.ToString())
		{
			gratisSeleccionado = Gratis2.GratisCargar.GenerarListado()[0].Tipo.ToString();
		}
		else if (noticiaTipoSeleccionada == global::Noticias.NoticiaTipo.Suscripciones.ToString())
		{
			suscripcionSeleccionada = Suscripciones2.SuscripcionesCargar.GenerarListado()[0].Id.ToString();
		}
	}

	private void CambiarTituloEn(ChangeEventArgs texto)
	{
		tituloEn = texto.Value.ToString();
	}

	private void CambiarTituloEs(ChangeEventArgs texto)
	{
		tituloEs = texto.Value.ToString();
	}

	private void CambiarImagenNoticia(ChangeEventArgs texto)
	{
		imagen = texto.Value.ToString();
	}

	private void CambiarContenidoEn(ChangeEventArgs texto)
	{
		contenidoEn = texto.Value.ToString();
	}

	private void CambiarContenidoEs(ChangeEventArgs texto)
	{
		contenidoEs = texto.Value.ToString();
	}

	private void CambiarFecha(ChangeEventArgs texto)
	{
		fechaSeleccionada = texto.Value.ToString();
	}

	private void AñadirNoticia(MouseEventArgs e)
	{
		global::Noticias.Noticia noticia = new global::Noticias.Noticia();

		noticia.Tipo = global::Noticias.NoticiaTipo.Bundles;
		noticia.TituloEn = tituloEn;
		noticia.TituloEs = tituloEs;
		noticia.Imagen = imagen;
		noticia.ContenidoEn = contenidoEn;
		noticia.ContenidoEs = contenidoEs;
		noticia.Juegos = juegos;
		noticia.FechaEmpieza = DateTime.Now;
		noticia.FechaTermina = Convert.ToDateTime(fechaSeleccionada);

		noticia.Enlace = enlace;

		if (noticiaTipoSeleccionada == global::Noticias.NoticiaTipo.Bundles.ToString())
		{
			noticia.BundleTipo = Bundles2.BundlesCargar.DevolverBundle(bundleSeleccionado).Tipo;
		}
		else if (noticiaTipoSeleccionada == global::Noticias.NoticiaTipo.Gratis.ToString())
		{
			noticia.GratisTipo = Gratis2.GratisCargar.DevolverGratis(gratisSeleccionado).Tipo;
		}
		else if (noticiaTipoSeleccionada == global::Noticias.NoticiaTipo.Suscripciones.ToString())
		{
			noticia.SuscripcionTipo = Suscripciones2.SuscripcionesCargar.DevolverSuscripcion(suscripcionSeleccionada).Id;
		}

		BaseDatos.Noticias.Insertar.Ejecutar(noticia);

		tituloEn = null;
		tituloEs = null;
		imagen = null;
		contenidoEn = null;
		contenidoEs = null;
		fechaSeleccionada = null;
		juegos = null;
		enlace = null;

		bundleSeleccionado = null;
		gratisSeleccionado = null;
		suscripcionSeleccionada = null;
	}

	private void TextoCambiaBuscador(ChangeEventArgs texto)
	{
		if (texto.Value.ToString().Trim().Length > 1)
		{
			juegosBuscador = BaseDatos.Juegos.Buscar.Nombre(texto.Value.ToString().Trim());
		}
		else
		{
			juegosBuscador = new List<Juegos.Juego>();
		}
	}

	private void SeleccionarJuego(MouseEventArgs e, string id, string imagen, string nombre)
	{
		if (juegos == null)
		{
			juegos = id;
		}
		else
		{
			juegos = juegos + "," + id;	
		}

		juegosBuscador = new List<Juegos.Juego>();

		if (noticiaTipoSeleccionada == global::Noticias.NoticiaTipo.Rumores.ToString())
		{
			contenidoEn = "<ul>" + Environment.NewLine;
			contenidoEs = "<ul>" + Environment.NewLine;

			foreach (string juego in Herramientas.Listados.Generar(juegos))
			{
				Juegos.Juego juegob = BaseDatos.Juegos.Buscar.UnJuego(juego);

				if (juegob != null)
				{
					contenidoEn = contenidoEn + "<li><a href=" + Strings.ChrW(34) + "/game/" + juegob.Id.ToString() + Strings.ChrW(34) + ">" + juegob.Nombre + "</a></li>" + Environment.NewLine;
					contenidoEs = contenidoEs + "<li><a href=" + Strings.ChrW(34) + "/game/" + juegob.Id.ToString() + Strings.ChrW(34) + ">" + juegob.Nombre + "</a></li>" + Environment.NewLine;
				}
			}

			contenidoEn = Environment.NewLine + contenidoEn + "</ul>";
			contenidoEs = Environment.NewLine + contenidoEs + "</ul>";
		}
	}

	#region Bundles

	private void CambiarBundle(ChangeEventArgs texto)
	{
		bundleSeleccionado = texto.Value.ToString();
	}

	private void ClickearBundle(MouseEventArgs e, int bundleId)
	{
		Bundles2.Bundle bundle = BaseDatos.Bundles.Buscar.UnBundle(bundleId);

		if (bundle != null)
		{
			juegos = null;

			for (int i = 0; i < bundle.Juegos.Count; i += 1)
			{
				if (i == 0)
				{
					juegos = bundle.Juegos[i].JuegoId;
				}
				else
				{
					juegos = juegos + "," + bundle.Juegos[i].JuegoId;
				}
			}

			fechaSeleccionada = bundle.FechaTermina.ToString("yyyy-MM-ddTHH:mm:ss");
			enlace = Herramientas.EnlaceAcortador.Generar(bundle.Enlace, bundle.Tipo);

			#region Titulo

			if (bundle.NombreBundle.ToLower().Contains("bundle") == false)
			{
				tituloEn = string.Format(Herramientas.Idiomas.CogerCadena("en-US", "News.BundleString1"), bundle.NombreBundle, bundle.NombreTienda);
				tituloEs = string.Format(Herramientas.Idiomas.CogerCadena("es-ES", "News.BundleString1"), bundle.NombreBundle, bundle.NombreTienda);
			}
			else
			{
				tituloEn = string.Format(Herramientas.Idiomas.CogerCadena("en-US", "News.BundleString5"), bundle.NombreBundle, bundle.NombreTienda);
				tituloEs = string.Format(Herramientas.Idiomas.CogerCadena("es-ES", "News.BundleString5"), bundle.NombreBundle, bundle.NombreTienda);
			}

			#endregion

			#region Contenido

			if (bundle.Pick == false)
			{
				contenidoEn = "<div style=" + Strings.ChrW(34) + "margin-bottom: 15px;" + Strings.ChrW(34) + ">" + string.Format(Herramientas.Idiomas.CogerCadena("en-US", "News.BundleString2"), bundle.NombreTienda) + "</div>";
				contenidoEs = "<div style=" + Strings.ChrW(34) + "margin-bottom: 15px;" + Strings.ChrW(34) + ">" + string.Format(Herramientas.Idiomas.CogerCadena("es-ES", "News.BundleString2"), bundle.NombreTienda) + "</div>";

				foreach (var tier in bundle.Tiers.OrderBy(x => x.Posicion))
				{
					string precio = tier.Precio;
					precio = precio.Replace(".", ",");
					precio = precio + "€";

					contenidoEn = contenidoEn + "<div>Tier " + tier.Posicion + " (" + precio + "):<ul>";
					contenidoEs = contenidoEs + "<div>Tier " + tier.Posicion + " (" + precio + "):<ul>";

					foreach (var juego in bundle.Juegos)
					{
						if (juego.Tier.Posicion == tier.Posicion)
						{
							contenidoEn = contenidoEn + "<li><a href=" + Strings.ChrW(34) + Herramientas.EnlaceAcortador.Generar(bundle.Enlace, bundle.Tipo) + Strings.ChrW(34) + " target=" + Strings.ChrW(34) + "_blank" + Strings.ChrW(34) + ">" + juego.Nombre + " (" + Juegos.JuegoDRM2.DevolverDRM(juego.DRM) + ")</a></li>";
							contenidoEs = contenidoEs + "<li><a href=" + Strings.ChrW(34) + Herramientas.EnlaceAcortador.Generar(bundle.Enlace, bundle.Tipo) + Strings.ChrW(34) + " target=" + Strings.ChrW(34) + "_blank" + Strings.ChrW(34) + ">" + juego.Nombre + " (" + Juegos.JuegoDRM2.DevolverDRM(juego.DRM) + ")</a></li>";
						}
					}

					contenidoEn = contenidoEn + "</ul></div>";
					contenidoEs = contenidoEs + "</ul></div>";
				}
			}
			else
			{
				contenidoEn = "<div style=" + Strings.ChrW(34) + "margin-bottom: 15px;" + Strings.ChrW(34) + ">" + string.Format(Herramientas.Idiomas.CogerCadena("en-US", "News.BundleString3"), bundle.NombreTienda) + "</div>";
				contenidoEs = "<div style=" + Strings.ChrW(34) + "margin-bottom: 15px;" + Strings.ChrW(34) + ">" + string.Format(Herramientas.Idiomas.CogerCadena("es-ES", "News.BundleString3"), bundle.NombreTienda) + "</div>";

				foreach (var tier in bundle.Tiers)
				{
					string precio = tier.Precio;
					precio = precio.Replace(".", ",");
					precio = precio + "€";

					contenidoEn = contenidoEn + "<div style=" + Strings.ChrW(34) + "margin-bottom: 15px;" + Strings.ChrW(34) + ">" + tier.CantidadJuegos.ToString() + " " + Herramientas.Idiomas.CogerCadena("en-US", "News.BundleString4") + " (" + precio + ")</div>";
					contenidoEs = contenidoEs + "<div style=" + Strings.ChrW(34) + "margin-bottom: 15px;" + Strings.ChrW(34) + ">" + tier.CantidadJuegos.ToString() + " " + Herramientas.Idiomas.CogerCadena("es-ES", "News.BundleString4") + " (" + precio + ")</div>";
				}

				contenidoEn = contenidoEn + "<div><ul>";
				contenidoEs = contenidoEs + "<div><ul>";

				foreach (var juego in bundle.Juegos)
				{
					contenidoEn = contenidoEn + "<li><a href=" + Strings.ChrW(34) + Herramientas.EnlaceAcortador.Generar(bundle.Enlace, bundle.Tipo) + Strings.ChrW(34) + " target=" + Strings.ChrW(34) + "_blank" + Strings.ChrW(34) + ">" + juego.Nombre + " (" + Juegos.JuegoDRM2.DevolverDRM(juego.DRM) + ")</a></li>";
					contenidoEs = contenidoEs + "<li><a href=" + Strings.ChrW(34) + Herramientas.EnlaceAcortador.Generar(bundle.Enlace, bundle.Tipo) + Strings.ChrW(34) + " target=" + Strings.ChrW(34) + "_blank" + Strings.ChrW(34) + ">" + juego.Nombre + " (" + Juegos.JuegoDRM2.DevolverDRM(juego.DRM) + ")</a></li>";
				}

				contenidoEn = contenidoEn + "</ul></div>";
				contenidoEs = contenidoEs + "</ul></div>";
			}

			#endregion

			#region Imagen

			if (bundle.ImagenNoticia != null)
			{
				imagen = bundle.ImagenNoticia;
			}

			#endregion
		}
	}

	#endregion

	#region Gratis

	private void CambiarGratis(ChangeEventArgs texto)
	{
		gratisSeleccionado = texto.Value.ToString();
	}

	private void ClickearGratisJuego(MouseEventArgs e, int juegoId)
	{
		if (string.IsNullOrEmpty(juegos) == true)
		{
			juegos = juegoId.ToString();
		}
		else
		{
			if (juegos.Contains(juegoId.ToString()) == false)
			{
				juegos = juegos + "," + juegoId.ToString();
			}
			else
			{
				int int1 = juegos.IndexOf(juegoId.ToString() + ",");

				if (int1 == -1)
				{
					int1 = juegos.IndexOf(juegoId.ToString());
					juegos = juegos.Remove(int1, juegoId.ToString().Length);
				}
				else
				{
					juegos = juegos.Remove(int1, juegoId.ToString().Length + 1);
				}

				if (juegos.Trim().Length == 1)
				{
					juegos = null;
				}
			}
		}

		List<string> lista = Herramientas.Listados.Generar(juegos);

		if (lista != null)
		{
			#region Titulo

			if (lista.Count == 1)
			{
				tituloEn = BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[0])).Nombre + " " + Herramientas.Idiomas.CogerCadena("en-US", "News.FreeString1");
				tituloEs = BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[0])).Nombre + " " + Herramientas.Idiomas.CogerCadena("es-ES", "News.FreeString1");
			}
			else if (lista.Count == 2)
			{
				tituloEn = BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[0])).Nombre + " " + Herramientas.Idiomas.CogerCadena("en-US", "News.FreeString2") + " " +
					BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[1])).Nombre + " " + Herramientas.Idiomas.CogerCadena("en-US", "News.FreeString3");
				tituloEs = BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[0])).Nombre + " " + Herramientas.Idiomas.CogerCadena("es-ES", "News.FreeString2") + " " +
					BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[1])).Nombre + " " + Herramientas.Idiomas.CogerCadena("es-ES", "News.FreeString3");
			}
			else if (lista.Count > 2)
			{
				tituloEn = BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[0])).Nombre + ", " +
					BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[1])).Nombre + " " + Herramientas.Idiomas.CogerCadena("en-US", "News.FreeString4");
				tituloEs = BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[0])).Nombre + ", " +
					BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[1])).Nombre + " " + Herramientas.Idiomas.CogerCadena("es-ES", "News.FreeString4");
			}

			tituloEn = tituloEn + " " + Gratis2.GratisCargar.DevolverGratis(gratisSeleccionado).Nombre;
			tituloEs = tituloEs + " " + Gratis2.GratisCargar.DevolverGratis(gratisSeleccionado).Nombre;

			#endregion

			#region Contenido

			if (lista.Count == 1)
			{
				contenidoEn = Gratis2.GratisCargar.DevolverGratis(gratisSeleccionado).Nombre + " " + Herramientas.Idiomas.CogerCadena("en-US", "News.FreeString5");
				contenidoEs = Gratis2.GratisCargar.DevolverGratis(gratisSeleccionado).Nombre + " " + Herramientas.Idiomas.CogerCadena("es-ES", "News.FreeString5");
			}
			else if (lista.Count > 1)
			{
				contenidoEn = Gratis2.GratisCargar.DevolverGratis(gratisSeleccionado).Nombre + " " + Herramientas.Idiomas.CogerCadena("en-US", "News.FreeString6");
				contenidoEs = Gratis2.GratisCargar.DevolverGratis(gratisSeleccionado).Nombre + " " + Herramientas.Idiomas.CogerCadena("es-ES", "News.FreeString6");
			}

			contenidoEn = contenidoEn + Environment.NewLine + "<ul>" + Environment.NewLine;
			contenidoEs = contenidoEs + Environment.NewLine + "<ul>" + Environment.NewLine;

			foreach (var juego in lista)
			{
				Juegos.JuegoGratis gratis = BaseDatos.Gratis.Buscar.UnJuego(int.Parse(juego));

				if (gratis != null)
				{
					if (lista.Count == 1)
					{
						enlace = Herramientas.EnlaceAcortador.Generar(gratis.Enlace, gratis.Tipo);
					}

					if (Gratis2.GratisCargar.DevolverGratis(gratisSeleccionado).DRMEnseñar == true)
					{
						contenidoEn = contenidoEn + "<li><a href=" + Strings.ChrW(34) + Herramientas.EnlaceAcortador.Generar(gratis.Enlace, gratis.Tipo) + Strings.ChrW(34) + " target=" + Strings.ChrW(34) + "_blank" + Strings.ChrW(34) + ">" + gratis.Nombre + " (" + Juegos.JuegoDRM2.DevolverDRM(gratis.DRM) + ")</a></li>" + Environment.NewLine;
						contenidoEs = contenidoEs + "<li><a href=" + Strings.ChrW(34) + Herramientas.EnlaceAcortador.Generar(gratis.Enlace, gratis.Tipo) + Strings.ChrW(34) + " target=" + Strings.ChrW(34) + "_blank" + Strings.ChrW(34) + ">" + gratis.Nombre + " (" + Juegos.JuegoDRM2.DevolverDRM(gratis.DRM) + ")</a></li>" + Environment.NewLine;
					}
					else
					{
						contenidoEn = contenidoEn + "<li><a href=" + Strings.ChrW(34) + Herramientas.EnlaceAcortador.Generar(gratis.Enlace, gratis.Tipo) + Strings.ChrW(34) + " target=" + Strings.ChrW(34) + "_blank" + Strings.ChrW(34) + ">" + gratis.Nombre + "</a></li>" + Environment.NewLine;
						contenidoEs = contenidoEs + "<li><a href=" + Strings.ChrW(34) + Herramientas.EnlaceAcortador.Generar(gratis.Enlace, gratis.Tipo) + Strings.ChrW(34) + " target=" + Strings.ChrW(34) + "_blank" + Strings.ChrW(34) + ">" + gratis.Nombre + "</a></li>" + Environment.NewLine;
					}
				}
			}

			contenidoEn = contenidoEn + "</ul>";
			contenidoEs = contenidoEs + "</ul>";

			#endregion

			#region Imagen

			if (BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[0])).ImagenNoticia != null)
			{
				imagen = BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[0])).ImagenNoticia;
			}
			else
			{
				Juegos.Juego juego = BaseDatos.Juegos.Buscar.UnJuego(BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[0])).JuegoId.ToString());
				imagen = juego.Imagenes.Library_1920x620;
			}

			#endregion

			#region Fecha

			fechaSeleccionada = BaseDatos.Gratis.Buscar.UnJuego(int.Parse(lista[0])).FechaTermina.ToString("yyyy-MM-ddTHH:mm:ss");

			#endregion
		}
		else
		{
			tituloEn = null;
			tituloEs = null;

			contenidoEn = null;
			contenidoEs = null;

			imagen = null;

			fechaSeleccionada = null;
		}
	}

	#endregion

	#region Suscripciones	

	private void CambiarSuscripcion(ChangeEventArgs texto)
	{
		suscripcionSeleccionada = texto.Value.ToString();
	}

	private void ClickearSuscripcionJuego(MouseEventArgs e, int juegoId)
	{
		if (string.IsNullOrEmpty(juegos) == true)
		{
			juegos = juegoId.ToString();
		}
		else
		{
			if (juegos.Contains(juegoId.ToString()) == false)
			{
				juegos = juegos + "," + juegoId.ToString();
			}
			else
			{
				int int1 = juegos.IndexOf(juegoId.ToString() + ",");

				if (int1 == -1)
				{
					int1 = juegos.IndexOf(juegoId.ToString());
					juegos = juegos.Remove(int1, juegoId.ToString().Length);
				}
				else
				{
					juegos = juegos.Remove(int1, juegoId.ToString().Length + 1);
				}

				if (juegos.Trim().Length == 1)
				{
					juegos = null;
				}
			}
		}

		List<string> lista = Herramientas.Listados.Generar(juegos);

		if (lista != null)
		{
			#region Titulo

			if (lista.Count == 1)
			{
				tituloEn = BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[0])).Nombre + " " + string.Format(Herramientas.Idiomas.CogerCadena("en-US", "News.SubscriptionString1"), Suscripciones2.SuscripcionesCargar.DevolverSuscripcion(suscripcionSeleccionada).Nombre);
				tituloEs = BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[0])).Nombre + " " + string.Format(Herramientas.Idiomas.CogerCadena("es-ES", "News.SubscriptionString1"), Suscripciones2.SuscripcionesCargar.DevolverSuscripcion(suscripcionSeleccionada).Nombre);
			}
			else if (lista.Count == 2)
			{
				tituloEn = BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[0])).Nombre + " " + Herramientas.Idiomas.CogerCadena("en-US", "News.SubscriptionString2") + " " +
					BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[1])).Nombre + " " + string.Format(Herramientas.Idiomas.CogerCadena("en-US", "News.SubscriptionString3"), Suscripciones2.SuscripcionesCargar.DevolverSuscripcion(suscripcionSeleccionada).Nombre);
				tituloEs = BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[0])).Nombre + " " + Herramientas.Idiomas.CogerCadena("es-ES", "News.SubscriptionString2") + " " +
					BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[1])).Nombre + " " + string.Format(Herramientas.Idiomas.CogerCadena("es-ES", "News.SubscriptionString3"), Suscripciones2.SuscripcionesCargar.DevolverSuscripcion(suscripcionSeleccionada).Nombre);
			}
			else if (lista.Count > 2)
			{
				tituloEn = BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[0])).Nombre + ", " +
					BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[1])).Nombre + " " + string.Format(Herramientas.Idiomas.CogerCadena("en-US", "News.SubscriptionString4"), Suscripciones2.SuscripcionesCargar.DevolverSuscripcion(suscripcionSeleccionada).Nombre);
				tituloEs = BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[0])).Nombre + ", " +
					BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[1])).Nombre + " " + string.Format(Herramientas.Idiomas.CogerCadena("es-ES", "News.SubscriptionString4"), Suscripciones2.SuscripcionesCargar.DevolverSuscripcion(suscripcionSeleccionada).Nombre);
			}

			#endregion

			#region Contenido

			contenidoEn = Herramientas.Idiomas.CogerCadena("en-US", "News.SubscriptionString5") + " " + Suscripciones2.SuscripcionesCargar.DevolverSuscripcion(suscripcionSeleccionada).Nombre + " ";
			contenidoEs = Herramientas.Idiomas.CogerCadena("es-ES", "News.SubscriptionString5") + " " + Suscripciones2.SuscripcionesCargar.DevolverSuscripcion(suscripcionSeleccionada).Nombre + " ";

			if (lista.Count == 1)
			{
				contenidoEn = contenidoEn + Herramientas.Idiomas.CogerCadena("en-US", "News.SubscriptionString6");
				contenidoEs = contenidoEs + Herramientas.Idiomas.CogerCadena("es-ES", "News.SubscriptionString6");
			}
			else if (lista.Count > 1)
			{
				contenidoEn = contenidoEn + Herramientas.Idiomas.CogerCadena("en-US", "News.SubscriptionString7");
				contenidoEs = contenidoEs + Herramientas.Idiomas.CogerCadena("es-ES", "News.SubscriptionString7");
			}

			contenidoEn = contenidoEn + Environment.NewLine + "<ul>" + Environment.NewLine;
			contenidoEs = contenidoEs + Environment.NewLine + "<ul>" + Environment.NewLine;

			bool mismoEnlace = true;
			string enlaceSuscripcion = string.Empty;

			foreach (var juego in lista)
			{
				Juegos.JuegoSuscripcion suscripcion = BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(juego));

				if (suscripcion != null)
				{
					if (enlaceSuscripcion == string.Empty)
					{
						enlaceSuscripcion = Herramientas.EnlaceAcortador.Generar(suscripcion.Enlace, suscripcion.Tipo);
					}
					else
					{
						if (enlaceSuscripcion != Herramientas.EnlaceAcortador.Generar(suscripcion.Enlace, suscripcion.Tipo))
						{
							mismoEnlace = false;
						}
					}

					contenidoEn = contenidoEn + "<li><a href=" + Strings.ChrW(34) + Herramientas.EnlaceAcortador.Generar(suscripcion.Enlace, suscripcion.Tipo) + Strings.ChrW(34) + " target=" + Strings.ChrW(34) + "_blank" + Strings.ChrW(34) + ">" + suscripcion.Nombre + " (" + Juegos.JuegoDRM2.DevolverDRM(suscripcion.DRM) + ")</a></li>" + Environment.NewLine;
					contenidoEs = contenidoEs + "<li><a href=" + Strings.ChrW(34) + Herramientas.EnlaceAcortador.Generar(suscripcion.Enlace, suscripcion.Tipo) + Strings.ChrW(34) + " target=" + Strings.ChrW(34) + "_blank" + Strings.ChrW(34) + ">" + suscripcion.Nombre + " (" + Juegos.JuegoDRM2.DevolverDRM(suscripcion.DRM) + ")</a></li>" + Environment.NewLine;
				}
			}

			if (mismoEnlace == true)
			{
				enlace = enlaceSuscripcion;
			}
			else
			{
				enlace = null;
			}

			contenidoEn = contenidoEn + "</ul>";
			contenidoEs = contenidoEs + "</ul>";

			#endregion

			#region Imagen

			if (BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[0])).ImagenNoticia != null)
			{
				imagen = BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[0])).ImagenNoticia;
			}
			else
			{
				Juegos.Juego juego = BaseDatos.Juegos.Buscar.UnJuego(BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[0])).JuegoId.ToString());
				imagen = juego.Imagenes.Library_1920x620;
			}

			#endregion

			#region Fecha

			fechaSeleccionada = BaseDatos.Suscripciones.Buscar.UnJuego(int.Parse(lista[0])).FechaTermina.ToString("yyyy-MM-ddTHH:mm:ss");

			#endregion
		}
		else
		{
			tituloEn = null;
			tituloEs = null;

			contenidoEn = null;
			contenidoEs = null;

			imagen = null;

			fechaSeleccionada = null;
		}
	}

	#endregion
}
