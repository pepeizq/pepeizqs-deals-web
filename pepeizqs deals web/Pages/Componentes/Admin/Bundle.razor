@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Data.SqlClient

@if (bundle != null)
{
	<div style="padding: 20px; background: var(--fondoCuerpo); border: 1px solid var(--fondoBotonPequeño); display: flex; flex-direction: column; gap: 20px;">
		<div style="display: flex; align-items: center;">
			<div style="width: 100%;">
				Admin Editar • @bundle.NombreBundle
			</div>
		</div>

		<div style="display: flex; align-items: center;">
			<div style="width: 15%; padding-right: 20px; text-align: right;">
				Nombre
			</div>

			<div style="width: 85%;">
				<textarea @onchange="(e => TextoCambiaNombre(e))" class="entrada-texto" rows="1">@textoNombre</textarea>
			</div>
		</div>

		<div style="display: flex; align-items: start;">
			<div style="width: 15%; padding-right: 20px; text-align: right; margin-top: 5px;">
				Imagen Bundle
			</div>

			<div style="width: 85%;">
				<textarea @onchange="(e => TextoCambiaImagenBundle(e))" class="entrada-texto" rows="1">@textoImagenBundle</textarea>
				<img src="@textoImagenBundle" style="max-width: 250px; max-height: 250px; margin-top: 5px;"/>
			</div>
		</div>

		<div style="display: flex; align-items: start;">
			<div style="width: 15%; padding-right: 20px; text-align: right; margin-top: 5px;">
				Imagen Noticia
			</div>

			<div style="width: 85%;">
				<textarea @onchange="(e => TextoCambiaImagenNoticia(e))" class="entrada-texto" rows="1">@textoImagenNoticia</textarea>
				<img src="@textoImagenNoticia" style="max-width: 250px; max-height: 250px; margin-top: 5px;" />
			</div>
		</div>

		<div style="display: flex; align-items: center;">
			<div style="width: 15%; padding-right: 20px; text-align: right;">
				Fecha Empieza
			</div>

			<div style="width: 85%;">
				<textarea @onchange="(e => TextoCambiaFechaEmpieza(e))" class="entrada-texto" rows="1">@textoFechaEmpieza</textarea>
			</div>
		</div>

		<div style="display: flex; align-items: center;">
			<div style="width: 15%; padding-right: 20px; text-align: right;">
				Fecha Termina
			</div>

			<div style="width: 85%;">
				<textarea @onchange="(e => TextoCambiaFechaTermina(e))" class="entrada-texto" rows="1">@textoFechaTermina</textarea>
			</div>
		</div>

		<div style="display: flex; align-items: start;">
			<div style="width: 15%; padding-right: 20px; text-align: right; margin-top: 5px;">
				Juegos
			</div>

			<div style="width: 85%;">
				<textarea @onchange="(e => TextoCambiaJuegos(e))" class="entrada-texto" rows="5">@textoJuegos</textarea>
			</div>
		</div>

		<div style="display: flex; align-items: start;">
			<div style="width: 15%; padding-right: 20px; text-align: right; margin-top: 5px;">
				Tiers
			</div>

			<div style="width: 85%;">
				<textarea @onchange="(e => TextoCambiaTiers(e))" class="entrada-texto" rows="2">@textoTiers</textarea>
			</div>
		</div>
	</div>

	<hr/>
}

@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	[Parameter]
	public int bundleId { get; set; }

	public Bundles2.Bundle bundle = new Bundles2.Bundle();

	protected override void OnInitialized()
	{
		bundle = BaseDatos.Bundles.Buscar.UnBundle(bundleId);

		if (bundle != null)
		{
			textoNombre = bundle.NombreBundle;
			textoImagenBundle = bundle.ImagenBundle;
			textoImagenNoticia = bundle.ImagenNoticia;
			textoFechaEmpieza = bundle.FechaEmpieza.ToString();
			textoFechaTermina = bundle.FechaTermina.ToString();
			textoJuegos = Newtonsoft.Json.JsonConvert.SerializeObject(bundle.Juegos);
			textoTiers = Newtonsoft.Json.JsonConvert.SerializeObject(bundle.Tiers);
		}
	}

	private string textoNombre = string.Empty;

	private void TextoCambiaNombre(ChangeEventArgs texto)
	{
		if (string.IsNullOrEmpty(texto.Value.ToString().Trim()) == false)
		{
			string nuevoTexto = texto.Value.ToString().Trim();

			SqlConnection conexion = Herramientas.BaseDatos.Conectar();

			using (conexion)
			{
				BaseDatos.Bundles.Actualizar.Nombre(bundleId.ToString(), nuevoTexto, conexion);
			}
		}
	}

	private string textoImagenBundle = string.Empty;

	private void TextoCambiaImagenBundle(ChangeEventArgs texto)
	{
		if (string.IsNullOrEmpty(texto.Value.ToString().Trim()) == false)
		{
			string nuevoTexto = texto.Value.ToString().Trim();

			SqlConnection conexion = Herramientas.BaseDatos.Conectar();

			using (conexion)
			{
				BaseDatos.Bundles.Actualizar.ImagenBundle(bundleId.ToString(), nuevoTexto, conexion);
			}
		}
	}

	private string textoImagenNoticia = string.Empty;

	private void TextoCambiaImagenNoticia(ChangeEventArgs texto)
	{
		if (string.IsNullOrEmpty(texto.Value.ToString().Trim()) == false)
		{
			string nuevoTexto = texto.Value.ToString().Trim();

			SqlConnection conexion = Herramientas.BaseDatos.Conectar();

			using (conexion)
			{
				BaseDatos.Bundles.Actualizar.ImagenNoticia(bundleId.ToString(), nuevoTexto, conexion);
			}
		}
	}

	private string textoFechaEmpieza = string.Empty;

	private void TextoCambiaFechaEmpieza(ChangeEventArgs texto)
	{
		if (string.IsNullOrEmpty(texto.Value.ToString().Trim()) == false)
		{
			string nuevoTexto = texto.Value.ToString().Trim();

			SqlConnection conexion = Herramientas.BaseDatos.Conectar();

			using (conexion)
			{
				BaseDatos.Bundles.Actualizar.FechaEmpieza(bundleId.ToString(), nuevoTexto, conexion);
			}
		}
	}

	private string textoFechaTermina = string.Empty;

	private void TextoCambiaFechaTermina(ChangeEventArgs texto)
	{
		if (string.IsNullOrEmpty(texto.Value.ToString().Trim()) == false)
		{
			string nuevoTexto = texto.Value.ToString().Trim();

			SqlConnection conexion = Herramientas.BaseDatos.Conectar();

			using (conexion)
			{
				BaseDatos.Bundles.Actualizar.FechaTermina(bundleId.ToString(), nuevoTexto, conexion);
			}
		}
	}

	private string textoJuegos = string.Empty;

	private void TextoCambiaJuegos(ChangeEventArgs texto)
	{
		if (string.IsNullOrEmpty(texto.Value.ToString().Trim()) == false)
		{
			string nuevoTexto = texto.Value.ToString().Trim();

			SqlConnection conexion = Herramientas.BaseDatos.Conectar();

			using (conexion)
			{
				BaseDatos.Bundles.Actualizar.Juegos(bundleId.ToString(), nuevoTexto, conexion);
			}
		}
	}

	private string textoTiers = string.Empty;

	private void TextoCambiaTiers(ChangeEventArgs texto)
	{
		if (string.IsNullOrEmpty(texto.Value.ToString().Trim()) == false)
		{
			string nuevoTexto = texto.Value.ToString().Trim();

			SqlConnection conexion = Herramientas.BaseDatos.Conectar();

			using (conexion)
			{
				BaseDatos.Bundles.Actualizar.Tiers(bundleId.ToString(), nuevoTexto, conexion);
			}
		}
	}
}
