@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Data.SqlClient
@using Tiendas2

<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 40px;">
    <label>@TareasUso()</label>
    <hr />
    <div style="display: flex; flex-direction: column; gap: 20px;">
        @foreach (Tienda tienda in TiendasCargar.GenerarListado())
        {
            if (tienda.AdminEnseñar == true)
            {
                @if (tienda.AdminInteractuar == true)
                {
                    <button @onclick="(e => ClickearTienda(e, tienda.Id))" class="boton-pequeño" style="height: fit-content; padding: 20px 30px;">
                        <div style="display: flex; align-items: center; gap: 20px;">
                            <img src="@tienda.ImagenIcono" style="height: 22px;" />
                            <div>@tienda.Nombre</div>

                            <div class="admin-tiempohace" style="text-align: right;">@BaseDatos.Admin.Buscar.TiendasMensaje(tienda.Id)</div>
                        </div>
                    </button>
                }
                else
                {
                    <div style="display: flex; align-items: center; height: fit-content; padding: 20px 30px;">
                        <div style="display: flex; align-items: center; gap: 20px;">
                            <img src="@tienda.ImagenIcono" style="height: 22px;" />
                            <div>@tienda.Nombre</div>

                            <div class="admin-tiempohace" style="text-align: right;">@BaseDatos.Admin.Buscar.TiendasMensaje(tienda.Id)</div>
                        </div>
                    </div>
                }
            }
        }

        @foreach (var suscripcion in Suscripciones2.SuscripcionesCargar.GenerarListado())
        {
            if (string.IsNullOrEmpty(BaseDatos.Admin.Buscar.TiendasMensaje(suscripcion.Id.ToString())) == false)
            {
                <button @onclick="(e => ClickearSuscripcionStreaming(e, suscripcion.Id.ToString()))" class="boton-pequeño" style="height: fit-content; padding: 20px 30px;">
                    <div style="display: flex; align-items: center; gap: 20px;">
                        <img src="@suscripcion.ImagenIcono" style="height: 22px;" />
                        <div>@suscripcion.Nombre</div>

                        <div class="admin-tiempohace" style="text-align: right;">@BaseDatos.Admin.Buscar.TiendasMensaje(suscripcion.Id.ToString())</div>
                    </div>
                </button>
            }
        }

        @foreach (var streaming in Streaming2.StreamingCargar.GenerarListado())
        {
            <button @onclick="(e => ClickearSuscripcionStreaming(e, streaming.Id.ToString()))" class="boton-pequeño" style="height: fit-content; padding: 20px 30px;">
                <div style="display: flex; align-items: center; gap: 20px;">
                    <img src="@streaming.ImagenIcono" style="height: 22px;" />
                    <div>@streaming.Nombre</div>

                    <div class="admin-tiempohace" style="text-align: right;">@BaseDatos.Admin.Buscar.TiendasMensaje(streaming.Id.ToString())</div>
                </div>
            </button>
        }
    </div>

</div>

@code {

    #nullable disable

    [Inject]
    protected Herramientas.IDecompiladores decompilador { get; set; }

    private SqlConnection conexion = new SqlConnection();

    private async Task ClickearTienda(MouseEventArgs e, string id)
    {
        if (string.IsNullOrEmpty(id) == false)
        {
            await TiendasCargar.AdminTiendas(id, decompilador);
        }
    }

    private void ClickearSuscripcionStreaming(MouseEventArgs e, string id)
    {
        if (string.IsNullOrEmpty(id) == false)
        {
            if (conexion.State != System.Data.ConnectionState.Open)
            {
                conexion = Herramientas.BaseDatos.Conectar();
            }

            using (conexion)
            {
                BaseDatos.Admin.AdminTarea tarea = BaseDatos.Admin.Buscar.Tarea(id, conexion);

                if (tarea != null)
                {
                    DateTime fecha = DateTime.Now;
                    fecha = fecha - TimeSpan.FromDays(1);

                    BaseDatos.Admin.Actualizar.Tiendas(tarea.Id, fecha, tarea.Mensaje, conexion);
                }
            }
        }
    }

    private string TareasUso()
    {
        string info = String.Empty;

        BaseDatos.Admin.AdminTarea enUso = new BaseDatos.Admin.AdminTarea();

        if (conexion.State != System.Data.ConnectionState.Open)
        {
            conexion = Herramientas.BaseDatos.Conectar();
        }

        using (conexion)
        {
            enUso = BaseDatos.Admin.Buscar.TiendasEnUso(TimeSpan.FromSeconds(60), conexion);
        }

        if (enUso != null)
        {
            info = "Comprobando: " + enUso.Id;
        }

        return info;
    }
}
