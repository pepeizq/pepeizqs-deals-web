@using Microsoft.AspNetCore.Components.Web;

<div class="perfil">
	<div style="display: flex; justify-content: space-between;">
		<div style="width: 30%;">
			@foreach (var tienda in Tiendas2.TiendasCargar.GenerarListado())
			{
				@if (tienda.Id != "steam")
				{
					<button @onclick="@(e => ClickearTienda(e, tienda.Id))" class="boton-pequeño" style="margin: 10px;"><img src="@tienda.ImagenIcono" style="margin: 0px 8px; height: 16px; width: 16px;" /> @tienda.Nombre (@BaseDatos.Pendientes.LeerCantidad.Ejecutar(tienda.Id))</button>
				}
			}
		</div>

		<div style="width: 65%;">
			<div style="display: flex; justify-content: space-between;">
				<div style="width: 30%;">
					<a href="@enlacePendiente" target="_blank" style="text-decoration: none;"><img src="@imagenPendiente" style="width: 100%;" /></a>
				</div>
				
				<div style="width: 70%; margin-left: 20px;">
					<div style="margin-bottom: 20px;">
						<a href="@enlacePendiente" target="_blank" style="text-decoration: none;">@nombrePendiente</a>
					</div>

					<div>
						<textarea @oninput="TextoCambia" class="entrada-texto" style="margin: 10px 0px;" value="@idsPendiente" rows="1" />
					</div>

					<div style="display: flex; align-items: center; margin: 20px 0px;">
						<div>
							<button @onclick="@(e => ClickearDescartar(e, @enlacePendiente))" class="boton-pequeño" style="width: 130px; text-align: center;">Descartar</button>
						</div>

						<div>
							<button @onclick="@(e => ClickearBuscar(e, @nombrePendiente))" class="boton-pequeño" style="margin-left: 20px; width: 130px; text-align: center;">Buscar</button>
						</div>

						<div>
							<button @onclick="@(e => ClickearActualizar(e, @enlacePendiente))" class="boton-pequeño" style="margin-left: 20px; width: 130px; text-align: center;">Actualizar</button>
						</div>
					</div>
				</div>
			</div>

			<div style="margin-top: 40px;">
				<input type="text" @oninput="TextoCambiaBuscador" class="entrada-texto" />

				@if (juegosBuscador != null)
				{
					@if (juegosBuscador.Count > 0)
					{
						<div>
							@foreach (var juego in juegosBuscador)
							{
								<div class="perfil-flexible-centrado perfil-espacio-top">
									<a class="boton-pequeño">
										<div class="perfil-flexible-centrado">
											<div style="width: 12%;">
												<img src="@juego.Imagenes.Capsule_231x87" style="max-height:100%; max-width:100%;" />
											</div>

											<div style="width: 76%; padding-left: 15px; padding-right: 15px;">
												@juego.Id - @juego.Nombre
											</div>

											<div class="admin-busqueda-juego-derecha">
												<button @onclick="@(e => ClickearID(e, @juego.Id.ToString()))" class="boton-pequeño" style="text-align:center;">Añadir ID</button>
											</div>

											<div class="admin-busqueda-juego-derecha">
												<button @onclick="@(e => ClickearBorrar(e, @juego.Id.ToString()))" class="boton-pequeño-peligro">Borrar</button>
											</div>
										</div>
									</a>
								</div>
							}
						</div>
					}
				}
			</div>
		</div>
	</div>
</div>

@code {

	#nullable disable

	private string idTienda = null;
	private string imagenPendiente = null;
	private string nombrePendiente = null;
	private string enlacePendiente = null;
	private string idsPendiente = "0";
	private string cadenaBusqueda = null;

	private void ClickearTienda(MouseEventArgs e, string id)
	{
		idTienda = id;

		ClickearTienda(idTienda);
	}

	private void ClickearTienda(string id)
	{
		BaseDatos.Pendientes.Pendiente pendiente = BaseDatos.Pendientes.LeerJuego.Ejecutar(id);

		nombrePendiente = pendiente.nombre;

		string imagen = pendiente.imagen;

		if (imagen != null)
		{
			imagen = imagen.Replace("&amp;", "&");
		}

		imagenPendiente = imagen;

		enlacePendiente = pendiente.enlace;

		idsPendiente = BaseDatos.Pendientes.BuscarJuego.Ejecutar(nombrePendiente);
	}

	private void ClickearDescartar(MouseEventArgs e, string enlace)
	{
		BaseDatos.Pendientes.DescartarJuego.Ejecutar(idTienda, enlace);

		ClickearTienda(idTienda);
	}

	private void ClickearBuscar(MouseEventArgs e, string nombre)
	{
		idsPendiente = BaseDatos.Pendientes.BuscarJuego.Ejecutar(nombre);
	}

	private void ClickearActualizar(MouseEventArgs e, string enlace)
	{
		BaseDatos.Pendientes.ActualizarJuego.Ejecutar(idTienda, enlace, idsPendiente);

		ClickearTienda(idTienda);
	}

	private void TextoCambia(ChangeEventArgs texto)
	{
		idsPendiente = texto.Value.ToString();
	}

	//--------------------------------------------------------------------------------------------

	List<Juegos.Juego> juegosBuscador = new List<Juegos.Juego>();

	private void TextoCambiaBuscador(ChangeEventArgs texto)
	{
		if (texto.Value.ToString().Trim().Length > 1)
		{
			cadenaBusqueda = texto.Value.ToString().Trim();
			juegosBuscador = BaseDatos.Juegos.Buscar.Nombre(cadenaBusqueda);
		}
		else
		{
			juegosBuscador = new List<Juegos.Juego>();
		}
	}

	private void ClickearID(MouseEventArgs e, string id)
	{
		if (idsPendiente == null)
		{
			idsPendiente = id;
		}
		else
		{
			if (idsPendiente != "0")
			{
				idsPendiente = idsPendiente + "," + id;
			}
			else
			{
				idsPendiente = id;
			}
		}	
	}

	private void ClickearBorrar(MouseEventArgs e, string id)
	{
		BaseDatos.Juegos.Borrar.Ejecutar(id);

		juegosBuscador = BaseDatos.Juegos.Buscar.Nombre(cadenaBusqueda);
	}
}
