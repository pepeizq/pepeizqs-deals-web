@using Blazored.Video
@using Juegos
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@using Microsoft.VisualBasic

@inject NavigationManager NavManager
@inject IJSRuntime JavaScript

<style>
	.cjuego-titulo {
	padding: 10px 20px;
	}

	.cjuego-fecha {
	font-size: 14px;
	}

	.cjuego-descuento {
	font-size: 16px;
	padding: 10px 15px;
	min-width: 65px;
	}

	.cjuego-precio {
	font-size: 18px;
	min-width: 110px;
	}

	@@media (max-width: 800px) {
	.cjuego-titulo {
	padding: 5px 10px;
	}

	.cjuego-fecha {
	font-size: 10px;
	}

	.cjuego-descuento {
	font-size: 12px;
	padding: 5px 8px;
	min-width: 35px;
	}

	.cjuego-precio {
	font-size: 12px;
	min-width: 50px;
	}
	}

	.boton-expandir {
	transition: transform .2s;
	}

	.boton-expandir:hover {
	transform: scale(1.01);
	}
</style>

@{
	string descuento = string.Empty;
	string precio = string.Empty;
	string enlace = string.Empty;
	string enlaceNuevaPestaña = string.Empty;
	string iconoTienda = string.Empty;
	string codigoTexto = string.Empty;

	JuegoPrecio oferta = juego.PrecioMinimosHistoricos[0];

	if (oferta != null)
	{
		descuento = oferta.Descuento.ToString() + "%";
		precio = Herramientas.Precios.Euro(oferta.Precio);
		codigoTexto = oferta.CodigoTexto;

		//--------------------------------------------------------

		if (tipo == Tipo.Portada)
		{
			enlace = "/game/" + juego.Id + "/" + Herramientas.EnlaceAdaptador.Nombre(juego.Nombre) + "/";
			enlaceNuevaPestaña = "_self";
		}
		else
		{
			enlace = Herramientas.EnlaceAcortador.Generar(oferta.Enlace, oferta.Tienda, usuarioPatreon);
			enlaceNuevaPestaña = "_blank";
		}	

		//--------------------------------------------------------

		List<Tiendas2.Tienda> tiendas = Tiendas2.TiendasCargar.GenerarListado();

		foreach (var tienda in tiendas)
		{
			if (tienda.Id == oferta.Tienda)
			{
				iconoTienda = tienda.ImagenIcono;
				break;
			}
		}
	}

	bool usuarioTieneJuego = Herramientas.UsuarioJuegos.ComprobarSiTiene(juegosUsuario, juego, juego.PrecioMinimosHistoricos[0].DRM);
	bool usuarioTieneDeseado = false;

	string fondoColor = string.Empty;
	string fondoDescuento = "background-color: darkgreen;";

	if (usuarioTieneJuego == true)
	{
		fondoColor = "background-color: var(--fondoBien);";
		fondoDescuento = "backdrop-filter: brightness(70%);";
	}
	else
	{
		usuarioTieneDeseado = Herramientas.Deseados.ComprobarSiEsta(usuarioDeseadosSteam, usuarioDeseadosWeb, usuarioDeseadosGog, juego, juego.PrecioMinimosHistoricos[0].DRM, true);

		if (usuarioTieneDeseado == true)
		{
			fondoColor = "background-color: var(--fondoAlerta);";
			fondoDescuento = "backdrop-filter: brightness(70%);";
		}
	}

	bool usuarioConectado = false;

	if (juegosUsuario != null)
	{
		if (juegosUsuario.Steam != null)
		{
			if (juegosUsuario.Steam.Count > 0)
			{
				usuarioConectado = true;
			}
		}		
	}
	
	Herramientas.ToolTipDatos tooltip = Herramientas.Tooltip.Generar(idioma, juego, juego.PrecioMinimosHistoricos[0].DRM, usuarioConectado, usuarioTieneJuego, usuarioTieneDeseado);

	<div class="tooltip-juego" onmousemove="hoverTooltip(event, 'tooltip-@juego.IdMaestra.ToString()-@juego.PrecioMinimosHistoricos[0].DRM.ToString()')">
		<div id="tooltip-@juego.IdMaestra.ToString()-@juego.PrecioMinimosHistoricos[0].DRM.ToString()" class="tooltip-relleno">
			@if (string.IsNullOrEmpty(tooltip.Video) == false)
			{
				<video src="@tooltip.Video" autoplay="autoplay" loop muted style="width: 460px; height: 215px; object-fit: cover;" />
			}

			<div style="padding: 15px; text-align: left; max-width: 460px; display: flex; flex-direction: column; gap: 5px;">
				<div>
					@tooltip.Nombre
				</div>

				<div style="display: flex; align-items: center; padding: 5px; text-align: left; justify-content: left;">
					<div style="margin-right: 20px;">
						<img src="@JuegoDRM2.SacarImagen(juego.PrecioMinimosHistoricos[0].DRM)" style="max-width: 20px; max-height: 20px;" alt="DRM" />
					</div>
					<div style="margin-right: 20px;">
						<img src="@iconoTienda" style="width: 20px; height: 20px;" alt="Store" />
					</div>

					@if (string.IsNullOrEmpty(tooltip.ReviewsIcono) == false)
					{
						<div style="margin-right: 20px;">
							<img src="@tooltip.ReviewsIcono" style="width: 20px; height: 20px;" alt="Reviews" />
						</div>
					}

					<div style="margin-right: 15px; background-color: darkgreen; padding: 5px 10px;">
						@descuento
					</div>
					<div>
						@precio
					</div>
				</div>

				@if (string.IsNullOrEmpty(tooltip.BundlesActuales) == false || string.IsNullOrEmpty(tooltip.GratisActuales) == false || string.IsNullOrEmpty(tooltip.SuscripcionesActuales) == false)
				{
					<div style="font-size: 14px; padding: 5px;">
						<div style="margin-bottom: 5px;">
							@Herramientas.Idiomas.BuscarTexto(idioma, "String11", "Tooltip")
						</div>

						@if (string.IsNullOrEmpty(tooltip.BundlesActuales) == false)
						{
							<div>
								• @tooltip.BundlesActuales
							</div>
						}

						@if (string.IsNullOrEmpty(tooltip.GratisActuales) == false)
						{
							<div>
								• @tooltip.GratisActuales
							</div>
						}

						@if (string.IsNullOrEmpty(tooltip.SuscripcionesActuales) == false)
						{
							<div>
								• @tooltip.SuscripcionesActuales
							</div>
						}
					</div>
				}

				@if (string.IsNullOrEmpty(tooltip.BundlesPasados) == false || string.IsNullOrEmpty(tooltip.GratisPasados) == false || string.IsNullOrEmpty(tooltip.SuscripcionesPasadas) == false)
				{
					<div style="font-size: 14px; padding: 5px;">
						<div style="margin-bottom: 5px;">
							@Herramientas.Idiomas.BuscarTexto(idioma, "String1", "Tooltip")
						</div>

						@if (string.IsNullOrEmpty(tooltip.BundlesPasados) == false)
						{
							<div>
								• @tooltip.BundlesPasados
							</div>
						}

						@if (string.IsNullOrEmpty(tooltip.GratisPasados) == false)
						{
							<div>
								• @tooltip.GratisPasados
							</div>
						}

						@if (string.IsNullOrEmpty(tooltip.SuscripcionesPasadas) == false)
						{
							<div>
								• @tooltip.SuscripcionesPasadas
							</div>
						}
					</div>
				}
			</div>
		</div>

		@if (tipo == Tipo.Portada)
		{
			if (string.IsNullOrEmpty(fondoColor) == true)
			{
				fondoColor = "background-color: var(--fondoBotonPequeño);";
			}

			<a class="boton-pequeño" style="padding: 0px; @fondoColor" href="@enlace" target="@enlaceNuevaPestaña">
				<div class="perfil-flexible-centrado">
					<div style="max-width: 230px;">
						<img src="@juego.Imagenes.Header_460x215" style="width: 100%; height: 100%;" alt="@juego.Nombre"/>
					</div>

					<div class="cjuego-titulo" style="width: 100%; display: flex; flex-flow: column wrap;">
						<div class="minimo-fuente">@juego.Nombre</div>

						<div style="margin-top: 15px; display: flex; align-items: center;">
							<img src="@JuegoDRM2.SacarImagen(juego.PrecioMinimosHistoricos[0].DRM)" style="width: 16px; height: 16px; margin-right: 10px;" alt="DRM" />
							<img src="@iconoTienda" style="width: 16px; height: 16px; margin-right: 10px;" alt="Store" />
							<div class="cjuego-fecha">@Herramientas.Calculadora.DiferenciaTiempo(juego.PrecioMinimosHistoricos[0].FechaDetectado, idioma)</div>
						</div>
					</div>

					<div style="display: flex; align-items: center;">
						<div class="cjuego-descuento" style="text-align: center; margin: 0px; @fondoDescuento">
							@descuento
						</div>

						<div class="cjuego-precio" style="padding: 5px 15px; text-align: center;">
							@precio
						</div>
					</div>
				</div>
			</a>
		}

		@if (tipo == Tipo.MinimosHistoricos)
		{
			<a class="boton-pequeño" style="padding: 0px; @fondoColor" href="@enlace" target="@enlaceNuevaPestaña">
				<div class="perfil-flexible-centrado">
					<div style="max-width: 230px;">
						<img src="@juego.Imagenes.Header_460x215" style="width: 100%; height: 100%;" />
					</div>

					<div style="width: 100%; display: flex; flex-flow: column wrap; padding: 10px 20px;">
						<div class="minimo-fuente">@juego.Nombre</div>

						<div class="perfil-flexible-centrado" style="justify-content: left; margin-top: 10px;">
							<div style="width: 20px; height: 20px;">
								<img src="@JuegoDRM2.SacarImagen(juego.PrecioMinimosHistoricos[0].DRM)" style="width: 100%; height: 100%;" />
							</div>

							<div style="width: 20px; height: 20px; margin-left: 10px;">
								<img src="@iconoTienda" style="width: 100%; height: 100%;" />
							</div>

							@if (juego.Analisis != null)
							{
								if (string.IsNullOrEmpty(juego.Analisis.Porcentaje) == false)
								{
									if (int.Parse(juego.Analisis.Porcentaje) > 74)
									{
										<div style="width: 20px; height: 20px; margin-left: 10px;">
											<img src="/imagenes/analisis/positive.webp" style="width: 100%; height: 100%;" />
										</div>
									}

									if (int.Parse(juego.Analisis.Porcentaje) > 49 && int.Parse(juego.Analisis.Porcentaje) < 75)
									{
										<div style="width: 20px; height: 20px; margin-left: 10px;">
											<img src="/imagenes/analisis/mixed.webp" style="width: 100%; height: 100%;" />
										</div>
									}

									if (int.Parse(juego.Analisis.Porcentaje) < 50)
									{
										<div style="width: 20px; height: 20px; margin-left: 10px;">
											<img src="/imagenes/analisis/negative.webp" style="width: 100%; height: 100%;" />
										</div>
									}
								}
							}
						</div>
					</div>

					<div style="display: flex; align-items: center;">
						<div style="text-align: center; padding: 10px 15px; margin: 0px; min-width: 65px; @fondoDescuento">
							@descuento
						</div>

						<div style="padding: 5px 15px; min-width: 110px; text-align: center; font-size: 18px;">
							@precio
						</div>
					</div>
				</div>
			</a>

			if (string.IsNullOrEmpty(codigoTexto) == false)
			{
				<div style="background-color: transparent; padding: 5px 10px; display: flex; align-items: center; gap: 10px; top: 15px; bottom: 15px; left: 100%; width: 220px; position: absolute;">
					<button @onclick="(e => CopiarAlClipboard(e, codigoTexto))" class="juego-boton-pequeño" style="width: fit-content; padding: 10px 15px;">
						<div style="display: flex; flex-direction: column; gap: 10px; text-align: center;">
							<div>@Herramientas.Idiomas.BuscarTexto(idioma, "String90", "Game")</div>
							<div>@codigoTexto</div>
						</div>
					</button>
				</div>
			}
		}
	</div>
}

@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	[Parameter]
	public Herramientas.UsuarioListadosJuegos juegosUsuario { get; set; }

	[Parameter]
	public string usuarioDeseadosSteam { get; set; }

	[Parameter]
	public string usuarioDeseadosWeb { get; set; }

	[Parameter]
	public string usuarioDeseadosGog { get; set; }

	[Parameter]
	public bool usuarioPatreon { get; set; }

	[Parameter]
	public Juego juego { get; set; }

	[Parameter]
	public Tipo tipo { get; set; }

	public enum Tipo
	{
		Portada,
		MinimosHistoricos
	}

	private void AbrirEnlace(MouseEventArgs e, string enlace)
	{
		NavManager.NavigateTo(enlace, true);
	}

	#region Portapapeles

	private async Task CopiarAlClipboard(MouseEventArgs e, string texto)
	{
		await JavaScript.InvokeVoidAsync("clipboardCopy.copyText", texto);
	}

	#endregion
}
