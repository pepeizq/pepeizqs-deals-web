@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.Razor;
@using Microsoft.Data.SqlClient;
@using pepeizqs_deals_web.Areas.Identity.Data

@inherits Juegos.Juego

@inject NavigationManager NavManager

<style>
    .buscador-panel {
    height: calc(100% - var(--alturaCabecera));
    width: 100%;
    left: 0;
    top: 0;
    overflow-x: auto;
    position: fixed;
    z-index: 1000;
    margin-top: var(--alturaCabecera);
    padding: 10px;
    background-color: var(--fondoOscuroTransparente);
    }

    .boton-superior {
    display: block;
    padding: 6px 12px;
    margin: 0px;
    transition: transform .2s;
    }

    .boton-superior:hover {
    transform: scale(1.01);
    }

    @@media (max-width: 800px) {
    .boton-superior {
    float: none;
    }
    }

    .botones-superiores {
    display: flex;
    }

    @@media (max-width: 1000px) {
    .botones-superiores {
    display: none;
    }
    }

    .botones-superiores2 {
    display: none;
    }

    @@media (max-width: 1000px) {
    .botones-superiores2 {
    display: flex;
    }
    }
</style>

<a href="/" class="texto-logo" style="background-color: transparent; border: 0; flex: 1 auto 1;">
    pepeizq's deals
</a>

<div style="display: flex; align-items: center; gap: 10px; flex: 1 1 auto;">

    @if (adminLogeado == true && ubicacionEnlace.Contains("/admin") == false)
    {
        <a class="texto-cabecera boton-superior" href="/admin" style="font-size: 15px;">
            @adminMensaje
        </a>
    }

    @if (enseñarBuscador == false)
    {
        <button class="texto-cabecera boton-superior" @onclick="@(e => MostrarBuscador(e))" style="cursor: pointer; border: 0px;">
            <i class="fa-solid fa-magnifying-glass"></i>
        </button>

        <div class="botones-superiores">
            @if (usuarioLogeado == true)
            {
                if (ubicacionEnlace.Contains("/wishlist") == false)
                {
                    <a class="texto-cabecera boton-superior" href="/wishlist" style="font-size: 15px;">
                        @Herramientas.Idiomas.CogerCadena(idioma, "Wishlist", "Header")
                    </a>
                }
            }

            @if (ubicacionEnlace.Contains("/historical-lows") == false)
            {
                <a class="texto-cabecera boton-superior" href="/historical-lows" style="font-size: 15px;">
                    @Herramientas.Idiomas.CogerCadena(idioma, "HistoricalLows", "Header")
                </a>
            }

            @if (ubicacionEnlace.Contains("/bundles") == false)
            {
                <a class="texto-cabecera boton-superior" href="/bundles" style="font-size: 15px;">
                    @Herramientas.Idiomas.CogerCadena(idioma, "Bundles", "Header")
                </a>
            }

            @if (ubicacionEnlace.Contains("/free") == false)
            {
                <a class="texto-cabecera boton-superior" href="/free" style="font-size: 15px;">
                    @Herramientas.Idiomas.CogerCadena(idioma, "Free", "Header")
                </a>
            }

            @if (ubicacionEnlace.Contains("/subscriptions") == false)
            {
                <a class="texto-cabecera boton-superior" href="/subscriptions" style="font-size: 15px;">
                    @Herramientas.Idiomas.CogerCadena(idioma, "Subscriptions", "Header")
                </a>
            }
        </div>

        <div class="botones-superiores2" style="cursor: pointer;">
            <div class="menu-dropdown">
                <i class="fa-solid fa-bars"></i>

                <div class="menu-dropdown-contenido">
                    @if (usuarioLogeado == true)
                    {
                        if (ubicacionEnlace.Contains("/wishlist") == false)
                        {
                            <a class="texto-cabecera boton-superior" href="/wishlist" style="font-size: 15px;">
                                @Herramientas.Idiomas.CogerCadena(idioma, "Wishlist", "Header")
                            </a>
                        }
                    }

                    @if (ubicacionEnlace.Contains("/historical-lows") == false)
                    {
                        <a class="texto-cabecera boton-superior" href="/historical-lows" style="font-size: 15px;">
                            @Herramientas.Idiomas.CogerCadena(idioma, "HistoricalLows", "Header")
                        </a>
                    }

                    @if (ubicacionEnlace.Contains("/bundles") == false)
                    {
                        <a class="texto-cabecera boton-superior" href="/bundles" style="font-size: 15px;">
                            @Herramientas.Idiomas.CogerCadena(idioma, "Bundles", "Header")
                        </a>
                    }

                    @if (ubicacionEnlace.Contains("/free") == false)
                    {
                        <a class="texto-cabecera boton-superior" href="/free" style="font-size: 15px;">
                            @Herramientas.Idiomas.CogerCadena(idioma, "Free", "Header")
                        </a>
                    }

                    @if (ubicacionEnlace.Contains("/subscriptions") == false)
                    {
                        <a class="texto-cabecera boton-superior" href="/subscriptions" style="font-size: 15px;">
                            @Herramientas.Idiomas.CogerCadena(idioma, "Subscriptions", "Header")
                        </a>
                    }
                </div>
            </div>
        </div>
    }
    else
    {
        <button class="texto-cabecera boton-superior" @onclick="@(e => MostrarBuscador(e))" style="cursor: pointer; border: 0px; background-color: transparent;">
            <i class="fa-solid fa-magnifying-glass"></i>
        </button>

        <input type="text" @oninput="TextoCambiaBuscador" class="entrada-texto" style="min-width: 50px; max-width: 400px;" placeholder="@Herramientas.Idiomas.CogerCadena(idioma, "SearchPlaceholder", "Header")" />

        @if (encontroAlgo == true)
        {
            <div class="buscador-panel" style="display: flex; align-items: start; gap: 20px;">
                <div style="width: 20%; display: flex; flex-direction: column; gap: 10px; padding: 10px;">
                    @{
                        int contador = 0;

                        if (resultadosJuegos.Count > 0)
                        {
                            contador += 1;

                            int id = 0;
                            string fondo = "background-color: var(--fondoBotonPequeñoTransparente);";

                            if (pestañaSeleccionada == id)
                            {
                                fondo = "background-color: var(--fondoBotonPequeño);";
                            }

                            <button @onclick="@(e => CambiarPestaña(e, id))" class="boton-pequeño" style="@fondo padding: 12px 15px; font-size: 16px; text-align: right;">
                                @Herramientas.Idiomas.CogerCadena(idioma, "SearchFilter1", "Header") (@resultadosJuegos.Count)
                            </button>
                        }

                        if (resultadosDLCs.Count > 0)
                        {
                            contador += 1;

                            int id = 1;
                            string fondo = "background-color: var(--fondoBotonPequeñoTransparente);";

                            if (pestañaSeleccionada == id)
                            {
                                fondo = "background-color: var(--fondoBotonPequeño);";
                            }

                            <button @onclick="@(e => CambiarPestaña(e, id))" class="boton-pequeño" style="@fondo padding: 12px 15px; font-size: 16px; text-align: right;">
                                @Herramientas.Idiomas.CogerCadena(idioma, "SearchFilter2", "Header") (@resultadosDLCs.Count)
                            </button>
                        }

                        if (resultadosBandasSonoras.Count > 0)
                        {
                            contador += 1;

                            int id = 2;
                            string fondo = "background-color: var(--fondoBotonPequeñoTransparente);";

                            if (pestañaSeleccionada == id)
                            {
                                fondo = "background-color: var(--fondoBotonPequeño);";
                            }

                            <button @onclick="@(e => CambiarPestaña(e, id))" class="boton-pequeño" style="@fondo padding: 12px 15px; font-size: 16px; text-align: right;">
                                @Herramientas.Idiomas.CogerCadena(idioma, "SearchFilter3", "Header") (@resultadosBandasSonoras.Count)
                            </button>
                        }

                        if (resultadosSoftware.Count > 0)
                        {
                            contador += 1;

                            int id = 3;
                            string fondo = "background-color: var(--fondoBotonPequeñoTransparente);";

                            if (pestañaSeleccionada == id)
                            {
                                fondo = "background-color: var(--fondoBotonPequeño);";
                            }

                            <button @onclick="@(e => CambiarPestaña(e, id))" class="boton-pequeño" style="@fondo padding: 12px 15px; font-size: 16px; text-align: right;">
                                @Herramientas.Idiomas.CogerCadena(idioma, "SearchFilter4", "Header") (@resultadosSoftware.Count)
                            </button>
                        }

                        if (resultadosBundles.Count > 0 || resultadosGratis.Count > 0 || resultadosSuscripciones.Count > 0)
                        {
                            if (contador > 0)
                            {
                                <hr />
                            }

                            if (resultadosBundles.Count > 0)
                            {
                                int id = 4;
                                string fondo = "background-color: var(--fondoBotonPequeñoTransparente);";

                                if (pestañaSeleccionada == id)
                                {
                                    fondo = "background-color: var(--fondoBotonPequeño);";
                                }

                                <button @onclick="@(e => CambiarPestaña(e, id))" class="boton-pequeño" style="@fondo padding: 12px 15px; font-size: 16px; text-align: right;">
                                    @Herramientas.Idiomas.CogerCadena(idioma, "SearchFilter5", "Header") (@resultadosBundles.Count)
                                </button>
                            }

                            if (resultadosGratis.Count > 0)
                            {
                                int id = 5;
                                string fondo = "background-color: var(--fondoBotonPequeñoTransparente);";

                                if (pestañaSeleccionada == id)
                                {
                                    fondo = "background-color: var(--fondoBotonPequeño);";
                                }

                                <button @onclick="@(e => CambiarPestaña(e, id))" class="boton-pequeño" style="@fondo padding: 12px 15px; font-size: 16px; text-align: right;">
                                    @Herramientas.Idiomas.CogerCadena(idioma, "SearchFilter6", "Header") (@resultadosGratis.Count)
                                </button>
                            }

                            if (resultadosSuscripciones.Count > 0)
                            {
                                int id = 6;
                                string fondo = "background-color: var(--fondoBotonPequeñoTransparente);";

                                if (pestañaSeleccionada == id)
                                {
                                    fondo = "background-color: var(--fondoBotonPequeño);";
                                }

                                <button @onclick="@(e => CambiarPestaña(e, id))" class="boton-pequeño" style="@fondo padding: 12px 15px; font-size: 16px; text-align: right;">
                                    @Herramientas.Idiomas.CogerCadena(idioma, "SearchFilter7", "Header") (@resultadosSuscripciones.Count)
                                </button>
                            }
                        }

                        if (resultadosPublishers.Count > 0)
                        {
                            if (contador > 0)
                            {
                                <hr />
                            }

                            int id = 7;
                            string fondo = "background-color: var(--fondoBotonPequeñoTransparente);";

                            if (pestañaSeleccionada == id)
                            {
                                fondo = "background-color: var(--fondoBotonPequeño);";
                            }

                            <button @onclick="@(e => CambiarPestaña(e, id))" class="boton-pequeño" style="@fondo padding: 12px 15px; font-size: 16px; text-align: right;">
                                @Herramientas.Idiomas.CogerCadena(idioma, "SearchFilter8", "Header") (@resultadosPublishers.Count)
                            </button>
                        }
                    }
                </div>

                <div style="width: 100%; padding-right: 10px;">
                    @{
                        if (pestañaSeleccionada == 0)
                        {
                            <Virtualize Context="juego" Items="resultadosJuegos" ItemSize="107">
                                <ItemContent>
                                    <div class="perfil-flexible-centrado" style="padding-top: 10px;">
                                        <a class="boton-pequeño" href="/game/@juego.Id/@Herramientas.EnlaceAdaptador.Nombre(juego.Nombre)/" style="padding: 0px;">
                                            <div class="perfil-flexible-centrado">
                                                <div>
                                                    <img src="@juego.Imagenes.Header_460x215" style="width: 230px; height: 107px;" />
                                                </div>

                                                <div style="width: 100%; padding-left: 20px; padding-right: 20px;">
                                                    <div>
                                                        @juego.Nombre
                                                    </div>

                                                    <div style="margin-top: 5px; font-size: 15px;">
                                                        @Herramientas.Buscador.GenerarMensaje(idioma, juego, true, true, true)
                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                </ItemContent>
                            </Virtualize>
                        }
                        else if (pestañaSeleccionada == 1)
                        {
                            <Virtualize Context="dlc" Items="resultadosDLCs" ItemSize="107">
                                <ItemContent>
                                    <div class="perfil-flexible-centrado" style="padding-top: 10px;">
                                        <a class="boton-pequeño" href="/game/@dlc.Id/@Herramientas.EnlaceAdaptador.Nombre(dlc.Nombre)/" style="padding: 0px;">
                                            <div class="perfil-flexible-centrado">
                                                <div>
                                                    <img src="@dlc.Imagenes.Header_460x215" style="width: 230px; height: 107px;" />
                                                </div>

                                                <div style="width: 100%; padding-left: 20px; padding-right: 20px;">
                                                    <div>
                                                        @dlc.Nombre
                                                    </div>

                                                    <div style="margin-top: 5px; font-size: 15px;">
                                                        @Herramientas.Buscador.GenerarMensaje(idioma, dlc, true, true, true)
                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                </ItemContent>
                            </Virtualize>
                        }
                        else if (pestañaSeleccionada == 2)
                        {
                            <Virtualize Context="bandaSonora" Items="resultadosBandasSonoras" ItemSize="107">
                                <ItemContent>
                                    <div class="perfil-flexible-centrado" style="padding-top: 10px;">
                                        <a class="boton-pequeño" href="/game/@bandaSonora.Id/@Herramientas.EnlaceAdaptador.Nombre(bandaSonora.Nombre)/" style="padding: 0px;">
                                            <div class="perfil-flexible-centrado">
                                                <div>
                                                    <img src="@bandaSonora.Imagenes.Header_460x215" style="width: 230px; height: 107px;" />
                                                </div>

                                                <div style="width: 100%; padding-left: 20px; padding-right: 20px;">
                                                    <div>
                                                        @bandaSonora.Nombre
                                                    </div>

                                                    <div style="margin-top: 5px; font-size: 15px;">
                                                        @Herramientas.Buscador.GenerarMensaje(idioma, bandaSonora, true, true, true)
                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                </ItemContent>
                            </Virtualize>
                        }
                        else if (pestañaSeleccionada == 3)
                        {
                            <Virtualize Context="software" Items="resultadosSoftware" ItemSize="107">
                                <ItemContent>
                                    <div class="perfil-flexible-centrado" style="padding-top: 10px;">
                                        <a class="boton-pequeño" href="/game/@software.Id/@Herramientas.EnlaceAdaptador.Nombre(software.Nombre)/" style="padding: 0px;">
                                            <div class="perfil-flexible-centrado">
                                                <div>
                                                    <img src="@software.Imagenes.Header_460x215" style="width: 230px; height: 107px;" />
                                                </div>

                                                <div style="width: 100%; padding-left: 20px; padding-right: 20px;">
                                                    <div>
                                                        @software.Nombre
                                                    </div>

                                                    <div style="margin-top: 5px; font-size: 15px;">
                                                        @Herramientas.Buscador.GenerarMensaje(idioma, software, true, true, true)
                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                </ItemContent>
                            </Virtualize>
                        }
                        else if (pestañaSeleccionada == 4)
                        {
                            <Virtualize Context="bundle" Items="resultadosBundles" ItemSize="107">
                                <ItemContent>
                                    <div class="perfil-flexible-centrado" style="padding-top: 10px;">
                                        <a class="boton-pequeño" href="/game/@bundle.Id/@Herramientas.EnlaceAdaptador.Nombre(bundle.Nombre)/" style="padding: 0px;">
                                            <div class="perfil-flexible-centrado">
                                                <div>
                                                    <img src="@bundle.Imagenes.Header_460x215" style="width: 230px; height: 107px;" />
                                                </div>

                                                <div style="width: 100%; padding-left: 20px; padding-right: 20px;">
                                                    <div>
                                                        @bundle.Nombre
                                                    </div>

                                                    <div style="margin-top: 5px; font-size: 15px;">
                                                        @Herramientas.Buscador.GenerarMensaje(idioma, bundle, true, true, true)
                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                </ItemContent>
                            </Virtualize>
                        }
                        else if (pestañaSeleccionada == 5)
                        {
                            <Virtualize Context="gratis" Items="resultadosGratis" ItemSize="107">
                                <ItemContent>
                                    <div class="perfil-flexible-centrado" style="padding-top: 10px;">
                                        <a class="boton-pequeño" href="/game/@gratis.Id/@Herramientas.EnlaceAdaptador.Nombre(gratis.Nombre)/" style="padding: 0px;">
                                            <div class="perfil-flexible-centrado">
                                                <div>
                                                    <img src="@gratis.Imagenes.Header_460x215" style="width: 230px; height: 107px;" />
                                                </div>

                                                <div style="width: 100%; padding-left: 20px; padding-right: 20px;">
                                                    <div>
                                                        @gratis.Nombre
                                                    </div>

                                                    <div style="margin-top: 5px; font-size: 15px;">
                                                        @Herramientas.Buscador.GenerarMensaje(idioma, gratis, true, true, true)
                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                </ItemContent>
                            </Virtualize>
                        }
                        else if (pestañaSeleccionada == 6)
                        {
                            <Virtualize Context="suscripcion" Items="resultadosSuscripciones" ItemSize="107">
                                <ItemContent>
                                    <div class="perfil-flexible-centrado" style="padding-top: 10px;">
                                        <a class="boton-pequeño" href="/game/@suscripcion.Id/@Herramientas.EnlaceAdaptador.Nombre(suscripcion.Nombre)/" style="padding: 0px;">
                                            <div class="perfil-flexible-centrado">
                                                <div>
                                                    <img src="@suscripcion.Imagenes.Header_460x215" style="width: 230px; height: 107px;" />
                                                </div>

                                                <div style="width: 100%; padding-left: 20px; padding-right: 20px;">
                                                    <div>
                                                        @suscripcion.Nombre
                                                    </div>

                                                    <div style="margin-top: 5px; font-size: 15px;">
                                                        @Herramientas.Buscador.GenerarMensaje(idioma, suscripcion, true, true, true)
                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                </ItemContent>
                            </Virtualize>
                        }
                        else if (pestañaSeleccionada == 7)
                        {
                            <Virtualize Context="publisher" Items="resultadosPublishers" ItemSize="107">
                                <ItemContent>
                                    <div class="perfil-flexible-centrado" style="padding-top: 10px;">
                                        <a class="boton-pequeño" href="/publisher/@publisher.Id/" style="padding: 0px;">
                                            <div class="perfil-flexible-centrado">
                                                <div>
                                                    @{
                                                        string imagen = publisher.Imagen;

                                                        if (string.IsNullOrEmpty(imagen) == true)
                                                        {
                                                            imagen = "/imagenes/otros/avatardefectosteam.jpg";
                                                        }
                                                    }

                                                    <img src="@imagen" style="width: 107px; height: 107px;" />
                                                </div>

                                                <div style="width: 100%; padding-left: 20px; padding-right: 20px;">
                                                    <div>
                                                        @publisher.Nombre
                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                </ItemContent>
                            </Virtualize>
                        }
                    }
                </div>
            </div>
        }
    }
</div>

@if (usuarioLogeado == true)
{
    <div style="display: flex; align-items: center; flex: 1 auto 1;">
        <div class="menu-dropdown">
            <div style="display: flex; align-items: center; font-size: 14px; cursor: pointer; gap: 15px;">
                @if (string.IsNullOrEmpty(usuarioAvatar) == true)
                {
                    <div>@usuarioEmail</div>
                }
                else
                {
                    @if (usuarioAvatar.ToLower().Contains(".jpg") == true || usuarioAvatar.ToLower().Contains(".jpeg") == true || usuarioAvatar.ToLower().Contains(".png") == true || usuarioAvatar.ToLower().Contains(".webp") == true)
                    {
                        <img src="@usuarioAvatar" style="max-height: 32px; max-width: 32px;" title="@usuarioNombre"/>
                    }
                    else
                    {
                        <div>@usuarioEmail</div>
                    }
                }

                @if (usuarioPatreon == true)
                {
                    <div style="background-color: var(--fondoMinimo); border: 1px solid var(--fondoBotonPequeño); padding: 0px 10px; height: 32px;">
                        @usuarioCoins.ToString()
                    </div>
                }

                <i class="fa-solid fa-caret-down"></i>
            </div>

            <div class="menu-dropdown-contenido" style="right: -10px;">
                <button @onclick="@(e => AbrirCuenta(e))" class="texto-cabecera menu-dropdown-item" style="text-align: left; border: 0; width: 100%; font-size: 14px;">
                    @Herramientas.Idiomas.CogerCadena(idioma, "Account", "Header")
                </button>

                @if (usuarioPatreon == false)
                {
                    WebApplicationBuilder builder = WebApplication.CreateBuilder();
                    string? patreonEnlace = builder.Configuration.GetValue<string>("RedesSociales:Patreon");

                    <a href="@patreonEnlace" target="_blank" style="text-decoration: none; text-align: left; border: 0; width: 100%; font-size: 14px;" class="texto-cabecera menu-dropdown-item">
                        @Herramientas.Idiomas.CogerCadena(idioma, "Patreon", "Header")
                    </a>
                }

                <button @onclick="@(e => AbrirRecompensas(e))" class="texto-cabecera menu-dropdown-item" style="text-align: left; border: 0; width: 100%; font-size: 14px;">
                    @Herramientas.Idiomas.CogerCadena(idioma, "Rewards", "Header")
                </button>

                <button @onclick="@(e => Desconectar(e))" class="texto-cabecera menu-dropdown-item" style="text-align: left; border: 0; width: 100%; font-size: 14px;">
                    @Herramientas.Idiomas.CogerCadena(idioma, "Logout", "Header")
                </button>
            </div>
        </div>
    </div>
}
else
{
    <div style="display: flex; align-items: center; flex: 1 auto 1;">
        <button class="texto-cabecera" @onclick="@(e => AbrirLogin(e))" style="text-align: left; border: 0; padding: 8px 15px; margin: 0px; font-size: 14px;">
            @Herramientas.Idiomas.CogerCadena(idioma, "Login", "Header")
        </button>

        <button class="texto-cabecera" @onclick="@(e => AbrirRegistro(e))" style="text-align: left; border: 0; padding: 8px 15px; margin: 0px; font-size: 14px;">
            @Herramientas.Idiomas.CogerCadena(idioma, "Register", "Header")
        </button>
    </div>
}

@code {

    #nullable disable

    [Parameter]
    public string idioma { get; set; }

    [Parameter]
    public bool usuarioLogeado { get; set; }

    [Parameter]
    public bool usuarioPatreon { get; set; }

    [Parameter]
    public bool adminLogeado { get; set; }

    [Parameter]
    public string usuarioAvatar { get; set; }

    [Parameter]
    public string usuarioNombre { get; set; }

    [Parameter]
    public string usuarioEmail { get; set; }

    [Parameter]
    public int usuarioCoins { get; set; }

    [Parameter]
    public string ubicacionEnlace { get; set; }

    private SqlConnection conexion = new SqlConnection();

    private string adminMensaje = string.Empty;

    protected override void OnInitialized()
    {
        if (adminLogeado == true)
        {
            adminMensaje = "Admin";

            if (conexion == null)
            {
                conexion = Herramientas.BaseDatos.Conectar();
            }
            else
            {
                if (conexion.State != System.Data.ConnectionState.Open)
                {
                    conexion = Herramientas.BaseDatos.Conectar();
                }
            }

            using (conexion)
            {
                int nuevosCorreosDeals = int.Parse(BaseDatos.Tiendas.Admin.LeerDato(conexion, "correos"));
                int nuevosCorreosApps = int.Parse(BaseDatos.Tiendas.Admin.LeerDato(conexion, "correos2"));

                if (nuevosCorreosDeals > 0 || nuevosCorreosApps > 0)
                {
                    adminMensaje = adminMensaje + " - Correo Nuevo";
                }
            }
        }
    }

    private void Inicio(MouseEventArgs e)
    {
        NavManager.NavigateTo("/", true);
    }

    private void Desconectar(MouseEventArgs e)
    {
        NavManager.NavigateTo("/account/logout", true, false);
    }

    #region Buscador

    private bool encontroAlgo = false;
    private List<Juegos.Juego> resultadosJuegos = new List<Juegos.Juego>();
    private List<Juegos.Juego> resultadosDLCs = new List<Juegos.Juego>();
    private List<Juegos.Juego> resultadosBandasSonoras = new List<Juegos.Juego>();
    private List<Juegos.Juego> resultadosSoftware = new List<Juegos.Juego>();
    private List<Juegos.Juego> resultadosBundles = new List<Juegos.Juego>();
    private List<Juegos.Juego> resultadosGratis = new List<Juegos.Juego>();
    private List<Juegos.Juego> resultadosSuscripciones = new List<Juegos.Juego>();
    private List<BaseDatos.Publishers.Publisher> resultadosPublishers = new List<BaseDatos.Publishers.Publisher>();

    private bool enseñarBuscador = false;

    private void MostrarBuscador(MouseEventArgs e)
    {
        if (enseñarBuscador == false)
        {
            enseñarBuscador = true;
        }
        else
        {
            enseñarBuscador = false;
        }
    }

    private string cadenaBusqueda = string.Empty;

    private void TextoCambiaBuscador(ChangeEventArgs e)
    {
        cadenaBusqueda = e.Value.ToString();
        cadenaBusqueda = cadenaBusqueda.Replace("'", null);

        if (cadenaBusqueda.Trim().Length > 3)
        {
            if (conexion == null)
            {
                conexion = Herramientas.BaseDatos.Conectar();
            }
            else
            {
                if (conexion.State != System.Data.ConnectionState.Open)
                {
                    conexion = Herramientas.BaseDatos.Conectar();
                }
            }

            using (conexion)
            {
                pestañaSeleccionada = -1;

                List<Juegos.Juego> resultadosGestor = BaseDatos.Juegos.Buscar.Nombre(cadenaBusqueda, conexion, 50, false);

                resultadosJuegos.Clear();
                resultadosDLCs.Clear();
                resultadosBandasSonoras.Clear();
                resultadosSoftware.Clear();

                resultadosBundles.Clear();
                resultadosGratis.Clear();
                resultadosSuscripciones.Clear();

                if (resultadosGestor != null)
                {
                    if (resultadosGestor.Count > 0)
                    {
                        foreach (var resultado in resultadosGestor)
                        {
                            if (resultado.Tipo == Juegos.JuegoTipo.Game)
                            {
                                resultadosJuegos.Add(resultado);
                            }
                            else if (resultado.Tipo == Juegos.JuegoTipo.DLC)
                            {
                                resultadosDLCs.Add(resultado);
                            }
                            else if (resultado.Tipo == Juegos.JuegoTipo.Music)
                            {
                                resultadosBandasSonoras.Add(resultado);
                            }
                            else if (resultado.Tipo == Juegos.JuegoTipo.Software)
                            {
                                resultadosSoftware.Add(resultado);
                            }

                            if (Herramientas.Buscador.ComprobarBundles(resultado) == true)
                            {
                                resultadosBundles.Add(resultado);
                            }

                            if (Herramientas.Buscador.ComprobarGratis(resultado) == true)
                            {
                                resultadosGratis.Add(resultado);
                            }

                            if (Herramientas.Buscador.ComprobarSuscripcion(resultado) == true)
                            {
                                resultadosSuscripciones.Add(resultado);
                            }
                        }
                    }
                }

                resultadosPublishers.Clear();
                resultadosPublishers = BaseDatos.Publishers.Buscar.NombreContiene(cadenaBusqueda, 5);

                if (resultadosJuegos != null)
                {
                    if (resultadosJuegos.Count > 0)
                    {
                        encontroAlgo = true;

                        if (pestañaSeleccionada == -1)
                        {
                            pestañaSeleccionada = 0;
                        }

                        resultadosJuegos = resultadosJuegos.Where(x => x.Analisis != null).Where(x => x.Analisis.Cantidad != null).OrderByDescending(x => int.Parse(x.Analisis.Cantidad.Replace(",", null))).
                        ThenBy(x => x.NombreCodigo.IndexOf(Herramientas.Buscador.LimpiarNombre(cadenaBusqueda)) > 0).Concat(resultadosJuegos.Where(x => x.Analisis != null && x.Analisis.Porcentaje == null && x.Analisis.Cantidad == null)).Concat(resultadosJuegos.Where(x => x.Analisis == null)).ToList();
                    }
                }

                if (resultadosDLCs != null)
                {
                    if (resultadosDLCs.Count > 0)
                    {
                        encontroAlgo = true;

                        if (pestañaSeleccionada == -1)
                        {
                            pestañaSeleccionada = 1;
                        }

                        resultadosDLCs = resultadosDLCs.Where(x => x.Analisis != null).Where(x => x.Analisis.Cantidad != null).OrderByDescending(x => int.Parse(x.Analisis.Cantidad.Replace(",", null))).
                        ThenBy(x => x.NombreCodigo.IndexOf(Herramientas.Buscador.LimpiarNombre(cadenaBusqueda)) > 0).Concat(resultadosDLCs.Where(x => x.Analisis != null && x.Analisis.Porcentaje == null && x.Analisis.Cantidad == null)).Concat(resultadosDLCs.Where(x => x.Analisis == null)).ToList();
                    }
                }

                if (resultadosBandasSonoras != null)
                {
                    if (resultadosBandasSonoras.Count > 0)
                    {
                        encontroAlgo = true;

                        if (pestañaSeleccionada == -1)
                        {
                            pestañaSeleccionada = 2;
                        }

                        resultadosBandasSonoras = resultadosBandasSonoras.Where(x => x.Analisis != null).Where(x => x.Analisis.Cantidad != null).OrderByDescending(x => int.Parse(x.Analisis.Cantidad.Replace(",", null))).
                        ThenBy(x => x.NombreCodigo.IndexOf(Herramientas.Buscador.LimpiarNombre(cadenaBusqueda)) > 0).Concat(resultadosBandasSonoras.Where(x => x.Analisis != null && x.Analisis.Porcentaje == null && x.Analisis.Cantidad == null)).Concat(resultadosBandasSonoras.Where(x => x.Analisis == null)).ToList();
                    }
                }

                if (resultadosSoftware != null)
                {
                    if (resultadosSoftware.Count > 0)
                    {
                        encontroAlgo = true;

                        if (pestañaSeleccionada == -1)
                        {
                            pestañaSeleccionada = 3;
                        }

                        resultadosSoftware = resultadosSoftware.Where(x => x.Analisis != null).Where(x => x.Analisis.Cantidad != null).OrderByDescending(x => int.Parse(x.Analisis.Cantidad.Replace(",", null))).
                        ThenBy(x => x.NombreCodigo.IndexOf(Herramientas.Buscador.LimpiarNombre(cadenaBusqueda)) > 0).Concat(resultadosSoftware.Where(x => x.Analisis != null && x.Analisis.Porcentaje == null && x.Analisis.Cantidad == null)).Concat(resultadosSoftware.Where(x => x.Analisis == null)).ToList();
                    }
                }

                if (resultadosBundles.Count > 0)
                {
                    resultadosBundles = resultadosBundles.Where(x => x.Analisis != null).Where(x => x.Analisis.Cantidad != null).OrderByDescending(x => int.Parse(x.Analisis.Cantidad.Replace(",", null))).
                    ThenBy(x => x.NombreCodigo.IndexOf(Herramientas.Buscador.LimpiarNombre(cadenaBusqueda)) > 0).Concat(resultadosSoftware.Where(x => x.Analisis != null && x.Analisis.Porcentaje == null && x.Analisis.Cantidad == null)).Concat(resultadosSoftware.Where(x => x.Analisis == null)).ToList();
                }

                if (resultadosGratis.Count > 0)
                {
                    resultadosGratis = resultadosGratis.Where(x => x.Analisis != null).Where(x => x.Analisis.Cantidad != null).OrderByDescending(x => int.Parse(x.Analisis.Cantidad.Replace(",", null))).
                    ThenBy(x => x.NombreCodigo.IndexOf(Herramientas.Buscador.LimpiarNombre(cadenaBusqueda)) > 0).Concat(resultadosSoftware.Where(x => x.Analisis != null && x.Analisis.Porcentaje == null && x.Analisis.Cantidad == null)).Concat(resultadosSoftware.Where(x => x.Analisis == null)).ToList();
                }

                if (resultadosSuscripciones.Count > 0)
                {
                    resultadosSuscripciones = resultadosSuscripciones.Where(x => x.Analisis != null).Where(x => x.Analisis.Cantidad != null).OrderByDescending(x => int.Parse(x.Analisis.Cantidad.Replace(",", null))).
                    ThenBy(x => x.NombreCodigo.IndexOf(Herramientas.Buscador.LimpiarNombre(cadenaBusqueda)) > 0).Concat(resultadosSoftware.Where(x => x.Analisis != null && x.Analisis.Porcentaje == null && x.Analisis.Cantidad == null)).Concat(resultadosSoftware.Where(x => x.Analisis == null)).ToList();
                }

                if (resultadosPublishers.Count > 0)
                {
                    encontroAlgo = true;

                    if (pestañaSeleccionada == -1)
                    {
                        pestañaSeleccionada = 7;
                    }

                    resultadosPublishers = resultadosPublishers.OrderBy(x => x.Nombre).ToList();
                }
            }
        }
        else
        {
            encontroAlgo = false;
        }
    }

    private int pestañaSeleccionada = 0;

    private void CambiarPestaña(MouseEventArgs e, int pestaña)
    {
        pestañaSeleccionada = pestaña;
    }

    #endregion

    private void AbrirLogin(MouseEventArgs e)
    {
        NavManager.NavigateTo("/account/login", true);
    }

    private void AbrirRegistro(MouseEventArgs e)
    {
        NavManager.NavigateTo("/account/register", true);
    }

    private void AbrirCuenta(MouseEventArgs e)
    {
        NavManager.NavigateTo("/account/", true);
    }

    private void AbrirRecompensas(MouseEventArgs e)
    {
        NavManager.NavigateTo("/account/rewards/", true);
    }
}

