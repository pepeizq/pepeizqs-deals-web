@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.VisualBasic;

@if (noticiasMostrar.Count > 0)
{
	@for (int i = 0; i < noticiasMostrar.Count; i += 1)
	{
		@if (i == 0 || (i > 0 && FechaIncluir(noticiasMostrar[i - 1], noticiasMostrar[i]) == true))
		{
			<hr/>
		}

		<div style="display: flex; margin-top: 10px; margin-bottom: 10px;">
			@if (i == 0 || (i > 0 && FechaIncluir(noticiasMostrar[i - 1], noticiasMostrar[i]) == true))
			{
				<div style="width: 20%; font-size: 22px; padding: 40px; text-align: center;">@FechaTexto(noticiasMostrar[i].FechaEmpieza)</div>
			}
			else
			{
				<div style="width: 20%; font-size: 22px; padding: 40px; text-align: center;"></div>
			}

			<div class="perfil" style="width: 80%;">
				<div style="font-size: 20px; margin-bottom: 15px;">@Herramientas.Idiomas.MirarTexto(idioma, noticiasMostrar[i].TituloEn, noticiasMostrar[i].TituloEs)</div>

				<div>@((MarkupString)@Contenido(noticiasMostrar[i]))</div>

				<div style="text-align: right;">
					<a href="/news/@noticiasMostrar[i].Id"><i class="fa-solid fa-plus"></i></a>
				</div>
			</div>
		</div>	
	}
}

@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	private List<string> fechas = new List<string>();
	private List<Noticias.Noticia> noticiasMostrar = new List<Noticias.Noticia>();

	protected override void OnInitialized()
	{
		List<Noticias.Noticia> noticias = BaseDatos.Noticias.Buscar.Todas().OrderBy(x => x.FechaEmpieza).Reverse().ToList();

		foreach (var noticia in noticias)
		{
			if (DateTime.Now >= noticia.FechaEmpieza && DateTime.Now <= noticia.FechaTermina)
			{
				noticiasMostrar.Add(noticia);
			}
		}
	}

	private bool FechaIncluir(Noticias.Noticia noticiaAnterior, Noticias.Noticia noticia)
	{
		bool incluir = true;

		if (noticiaAnterior.FechaEmpieza.DayOfYear == noticia.FechaEmpieza.DayOfYear)
		{
			incluir = false;
		}

		return incluir;
	}

	private string FechaTexto(DateTime fechaDate)
	{
		string fechaTexto = string.Empty;

		fechaTexto = fechaDate.Day.ToString() + "/" + fechaDate.Month.ToString() + "/" + fechaDate.Year.ToString();

		return fechaTexto;
	}

	private string Contenido(Noticias.Noticia noticiaMostrar)
	{
		string contenido = Herramientas.Idiomas.MirarTexto(idioma, noticiaMostrar.ContenidoEn, noticiaMostrar.ContenidoEs);

		if (contenido != null)
		{
			contenido = contenido.Replace("<img ", "<img style=" + Strings.ChrW(34) + "max-width: 100%; margin-top: 20px; margin-bottom: 20px;" + Strings.ChrW(34)) + " ";
		}

		return contenido;
	}
}
