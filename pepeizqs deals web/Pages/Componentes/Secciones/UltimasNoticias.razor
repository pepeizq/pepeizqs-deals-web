@using Microsoft.AspNetCore.Components.Web
@using Microsoft.VisualBasic

@{
	string titulo = Herramientas.Idiomas.BuscarTexto(idioma, "Title", "LastNews") + " • pepeizq's deals";
	string descripcion = Herramientas.Idiomas.BuscarTexto(idioma, "String4", "LastNews");
	string enlace = "https://pepeizqdeals.com/last-news/";
	string imagen = "https://pepeizqdeals.com/logo/logoentrada.webp";
	string keywords = "news";

	if (noticiasMostrar != null)
	{
		if (noticiasMostrar.Count > 0)
		{
			int i = 0;
			foreach (var noticiaMostrar in noticiasMostrar)
			{
				if (i < 3)
				{
					string[] keywordsEnBruto = Herramientas.Buscador.LimpiarNombre(noticiaMostrar.TituloEn, false).Split(' ');
					List<string> keywordsLista = new List<string>();
					keywordsLista.AddRange(keywordsEnBruto);

					foreach (var keyword in keywordsLista)
					{
						if (keywords.Contains(keyword) == false && keyword.Length > 3)
						{
							keywords = keywords + ", " + keyword;
						}
					}
				}

                i += 1;
			}
		}
	}

	<HeadContent>
		<meta name="og:title" Content="@titulo" />
		<meta name="description" content="@descripcion" />
		<meta name="og:description" content="@descripcion" />
		<meta name="og:url" content="@enlace" />
		<meta name="og:image" content="@imagen" />
		<meta name="og:site_name" content="pepeizq's deals" />
		<meta name="og:type" content="website" />
		<meta name="robots" content="index, follow" />
		<meta name="keywords" content="@keywords" />

		<link rel="canonical" href="@enlace" />
	</HeadContent>
}

<style>
	.imagen-expandir {
		transition: transform .2s;
	}

		.imagen-expandir:hover {
			transform: scale(1.01);
		}
</style>

@if (noticiasMostrar != null)
{
	if (noticiasMostrar.Count > 0)
	{
		<div style="background-color: var(--fondoCuerpo); position: sticky; position: -webkit-sticky; top: 70px; z-index: 1; margin: -10px; padding: 10px;">
			<div style="display: flex; align-items: center; width: 100%;">
				<div style="font-size: 23px; text-align: left;">
					@Herramientas.Idiomas.BuscarTexto(idioma, "Title", "LastNews")
				</div>
				<div style="flex: 1;"></div>

				<pepeizqs_deals_web.Pages.Componentes.Interfaz.RedesSociales idioma="@idioma" />
			</div>
		</div>

		<div style="display: flex; flex-direction: column; gap: 30px; margin-top: 20px;">
			@foreach (var noticiaMostrar in noticiasMostrar)
			{
				<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 30px; display: flex; align-items: center; gap: 30px;">
					<div style="width: 50%;">
						<a href="/news/@noticiaMostrar.Id/">
							<img src="@noticiaMostrar.Imagen" class="imagen-expandir" style="width: 100%; height: 100%; border: 1px solid var(--fondoBotonPequeño);" />
						</a>
					</div>

					<div style="width: 100%; display: flex; flex-direction: column; gap: 20px;">
						<div style="font-size: 20px;">
							@Herramientas.Idiomas.ElegirTexto(idioma, noticiaMostrar.TituloEn, noticiaMostrar.TituloEs)
						</div>

						<div style="font-size: 18px;">
							@noticiaMostrar.FechaEmpieza.Day.ToString()/@noticiaMostrar.FechaEmpieza.Month.ToString()/@noticiaMostrar.FechaEmpieza.Year.ToString()
						</div>

						<div>
							@{
								string texto = Herramientas.Idiomas.ElegirTexto(idioma, noticiaMostrar.ContenidoEn, noticiaMostrar.ContenidoEs);

								if (string.IsNullOrEmpty(texto) == false)
								{
									if (texto.Contains("</div>") == true)
									{
										int int1 = texto.IndexOf("</div>");
										texto = texto.Remove(int1, texto.Length - int1);

										if (texto.Contains("<div") == true)
										{
												int int2 = texto.IndexOf(">");
												texto = texto.Remove(0, int2 + 1);
										}
									}
									else
									{
										if (texto.Contains("<") == true)
										{
												int int1 = texto.IndexOf("<");
												texto = texto.Remove(int1, texto.Length - int1);
										}
									}
								}

								<div>
									@((MarkupString)texto)							
								</div>

								if (noticiaMostrar.Tipo == Noticias.NoticiaTipo.Bundles)
								{
									<a href="/news/@noticiaMostrar.Id/" class="boton-pequeño" style="width: auto; margin-top: 20px; padding: 10px 15px;">
										@Herramientas.Idiomas.BuscarTexto(idioma, "String2", "LastNews")
									</a>
								}
								else
								{
									<a href="/news/@noticiaMostrar.Id/" class="boton-pequeño" style="width: auto; margin-top: 20px; padding: 10px 15px;">
										@Herramientas.Idiomas.BuscarTexto(idioma, "String3", "LastNews")
									</a>
								}
							}
						</div>
					</div>
				</div>
			}
		</div>
	}
}

<div style="font-size: 23px; margin-top: 40px;">
	@Herramientas.Idiomas.BuscarTexto(idioma, "String1", "LastNews")
</div>

<div style="display: flex; align-items: start; gap: 15px; margin: 10px 0px 20px 0px;">
	@foreach (var año in años)
	{
		<div>
			<button @onclick="@(e => CambiarAño(e, año))" class="boton-pequeño" style="padding: 6px 10px; width: auto;">
				@año
			</button>

			@if (añoSeleccionado == año)
			{
				<div style="margin-top: 10px; background: var(--colorTexto); padding: 1px;"/>
			}
		</div>
	}
</div>

@if (noticiasAntiguas.Count > 0)
{
	List<Noticias.Noticia> noticiasAño = new List<Noticias.Noticia>();

	foreach (var noticiaAntigua in noticiasAntiguas)
	{
		if (noticiaAntigua.FechaEmpieza.Year.ToString() == añoSeleccionado)
		{
			noticiasAño.Add(noticiaAntigua);
		}
	}

	if (noticiasAño.Count > 0)
	{
		<div style="display: flex; flex-direction: column; gap: 30px;">
			@{
				int i = 1;
				while (i < 13)
				{
					List<Noticias.Noticia> noticiasMensual = new List<Noticias.Noticia>();

					foreach (var noticia in noticiasAño)
					{
						if (noticia.FechaEmpieza.Month == i)
						{
							noticiasMensual.Add(noticia);
						}
					}

					if (noticiasMensual.Count > 0)
					{
						noticiasMensual.Reverse();

						<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 30px;">
							<label>@Herramientas.Idiomas.BuscarTexto(idioma, "Month." + i.ToString(), "Months")</label>
							<hr />

							<ul>
								@foreach (var noticiaMensual in noticiasMensual)
								{
									<li>
										<a href="/news/@noticiaMensual.Id">@Herramientas.Idiomas.ElegirTexto(idioma, noticiaMensual.TituloEn, noticiaMensual.TituloEs)</a> (@noticiaMensual.FechaEmpieza.Day/@noticiaMensual.FechaEmpieza.Month/@noticiaMensual.FechaEmpieza.Year)
									</li>
								}
							</ul>
						</div>
					}

					i += 1;
				}
			}
		</div>
	}
}

@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	private List<string> fechas = new List<string>();
	private List<Noticias.Noticia> noticiasMostrar = new List<Noticias.Noticia>();
	private List<Noticias.Noticia> noticiasAntiguas = new List<Noticias.Noticia>();

	private List<string> años = new List<string>();
	private string añoSeleccionado = string.Empty;

	protected override void OnInitialized()
	{
		noticiasMostrar = BaseDatos.Noticias.Buscar.Actuales();

		//--------------------------------------------------------------------

		DateTime arranque = new DateTime(2023, 9, 1);

		int i = 0;
		while (i < 100)
		{
			if (arranque.Year != DateTime.Now.Year)
			{
				años.Add(arranque.Year.ToString());
				arranque = arranque.AddYears(1);
			}
			i += 1;
		}

		años.Add(DateTime.Now.Year.ToString());
		años.Reverse();
	}

	private void CambiarAño(MouseEventArgs e, string nuevoAño)
	{
		añoSeleccionado = nuevoAño;

		noticiasAntiguas = BaseDatos.Noticias.Buscar.Año(añoSeleccionado);
	}
}
