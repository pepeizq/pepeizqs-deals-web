@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.Razor;
@using Microsoft.Data.SqlClient;
@using pepeizqs_deals_web.Areas.Identity.Data

@inherits Juegos.Juego

@inject UserManager<Usuario> UserManager
@inject IHttpContextAccessor HttpContextAccessor

<input type="text" @oninput="TextoCambia" class="entrada-texto" />

@if (juegosMostrar != null)
{
    @if (juegosMostrar.Count > 0)
    {
        <div class="buscador-panel">
            @foreach (var juego in juegosMostrar)
            {
                <div class="perfil-flexible-centrado perfil-espacio-top">
                    <a class="boton-pequeño" href="/game/@juego.Id">
                        <div class="perfil-flexible-centrado">
                            <div style="width: 12%;">
                                <img src="@juego.Imagenes.Capsule_231x87" style="max-height:100%; max-width:100%;" />
                            </div>

                            <div style="width: 76%; padding-left: 15px; padding-right: 15px;">
                                @juego.Nombre

                                @if (BaseDatos.Usuarios.Buscar.RolDios(UserManager.GetUserName(HttpContextAccessor.HttpContext!.User)) == true)
                                {
                                    <br /> @juego.Id
                                }
                            </div>

                            <div style="width: 12%; text-align: center;">
                                @Herramientas.JuegoFicha.PrecioMinimoActual(juego, true, idioma)
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>
    }
}

@code {

    #nullable disable

    [Parameter]
    public string idioma { get; set; }

    List<Juegos.Juego> juegosMostrar = new List<Juegos.Juego>();

    Task<List<Juegos.Juego>> tarea;

    protected override void OnInitialized()
    {

    }

    private void TextoCambia(ChangeEventArgs texto)
    {
        List<Juegos.Juego> juegosBuscador = new List<Juegos.Juego>();

        SqlConnection conexion = Herramientas.BaseDatos.Conectar();

        if (conexion.State == System.Data.ConnectionState.Open)
        {
            using (conexion)
            {
                if (texto.Value.ToString().Trim().Length > 1)
                {
                    if ((tarea != null) && (tarea.IsCompleted == false ||
                               tarea.Status == TaskStatus.Running ||
                               tarea.Status == TaskStatus.WaitingToRun ||
                               tarea.Status == TaskStatus.WaitingForActivation))
                    {
                        tarea.Dispose();
                        juegosBuscador = new List<Juegos.Juego>();
                    }
                    else
                    {
                        tarea = Task.Factory.StartNew(() =>
                        {
                            List<Juegos.Juego> juegos2 = new List<Juegos.Juego>();

                            juegos2 = BaseDatos.Juegos.Buscar.Nombre(texto.Value.ToString().Trim(), conexion);

                            return juegos2;
                        });

                        juegosBuscador = tarea.Result;
                    }
                }
                else
                {
                    juegosBuscador = new List<Juegos.Juego>();
                }
            }
        }
        else
        {
            juegosBuscador = new List<Juegos.Juego>();
            conexion.Dispose();
        }

        if (juegosBuscador != null)
        {
            juegosMostrar.Clear();

            if (juegosBuscador.Count > 0)
            {
                juegosMostrar = juegosBuscador;
            }
        } 
    }
}

