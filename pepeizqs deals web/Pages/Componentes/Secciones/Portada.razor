@using BaseDatos.Juegos;
@using Juegos;
@using Microsoft.AspNetCore.Identity
@using Microsoft.Data.SqlClient;
@using Microsoft.Extensions.Caching.Distributed;
@using Microsoft.VisualBasic;
@using Noticias;
@using pepeizqs_deals_web.Areas.Identity.Data

@inject UserManager<Usuario> UserManager
@inject IHttpContextAccessor HttpContextAccessor

@if (noticiaEvento.Count == 1)
{
	<div style="margin-bottom: 50px;">
		<a href="@CargarEnlaceNoticia(noticiaEvento[0])" class="boton-pequeño" style="text-decoration: none; padding: 1px;">
			<div style="overflow: hidden; position: relative; height: 150px; display: flex; align-items: center;">
				<img style="opacity: 0.2; position: absolute; left: 0; top: 0; width: 100%; height: auto;" src="@CargarFondoNoticia(noticiaEvento[0])">
				<div style="position: relative; left: 50%; transform: translateX(-50%);">
					<div style="font-size: 24px;">
						@Herramientas.Idiomas.MirarTexto(idioma, @noticiaEvento[0].TituloEn, @noticiaEvento[0].TituloEs)
					</div>
				</div>
			</div>
		</a>
	</div>
}

@if (juegosDestacadosMostrar.Count > 0)
{
	<div style="margin-bottom: 50px;">
		<div style="display: grid; grid-auto-flow: column; overflow-x: auto; gap: 15px;">
			@foreach (var destacado in juegosDestacadosMostrar)
			{
				<div style="min-width: 150px; max-width: 200px;">
					<a href="game/@destacado.IdMaestra" class="boton-pequeño" style="padding: 3px;">
						<div>
							<img src="@destacado.Imagenes.Library_600x900" style="max-width: 100%; max-height: 100%;" />
						</div>
						<div style="display: flex; align-content: center; align-items: center; justify-content: right;">
							<div class="juego-descuento" style="margin: 0px; padding: 5px 10px;">
								@CargarDescuento(destacado)
							</div>
							<div style="padding: 5px 10px;">
								@CargarPrecio(destacado)
							</div>							
						</div>
					</a>
				</div>
			}
		</div>
	</div>
}

<div class="portada-columnas">
	<div class="portada-columna portada-columna-izq">
		@if (juegosMinimosMostrar.Count > 0)
		{
			<div style="font-size: 20px; padding-bottom: 10px; padding-left: 20px;">
				<a href="/HistoricalLow" style="text-decoration: none;">@Herramientas.Idiomas.CogerCadena(idioma, "Index.LastLows")</a>
			</div>

			<div class="perfil" style="padding: 5px 15px;">
				@foreach (var juego in juegosMinimosMostrar)
				{
					<div class="perfil-flexible-centrado" style="margin-top: 15px;">
						<a class="boton-pequeño" style="padding: 0px;" href="/game/@juego.IdMaestra">
							<div class="perfil-flexible-centrado">
								<div style="width: 22%;">
									<img src="@juego.Imagenes.Capsule_231x87" style="max-height:100%; max-width:100%;" />
								</div>

								<div style="width: 68%; padding: 4px 15px; font-size: 14px;">
									@juego.Nombre
								</div>

								<div style="width: 5%; height: 16px; position: relative;">
									<img src="@CargarIconoTienda(juego)" class="juego-icono-tienda" />
								</div>

								<div style="width: 15%; padding: 4px 15px 4px 0px; font-size: 14px; text-align: right;">
									@CargarPrecio(juego)
								</div>
							</div>
						</a>
					</div>
				}

				<div style="display: flex; justify-content: center; align-items: center;align-items: center;">
					<a class="boton-pequeño" style="width: auto; padding: 15px 20px; margin-top: 30px; margin-bottom: 20px;" href="/HistoricalLow?mode=last">
						<i class="fa-solid fa-plus" style="margin-right: 15px;"></i>@Herramientas.Idiomas.CogerCadena(idioma, "Index.LastLowsMore")
					</a>
				</div>
			</div>
		}

		<div style="margin: 50px;"></div>

		@if (juegosAñadidosMostrar.Count > 0)
		{
			<div style="font-size: 20px; padding-bottom: 10px; padding-left: 20px;">
				<a href="/LastAdded" style="text-decoration: none;">@Herramientas.Idiomas.CogerCadena(idioma, "Index.LastAdded")</a>
			</div>

			<div class="perfil" style="padding: 5px 15px;">
				@foreach (var juego in juegosAñadidosMostrar)
				{
					<div class="perfil-flexible-centrado" style="margin-top: 15px;">
						<a class="boton-pequeño" style="padding: 0px;" href="/game/@juego.IdMaestra">
							<div class="perfil-flexible-centrado">
								<div style="width: 22%;">
									<img src="@juego.Imagenes.Capsule_231x87" style="max-height:100%; max-width:100%;" />
								</div>

								<div style="width: 58%; padding: 4px 15px; font-size: 14px;">
									@juego.Nombre

									@if (BaseDatos.Usuarios.Buscar.RolDios(UserManager.GetUserName(HttpContextAccessor.HttpContext!.User)) == true)
									{
										<br /> @juego.IdMaestra
									}
								</div>

								<div style="width: 20%; padding: 4px 15px 4px 0px; font-size: 14px; text-align: right;">
									@Herramientas.JuegoFicha.PrecioMinimoActual(juego, false, idioma)
								</div>
							</div>
						</a>
					</div>
				}

				<div style="display: flex; justify-content: center; align-items: center;align-items: center;">
					<a class="boton-pequeño" style="width: auto; padding: 15px 20px; margin-top: 30px; margin-bottom: 20px;" href="/LastAdded">
						<i class="fa-solid fa-plus" style="margin-right: 15px;"></i>@Herramientas.Idiomas.CogerCadena(idioma, "Index.LastAddedMore")
					</a>
				</div>
			</div>
		}		
	</div>

	<div class="portada-columna portada-columna-der">
		@if (noticiasMostrar.Count > 0)
		{
			<div style="display: flex; align-items: center; width: 100%; margin-bottom: 10px; padding-left: 20px; padding-right: 20px;">
				<div style="width: 80%; font-size: 20px; text-align: left;">
					<a href="/lastnews" style="text-decoration: none;">@Herramientas.Idiomas.CogerCadena(idioma, "Index.LastNews")</a>
				</div>

				<div style="width: 20%; font-size: 19px; text-align: right;">
					<a href="@Herramientas.Idiomas.CogerRSS(idioma)" target="_blank"><i class="fa-solid fa-rss"></i></a>
				</div>
			</div>

			<div class="perfil" style="padding: 5px 15px;">
				@foreach (var noticia in noticiasMostrar)
				{
					<div class="perfil-flexible-centrado" style="margin-top: 15px;">
						<a class="boton-pequeño" style="padding: 1px;" href="/news/@noticia.IdMaestra">
							<div class="perfil-flexible-centrado">
								<div style="width: 40%;">
									<img src="/imagenes/noticias/@noticia.IdMaestra.ToString()/header.webp" style="width: 100%; height: 100%; object-fit: contain;" />
								</div>

								<div style="width: 60%; padding: 20px;">
									<div style="margin-bottom: 10px;">
										@noticia.FechaEmpieza.Day.ToString()/@noticia.FechaEmpieza.Month.ToString()/@noticia.FechaEmpieza.Year.ToString()
									</div>

									<div>
										@Herramientas.Idiomas.MirarTexto(idioma, @noticia.TituloEn, @noticia.TituloEs)
									</div>
								</div>
							</div>
						</a>
					</div>
				}

				<div style="display: flex; justify-content: center; align-items: center;align-items: center;">
					<a class="boton-pequeño" style="width: auto; padding: 15px 20px; margin-top: 30px;" href="/lastnews">
						<i class="fa-solid fa-plus" style="margin-right: 15px;"></i>@Herramientas.Idiomas.CogerCadena(idioma, "Index.LastNewsMore")
					</a>				
				</div>

				<div style="text-align: center; margin-top: 40px; margin-bottom: 15px;">
					@Herramientas.Idiomas.CogerCadena(idioma, "Index.LastNewsFollow")

					<div style="display: flex; align-items: center; justify-content: center; font-size: 25px; text-align: center; margin-top: 10px;">
						<div style="margin-left: 6px; margin-right: 6px;">
							<a href="https://discord.gg/GBT3FXnrm3" target="_blank"><i class="fa-brands fa-discord"></i></a>
						</div>
						<div style="margin-left: 6px; margin-right: 6px;">
							<a href="https://t.me/pepeizqdeals2" target="_blank"><i class="fa-brands fa-telegram"></i></a>
						</div>
						<div style="margin-left: 6px; margin-right: 6px;">
							<a href="https://reddit.com/r/pepeizqdeals/" target="_blank"><i class="fa-brands fa-reddit"></i></a>
						</div>
						<div style="margin-left: 6px; margin-right: 6px;">
							<a href="https://twitter.com/pepeizqdeals" target="_blank"><i class="fa-brands fa-x-twitter"></i></a>
						</div>
						<div style="margin-left: 6px; margin-right: 6px;">
							<a href="https://steamcommunity.com/groups/pepeizqdeals/" target="_blank"><i class="fa-brands fa-steam"></i></a>
						</div>
					</div>
				</div>
			</div>
		}
	</div>
</div>

@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	List<Juego> juegosDestacadosMostrar = new List<Juego>();
	List<Juego> juegosMinimosMostrar = new List<Juego>();
	List<Juego> juegosAñadidosMostrar = new List<Juego>();
	List<Noticia> noticiasMostrar = new List<Noticia>();
	List<Noticia> noticiaEvento = new List<Noticia>();

	protected override async Task OnInitializedAsync()
	{
		SqlConnection conexion = Herramientas.BaseDatos.Conectar();

		using (conexion)
		{
			#region Destacados

			juegosDestacadosMostrar = BaseDatos.Juegos.Buscar.Todos(conexion, "portadaJuegosDestacados");

			if (juegosDestacadosMostrar.Count > 0)
			{
				juegosDestacadosMostrar = juegosDestacadosMostrar.OrderBy(x => x.Id).ToList();

				int i = 0;
				foreach (Juego juego in juegosDestacadosMostrar)
				{
					try
					{
						juego.Imagenes.Library_600x900 = await Herramientas.Imagenes.DescargarYGuardar(juego.Imagenes.Library_600x900, "juegos", juego.IdMaestra.ToString(), "library_600x900");
					}
					catch { }

					i += 1;

					if (i > 6)
					{
						break;
					}
				}
			}

			#endregion

			#region Minimos

			juegosMinimosMostrar = BaseDatos.Juegos.Buscar.Todos(conexion, "portadaJuegosMinimos");

			if (juegosMinimosMostrar.Count > 0)
			{
				juegosMinimosMostrar = juegosMinimosMostrar.OrderBy(x => x.Id).ToList();

				foreach (Juego juego in juegosMinimosMostrar)
				{
					try
					{
						juego.Imagenes.Capsule_231x87 = await Herramientas.Imagenes.DescargarYGuardar(juego.Imagenes.Capsule_231x87, "juegos", juego.IdMaestra.ToString(), "capsule_231x87");
					}
					catch { }					
				}
			}

			#endregion

			juegosAñadidosMostrar = BaseDatos.Juegos.Buscar.Todos(conexion, "portadaJuegosAnadidos");

			if (juegosAñadidosMostrar.Count > 0)
			{
				juegosAñadidosMostrar = juegosAñadidosMostrar.OrderBy(x => x.IdMaestra).Reverse().ToList();

				foreach (Juego juego in juegosAñadidosMostrar)
				{
					try
					{
						juego.Imagenes.Capsule_231x87 = await Herramientas.Imagenes.DescargarYGuardar(juego.Imagenes.Capsule_231x87, "juegos", juego.IdMaestra.ToString(), "capsule_231x87");
					}
					catch { }					
				}
			}			

			noticiasMostrar = BaseDatos.Noticias.Buscar.Todas(conexion, "portadaNoticias");

			if (noticiasMostrar.Count > 0)
			{
				noticiasMostrar = noticiasMostrar.OrderBy(x => x.FechaEmpieza).Reverse().ToList();

				foreach (Noticia noticia in noticiasMostrar)
				{
					if (noticia.Imagen != null)
					{
						try
						{
							await Herramientas.Imagenes.DescargarYGuardar(noticia.Imagen, "noticias", noticia.IdMaestra.ToString(), "header");
						}
						catch {}					
					}
				}
			}

			noticiaEvento = BaseDatos.Noticias.Buscar.Todas(conexion, "portadaNoticiasEvento");
		}

		conexion.Dispose();
	}

	private string CargarIconoTienda(Juego juego)
	{
		string imagen = null;

		JuegoPrecio oferta = juego.PrecioActualesTiendas[0];
		List<Tiendas2.Tienda> tiendas = Tiendas2.TiendasCargar.GenerarListado();

		foreach (var tienda in tiendas)
		{
			if (tienda.Id == oferta.Tienda)
			{
				imagen = tienda.ImagenIcono;
			}
		}

		if (imagen != null)
		{
			return imagen;
		}
		else
		{
			return null;
		}
	}

	private string CargarDescuento(Juego juego)
	{
		string descuentoMensaje = null;

		descuentoMensaje = juego.PrecioActualesTiendas[0].Descuento.ToString();
		descuentoMensaje = descuentoMensaje + "%";

		if (descuentoMensaje != null)
		{
			return descuentoMensaje;
		}
		else
		{
			return null;
		}
	}

	private string CargarPrecio(Juego juego)
	{
		string precioMensaje = null;

		precioMensaje = juego.PrecioActualesTiendas[0].Precio.ToString();
		precioMensaje = precioMensaje.Replace(".", ",");

		int int1 = precioMensaje.IndexOf(",");

		if (int1 == precioMensaje.Length - 2)
		{
			precioMensaje = precioMensaje + "0";
		}

		precioMensaje = precioMensaje + "€";

		if (precioMensaje != null)
		{
			return precioMensaje;
		}
		else
		{
			return null;
		}
	}

	private string CargarEnlaceNoticia(Noticia noticia)
	{
		string enlace = string.Empty;

		if (noticia.Enlace != null)
		{
			enlace = noticia.Enlace;
		}
		else
		{
			enlace = "/news/" + noticia.IdMaestra.ToString();
		}

		return enlace;
	}

	private string CargarFondoNoticia(Noticia noticia)
	{
		string imagen = null;

		if (noticia != null)
		{
			if (noticia.Imagen != null)
			{
				imagen = noticia.Imagen;
			}

			if (imagen == null)
			{
				if (noticia.Juegos != null)
				{
					List<string> juegos = Herramientas.Listados.Generar(noticia.Juegos);

					if (juegos != null)
					{
						Juego juego = BaseDatos.Juegos.Buscar.UnJuego(juegos[0]);

						if (juego != null)
						{
							imagen = juego.Imagenes.Library_1920x620;
						}
					}
				}
			}

			if (imagen == null)
			{
				if (noticia.ContenidoEn != null)
				{
					if (noticia.ContenidoEn.Contains(".png") == true || noticia.ContenidoEn.Contains(".webp") == true || noticia.ContenidoEn.Contains(".jpg") == true)
					{
						int contador = 4;
						int int1 = noticia.ContenidoEn.IndexOf(".png");

						if (int1 == -1)
						{
							contador = 5;
							int1 = noticia.ContenidoEn.IndexOf(".webp");
						}

						if (int1 == -1)
						{
							contador = 4;
							int1 = noticia.ContenidoEn.IndexOf(".jpg");
						}

						if (int1 > - 1)
						{
							string temp1 = noticia.ContenidoEn.Remove(int1 + contador, noticia.ContenidoEn.Length - int1 - contador);

							int int2 = temp1.LastIndexOf("https://");
							string temp2 = temp1.Remove(0, int2);

							temp2 = temp2.Replace(Strings.ChrW(34).ToString(), null);

							imagen = temp2.Trim();
						}
					}
				}
			}
		}

		return imagen;
	}
}
