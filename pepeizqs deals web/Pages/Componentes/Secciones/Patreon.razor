@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Identity
@using pepeizqs_deals_web.Areas.Identity.Data

@inject UserManager<Usuario> UserManager

<div style="max-width: 1200px; margin: auto;">
	<h1 style="font-size: 23px;">
		@Herramientas.Idiomas.BuscarTexto(idioma, "Title", "Patreon")
	</h1>

	<hr>

	<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 30px; display: flex; flex-direction: column; gap: 20px;">
		<div>
			@Herramientas.Idiomas.BuscarTexto(idioma, "String1", "Patreon")
		</div>

		<div>
			@{
				WebApplicationBuilder builder = WebApplication.CreateBuilder();
				string? patreonEnlace = builder.Configuration.GetValue<string>("RedesSociales:Patreon");
			}

			<a href="@patreonEnlace">@patreonEnlace</a>
		</div>
	</div>

	<div style="font-size: 18px; margin-top: 50px; margin-bottom: 15px;">
		@Herramientas.Idiomas.BuscarTexto(idioma, "String2", "Patreon")
	</div>

	<div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(320px, 1fr)); gap: 20px;">
		<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 30px;">
			<div>
				@Herramientas.Idiomas.BuscarTexto(idioma, "String3", "Patreon")
			</div>

			<hr />

			<div>
				@Herramientas.Idiomas.BuscarTexto(idioma, "String4", "Patreon")
			</div>
		</div>

		<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 30px;">
			<div>
				<a href="/account/patreonstore/" target="_blank">@Herramientas.Idiomas.BuscarTexto(idioma, "String5", "Patreon")</a>
			</div>

			<hr />

			<div>
				@Herramientas.Idiomas.BuscarTexto(idioma, "String6", "Patreon")
			</div>
		</div>

		<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 30px;">
			<div>
				@Herramientas.Idiomas.BuscarTexto(idioma, "String8", "Patreon")
			</div>

			<hr />

			<div>
				@Herramientas.Idiomas.BuscarTexto(idioma, "String9", "Patreon")
			</div>
		</div>

		<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 30px;">
			<div>
				@Herramientas.Idiomas.BuscarTexto(idioma, "String10", "Patreon")
			</div>

			<hr />

			<div>
				@Herramientas.Idiomas.BuscarTexto(idioma, "String11", "Patreon")
			</div>
		</div>

		<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 30px;">
			<div>
				@Herramientas.Idiomas.BuscarTexto(idioma, "String12", "Patreon")
			</div>

			<hr />

			<div>
				@Herramientas.Idiomas.BuscarTexto(idioma, "String13", "Patreon")
			</div>
		</div>
	</div>

	@if (noticias.Count > 0)
	{
		<div style="font-size: 18px; margin-top: 50px; margin-bottom: 15px;">
			@Herramientas.Idiomas.BuscarTexto(idioma, "String7", "Patreon")
		</div>

		<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 30px; display: flex; flex-direction: column; gap: 15px;">
			@foreach (var noticia in noticias)
			{
				<div>
					<a href="/news/@noticia.Id/">@noticia.FechaEmpieza.Day/@noticia.FechaEmpieza.Month/@noticia.FechaEmpieza.Year • @Herramientas.Idiomas.ElegirTexto(idioma, noticia.TituloEn, noticia.TituloEs)</a>
				</div>
			}
		</div>
	}
</div>

@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	[Parameter]
	public string usuarioId { get; set; }

	private Usuario usuario = new Usuario();
	private bool usuarioPatreon = false;

	List<Noticias.Noticia> noticias = new List<Noticias.Noticia>();

	protected override async Task OnInitializedAsync()
	{
		usuario = await UserManager.FindByIdAsync(usuarioId);

		if (usuario != null)
		{
			usuarioPatreon = Herramientas.Patreon.VerificarActivo(usuario.PatreonLastCheck);
		}

		noticias = BaseDatos.Noticias.Buscar.Ultimas(10, Noticias.NoticiaTipo.Patreon);
	}
}
