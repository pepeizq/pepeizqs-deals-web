@using BaseDatos.Juegos;
@using Juegos;
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.Data.SqlClient;
@using pepeizqs_deals_web.Areas.Identity.Data;

@inject UserManager<Usuario> UserManager
@inject IHttpContextAccessor HttpContextAccessor

@if (juegosMostrar.Count > 0)
{
	<div style="position: fixed; z-index: 1; margin-top: -40px; width: 100%; left: 0;">
		<button @onclick="ClickearAtras" class="boton-pequeño" style="width: 50px; font-size: 22px; text-align: center; margin: 40px; left: 0; position: fixed;"><i class="fa-solid fa-chevron-left" /></button>
		<button @onclick="ClickearAdelante" class="boton-pequeño" style="width: 50px; font-size: 22px; text-align: center; margin: 40px; right: 0; position: fixed;"><i class="fa-solid fa-chevron-right"></i></button>
	</div>

	<div class="perfil" style="padding: 15px 20px;">
		@foreach (var juego in juegosMostrar)
		{
			<div class="perfil-flexible-centrado" style="margin-top: 15px; margin-bottom: 15px;">
				<a class="boton-pequeño" style="padding: 0px;" href="/game/@juego.Id" target="_blank">
					<div class="perfil-flexible-centrado">
						<div style="width: 15%;">
							<img src="@juego.Imagenes.Capsule_231x87" style="max-height: 100%; max-width: 100%;" />
						</div>

						<div style="width: 59%; padding: 4px 15px;">
							<div>@juego.Nombre</div>

							<div class="perfil-flexible-centrado" style="justify-content: left;">
								<div style="width: 20px; height: 20px;"><img src="@CargarImagenDRM(juego)" style="max-width: 100%; max-height: 100%;" /></div>

								@if (BaseDatos.Usuarios.Buscar.RolDios(UserManager.GetUserName(HttpContextAccessor.HttpContext!.User)) == true)
								{
									<div style="margin-left: 10px; margin-right: 10px;">@juego.Id</div>
								}
							</div>						
						</div>

						<div style="width: 10%; padding: 4px 30px 4px 0px; text-align: right;">
							<img src="@CargarImagenTienda(juego)" style="max-width: 100%; max-height: 100%;" />
						</div>

						<div style="width: 6%; text-align: center;" class="juego-descuento">
							@juego.PrecioMinimosHistoricos[0].Descuento.ToString()%
						</div>

						<div style="width: 10%; padding: 4px 15px 4px 15px; text-align: center; font-size: 18px;">
							@Herramientas.JuegoFicha.PrecioMinimoActual(juego, false)
						</div>
					</div>
				</a>
			</div>
		}
	</div>
}

@code {

	#nullable disable

	private List<Juego> juegosConMinimos = new List<Juego>();
	private List<Juego> juegosMostrar = new List<Juego>();

	private int minimo = 0;
	private int maximo = 0;

	protected override void OnInitialized()
	{
		minimo = 0;
		maximo = 50;

		juegosConMinimos = BaseDatos.Juegos.Precios.DevolverMinimos();

		CargarJuegos(minimo, maximo);
	}

	private void CargarJuegos(int minimo2, int maximo2)
	{
		if (juegosConMinimos != null)
		{
			if (juegosConMinimos.Count > 0)
			{
				juegosMostrar.Clear();

				for (int i = minimo2; i < maximo2; i += 1)
				{
					juegosMostrar.Add(juegosConMinimos[i]);
				}
			}
		}
	}

	private void ClickearAdelante()
	{
		if (minimo + 50 < juegosConMinimos.Count && maximo + 50 < juegosConMinimos.Count)
		{
			minimo = minimo + 50;
			maximo = maximo + 50;
		}

		CargarJuegos(minimo, maximo);
	}

	private void ClickearAtras()
	{
		if (minimo - 50 >= 0 && maximo - 50 >= 0)
		{
			minimo = minimo - 50;
			maximo = maximo - 50;
		}

		CargarJuegos(minimo, maximo);
	}

	private string CargarImagenDRM(Juego juego)
	{
		JuegoPrecio oferta = juego.PrecioMinimosHistoricos[0];

		return JuegoDRM2.SacarImagen(oferta.DRM);
	}

	private string CargarImagenTienda(Juego juego)
	{
		JuegoPrecio oferta = juego.PrecioMinimosHistoricos[0];
		List<Tiendas2.Tienda> tiendas = Tiendas2.TiendasCargar.GenerarListado();

		foreach (var tienda in tiendas)
		{
			if (tienda.Id == oferta.Tienda)
			{
				return tienda.Imagen300x80;
			}
		}

		return null;
	}
}
