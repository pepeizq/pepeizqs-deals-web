@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.Data.SqlClient
@using Microsoft.JSInterop
@using pepeizqs_deals_web.Areas.Identity.Data

@inject UserManager<Usuario> UserManager
@inject SignInManager<Usuario> SignInManager
@inject IJSRuntime JavaScript
@inject NavigationManager NavManager

<script>
    window.ChangeUrl = function (url) {
		history.pushState(null, '', url);
    }
</script>

<style>
	.boton-expandir {
		transition: transform .2s;
		filter: brightness(100%);
		background-color: var(--fondoOscuro);
	}

		.boton-expandir:hover {
			transform: scale(1.01);
			filter: brightness(120%);
		}
</style>

<div style="display: flex; flex-direction: column; gap: 20px;">
	@if (id1 == 0)
	{
		<div style="background-color: var(--fondoMinimo); border: 2px solid var(--fondoBotonPequeño); padding: 30px 40px; max-width: 800px; margin-left: auto; margin-right: auto;">
			<div style="width: 100%; text-align: center; margin-bottom: 15px;">
				@Herramientas.Idiomas.BuscarTexto(idioma, "String2", "Compare")
			</div>

			<div style="display: flex; align-items: center; gap: 20px;">
				<div style="width: 16px; height: 16px;">
					<svg class="svg-boton" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
						<path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z" />
					</svg>
				</div>

				<input type="text" @oninput="(e => TextoCambiarBuscadorJuego(e, 1))" class="entrada-texto" placeholder="@Herramientas.Idiomas.BuscarTexto(idioma, "String1", "Compare")" style="min-width: 10%;" />
			</div>

			@if (resultadosJuego1 != null)
			{
					if (resultadosJuego1.Count > 0)
					{
							<div style="display: flex; flex-direction: column; gap: 10px; margin-top: 20px;">
								@foreach (var juego in resultadosJuego1)
								{
										<button @onclick="@(e => ClickearIdJuego(e, juego.Id.ToString(), 1))" class="boton-pequeño" style="text-align: center;">
											<div style="display: flex; align-items: center; gap: 20px;">
												<img src="@juego.Imagenes.Header_460x215" style="width: 230px; height: 112px;" />

												<div style="width: 100%; text-align: center;">
													@juego.Nombre
												</div>
											</div>
										</button>
								}
							</div>
					}
			}
		</div>
	}

	@if (id1 > 0 && id2 == 0)
	{
		<div style="background-color: var(--fondoMinimo); border: 2px solid var(--fondoBotonPequeño); padding: 20px; max-width: 800px; margin-left: auto; margin-right: auto;">
			<div style="width: 100%; text-align: center; margin-bottom: 15px;">
				@Herramientas.Idiomas.BuscarTexto(idioma, "String3", "Compare")
			</div>

			<div style="display: flex; align-items: center; gap: 20px;">
				<div style="width: 16px; height: 16px;">
					<svg class="svg-boton" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
						<path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z" />
					</svg>
				</div>

				<input type="text" @oninput="(e => TextoCambiarBuscadorJuego(e, 2))" class="entrada-texto" placeholder="@Herramientas.Idiomas.BuscarTexto(idioma, "String1", "Compare")" style="min-width: 10%;" />
			</div>

			@if (resultadosJuego2 != null)
			{
					if (resultadosJuego2.Count > 0)
					{
							<div style="display: flex; flex-direction: column; gap: 10px; margin-top: 20px;">
								@foreach (var juego in resultadosJuego2)
								{
										<button @onclick="@(e => ClickearIdJuego(e, juego.Id.ToString(), 2))" class="boton-pequeño" style="text-align: center;">
											<div style="display: flex; align-items: center; gap: 20px;">
												<img src="@juego.Imagenes.Header_460x215" style="width: 230px; height: 112px;" />

												<div style="width: 100%; text-align: center;">
													@juego.Nombre
												</div>
											</div>
										</button>
								}
							</div>
					}
			}
		</div>
	}
</div>




@* <h1 style="font-size: 23px;">@Herramientas.Idiomas.BuscarTexto(idioma, "Title", "Compare")</h1>
<hr />

<div style="display: flex; flex-direction: column; gap: 20px;">
	<div style="display: flex; align-items: start; gap: 40px;">
		<div style="width: 50%;">
			@if (id1 == 0)
			{
				<div style="background-color: var(--fondoMinimo); border: 2px solid var(--fondoBotonPequeño); padding: 30px;">
					<div style="width: 100%; text-align: center; margin-bottom: 15px;">
						@Herramientas.Idiomas.BuscarTexto(idioma, "String2", "Compare")
					</div>

					<div style="display: flex; align-items: center; gap: 20px;">
						<div style="width: 16px; height: 16px;">
							<svg class="svg-boton" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
								<path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z" />
							</svg>
						</div>

						<input type="text" @oninput="(e => TextoCambiarBuscadorJuego(e, 1))" class="entrada-texto" placeholder="@Herramientas.Idiomas.BuscarTexto(idioma, "String1", "Compare")" style="min-width: 10%;" />
					</div>
				
					@if (resultadosJuego1 != null)
					{
						if (resultadosJuego1.Count > 0)
						{
							<div style="display: flex; flex-direction: column; gap: 10px; margin-top: 20px;">
			                    @foreach (var juego in resultadosJuego1)
			                    {
								    <button @onclick="@(e => ClickearIdJuego1(e, juego.Id.ToString()))" class="boton-pequeño" style="text-align: center;">
										<div style="display: flex; align-items: center; gap: 20px;">
											<img src="@juego.Imagenes.Header_460x215" style="width: 230px; height: 112px;" />

											<div style="width: 100%; text-align: center;">
												@juego.Nombre
											</div>
										</div>
									</button>
			                    }
							</div>
						}
					}
				</div>
			}
			else if (id1 > 0 && juego1 != null)
			{
				<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 10px;">
					<div style="display: flex; align-items: center; gap: 20px;">
						<img src="@juego1.Imagenes.Header_460x215" style="width: 230px; height: 112px;" />

						<div style="width: 100%; display: flex; flex-direction: column; gap: 15px; justify-content: center;">
							<div>
								@juego1.Nombre
							</div>

							<button @onclick="(e => ClickearAbrirJuego(e, juego1.Id))" class="boton-expandir" style="color: var(--colorTexto); text-decoration: none; border: 0px; background-color: var(--fondoBotonPequeño); width: fit-content; padding: 10px 15px;">
								@Herramientas.Idiomas.BuscarTexto(idioma, "String4", "Compare")
							</button>
						</div>
					</div>
				</div>
			}
		</div>

		<div style="width: 50%;">
			@if (id2 == 0)
			{
				<div style="background-color: var(--fondoMinimo); border: 2px solid var(--fondoBotonPequeño); padding: 30px;">
					<div style="width: 100%; text-align: center; margin-bottom: 15px;">
						@Herramientas.Idiomas.BuscarTexto(idioma, "String3", "Compare")
					</div>

					<div style="display: flex; align-items: center; gap: 20px;">
						<div style="width: 16px; height: 16px;">
							<svg class="svg-boton" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
								<path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z" />
							</svg>
						</div>

						<input type="text" @oninput="(e => TextoCambiarBuscadorJuego(e, 2))" class="entrada-texto" placeholder="@Herramientas.Idiomas.BuscarTexto(idioma, "String1", "Compare")" style="min-width: 10%;" />
					</div>

					@if (resultadosJuego2 != null)
					{
						if (resultadosJuego2.Count > 0)
						{
							<div style="display: flex; flex-direction: column; gap: 10px; margin-top: 20px;">
								@foreach (var juego in resultadosJuego2)
								{
									<button @onclick="@(e => ClickearIdJuego2(e, juego.Id.ToString()))" class="boton-pequeño" style="text-align: center;">
										<div style="display: flex; align-items: center; gap: 20px;">
											<img src="@juego.Imagenes.Header_460x215" style="width: 230px; height: 112px;" />

											<div style="width: 100%; text-align: center;">
												@juego.Nombre
											</div>
										</div>
									</button>
								}
							</div>
						}
					}
				</div>
			}
			else if (id2 > 0 && juego2 != null)
			{
				<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 10px;">
					<div style="display: flex; align-items: center; gap: 20px;">
						<img src="@juego2.Imagenes.Header_460x215" style="width: 230px; height: 112px;" />

						<div style="width: 100%; display: flex; flex-direction: column; gap: 15px; justify-content: center;">
							<div>
								@juego2.Nombre
							</div>

							<button @onclick="(e => ClickearAbrirJuego(e, juego2.Id))" class="boton-expandir" style="color: var(--colorTexto); text-decoration: none; border: 0px; background-color: var(--fondoBotonPequeño); width: fit-content; padding: 10px 15px;">
								@Herramientas.Idiomas.BuscarTexto(idioma, "String4", "Compare")
							</button>
						</div>
					</div>
				</div>
			}
		</div>
	</div>
</div> *@




@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	#nullable enable
	[Parameter]
	public string? ids { get; set; }
	#nullable disable

	[Parameter]
	public string usuarioId { get; set; }

	[Parameter]
	public bool usuarioLogeado { get; set; }

	public int id1 = 0;
	public int id2 = 0;
	public int id3 = 0;
	public int id4 = 0;

	public Juegos.Juego juego1 = null;
	public Juegos.Juego juego2 = null;
	public Juegos.Juego juego3 = null;
	public Juegos.Juego juego4 = null;

	public List<Juegos.Juego> resultadosJuego1 = new List<Juegos.Juego>();
	public List<Juegos.Juego> resultadosJuego2 = new List<Juegos.Juego>();
	public List<Juegos.Juego> resultadosJuego3 = new List<Juegos.Juego>();
	public List<Juegos.Juego> resultadosJuego4 = new List<Juegos.Juego>();

	private Usuario usuario = new Usuario();

	private SqlConnection conexion = new SqlConnection();

	protected override async Task OnInitializedAsync()
	{
		usuario = await UserManager.FindByIdAsync(usuarioId);		

		if (string.IsNullOrEmpty(ids) == false)
		{
			string[] ids2 = ids.Split(',');

			if (ids2.Length > 1)
			{
				id1 = int.Parse(ids2[0]);
				id2 = int.Parse(ids2[1]);
			}
			else if (ids2.Length == 1)
			{
				id1 = int.Parse(ids2[0]);
			}

			if (id1 > 0)
			{
				juego1 = BaseDatos.Juegos.Buscar.UnJuego(id1);
			}

			if (id2 > 0)
			{
				juego2 = BaseDatos.Juegos.Buscar.UnJuego(id2);
			}

			if (id3 > 0)
			{
				juego3 = BaseDatos.Juegos.Buscar.UnJuego(id3);
			}

			if (id4 > 0)
			{
				juego4 = BaseDatos.Juegos.Buscar.UnJuego(id4);
			}
		}
	}

	protected override async Task OnAfterRenderAsync(bool primerRender)
	{
		if (primerRender == true)
		{
			if (id1 > 0 && id2 == 0 && id3 == 0 && id4 == 0)
			{
				await JavaScript.InvokeVoidAsync("ChangeUrl", "/compare/" + id1.ToString() + "/");
			}
			else if (id1 > 0 && id2 > 0 && id3 == 0 && id4 == 0)
			{
				await JavaScript.InvokeVoidAsync("ChangeUrl", "/compare/" + id1.ToString() + "," + id2.ToString() + "/");
			}
			else if (id1 > 0 && id2 > 0 && id3 > 0 && id4 == 0)
			{
				await JavaScript.InvokeVoidAsync("ChangeUrl", "/compare/" + id1.ToString() + "," + id2.ToString() + "," + id3.ToString() + "/");
			}
			else if (id1 > 0 && id2 > 0 && id3 > 0 && id4 > 0)
			{
				await JavaScript.InvokeVoidAsync("ChangeUrl", "/compare/" + id1.ToString() + "," + id2.ToString() + "," + id3.ToString() + "," + id4.ToString() + "/");
			}
		}
	}

	private void TextoCambiarBuscadorJuego(ChangeEventArgs texto, int posicion)
	{
		if (texto.Value.ToString().Trim().Length > 2)
		{
			if (conexion == null)
			{
				conexion = Herramientas.BaseDatos.Conectar();
			}
			else
			{
				if (conexion.State != System.Data.ConnectionState.Open)
				{
					conexion = Herramientas.BaseDatos.Conectar();
				}
			}

			string cadenaBusqueda = texto.Value.ToString().Trim();

			if (posicion == 1)
			{
				resultadosJuego1 = BaseDatos.Juegos.Buscar.Nombre(cadenaBusqueda, conexion, 50, false, 0, usuarioLogeado);
			}
			else if (posicion == 2)
			{
				resultadosJuego2 = BaseDatos.Juegos.Buscar.Nombre(cadenaBusqueda, conexion, 50, false, 0, usuarioLogeado);
			}
			else if (posicion == 3)
			{
				resultadosJuego3 = BaseDatos.Juegos.Buscar.Nombre(cadenaBusqueda, conexion, 50, false, 0, usuarioLogeado);
			}
			else if (posicion == 4)
			{
				resultadosJuego4 = BaseDatos.Juegos.Buscar.Nombre(cadenaBusqueda, conexion, 50, false, 0, usuarioLogeado);
			}
		}
	}

	private async void ClickearIdJuego(MouseEventArgs e, string id, int posicion)
	{
		if (posicion == 1)
		{
			id1 = int.Parse(id);
			resultadosJuego1.Clear();

			juego1 = BaseDatos.Juegos.Buscar.UnJuego(id1);
		}
		else if (posicion == 2)
		{
			id2 = int.Parse(id);
			resultadosJuego2.Clear();

			juego2 = BaseDatos.Juegos.Buscar.UnJuego(id2);
		}
		else if (posicion == 3)
		{
			id3 = int.Parse(id);
			resultadosJuego3.Clear();

			juego3 = BaseDatos.Juegos.Buscar.UnJuego(id3);
		}
		else if (posicion == 4)
		{
			id4 = int.Parse(id);
			resultadosJuego4.Clear();

			juego4 = BaseDatos.Juegos.Buscar.UnJuego(id4);
		}

		if (id1 > 0 && id2 == 0 && id3 == 0 && id4 == 0)
		{
			await JavaScript.InvokeVoidAsync("ChangeUrl", "/compare/" + id1.ToString() + "/");
		}
		else if (id1 > 0 && id2 > 0 && id3 == 0 && id4 == 0)
		{
			await JavaScript.InvokeVoidAsync("ChangeUrl", "/compare/" + id1.ToString() + "," + id2.ToString() + "/");
		}
		else if (id1 > 0 && id2 > 0 && id3 > 0 && id4 == 0)
		{
			await JavaScript.InvokeVoidAsync("ChangeUrl", "/compare/" + id1.ToString() + "," + id2.ToString() + "," + id3.ToString() + "/");
		}
		else if (id1 > 0 && id2 > 0 && id3 > 0 && id4 > 0)
		{
			await JavaScript.InvokeVoidAsync("ChangeUrl", "/compare/" + id1.ToString() + "," + id2.ToString() + "," + id3.ToString() + "," + id4.ToString() + "/");
		}
	}

	private void ClickearAbrirJuego(MouseEventArgs e, int id)
	{
		NavManager.NavigateTo("/game/" + id.ToString() + "/", true);
	}
}
