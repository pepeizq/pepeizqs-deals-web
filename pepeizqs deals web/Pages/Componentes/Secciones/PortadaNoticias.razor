@using APIs.Steam
@using BaseDatos.Juegos
@using Blazored.Video
@using Blazored.Video.Support
@using Juegos
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using Microsoft.AspNetCore.Identity
@using Microsoft.Data.SqlClient
@using Microsoft.JSInterop
@using Microsoft.VisualBasic
@using Noticias
@using System.Text.Json
@using pepeizqs_deals_web.Areas.Identity.Data
@using pepeizqs_deals_web.Pages.Componentes.Interfaz

@inject UserManager<Usuario> UserManager
@inject IHttpContextAccessor HttpContextAccessor
@inject IJSRuntime JavaScript
@inject NavigationManager NavManager

<style>
	.noticia-enlaces {
		flex-direction: row;
		gap: 80px;
	}

	@@media (max-width: 800px) {
		.noticia-enlaces {
			flex-direction: column;
			gap: 30px;
		}
	}
</style>

@if (noticiasMostrar.Count > 0)
{
	<div style="background-color: var(--fondoOscuro); padding: 30px; margin-bottom: 60px;">
		<div style="display: flex; overflow: auto; padding-bottom: 20px; gap: 30px; scrollbar-color: var(--fondoCodigo) var(--fondoOscuro);">
			@foreach (var noticia in noticiasMostrar)
			{
				string marginExtra = string.Empty;

				if (noticiasMostrar.Count == 1 || noticiasMostrar.Count == 2)
				{
					marginExtra = "margin-left: auto; margin-right: auto;";
				}

				<div class="noticia-ancho" style="float: left; flex: 0 0 auto; @marginExtra">
					<div class="tooltip-juego" onmousemove="hoverTooltip(event, 'tooltip-@noticia.Id.ToString()')" style="height: 100%;">
						@{
							string titulo = Herramientas.Idiomas.MirarTexto(idioma, noticia.TituloEn, noticia.TituloEs);
						}

						<div id="tooltip-@noticia.Id.ToString()" class="tooltip-relleno" style="padding: 15px; max-width: 400px;">
							@titulo
						</div>

						<a href="/news/@noticia.Id/@Herramientas.EnlaceAdaptador.Nombre(titulo)/" style="height: 100%; cursor: pointer; text-decoration: none;">
							<div class="noticia-expandir" style="display: flex; flex-direction: column; color: var(--colorTexto); font-size: 14px; height: 100%; margin: 0 auto;">
								<div style="display: flex; align-items: center;">
									<div style="background-color: var(--fondoBotonPequeño); padding: 8px 12px; margin-left: auto;">
										@if (noticia.Tipo == NoticiaTipo.Bundles)
										{
											@Herramientas.Idiomas.CogerCadena(idioma, "News1", "Index")
										}
										else if (noticia.Tipo == NoticiaTipo.Gratis)
										{
											@Herramientas.Idiomas.CogerCadena(idioma, "News2", "Index")
										}
										else if (noticia.Tipo == NoticiaTipo.Suscripciones)
										{
											@Herramientas.Idiomas.CogerCadena(idioma, "News3", "Index")
										}
										else if (noticia.Tipo == NoticiaTipo.Rumores)
										{
											@Herramientas.Idiomas.CogerCadena(idioma, "News4", "Index")
										}
										else if (noticia.Tipo == NoticiaTipo.Web)
										{
											@Herramientas.Idiomas.CogerCadena(idioma, "News5", "Index")
										}
										else
										{
											@noticia.Tipo
										}
									</div>
								</div>

								<div style="background-color: var(--fondoBotonPequeño); padding: 2px; height: 100%;">
									<img src="@noticia.Imagen" style="width: 100%; height: 100%; max-height: 230px; object-fit: contain;" alt="@noticia.TituloEn" />
								</div>

								<div style="background-color: var(--fondoBotonPequeño); padding: 10px 12px; display: flex; align-items: center;">
									@{
										string icono = string.Empty;

										if (noticia.Tipo == NoticiaTipo.Bundles)
										{
											icono = Bundles2.BundlesCargar.DevolverBundle(noticia.BundleTipo).ImagenIcono;
										}
										else if (noticia.Tipo == NoticiaTipo.Gratis)
										{
											icono = Gratis2.GratisCargar.DevolverGratis(noticia.GratisTipo).ImagenIcono;
										}
										else if (noticia.Tipo == NoticiaTipo.Suscripciones)
										{
											icono = Suscripciones2.SuscripcionesCargar.DevolverSuscripcion(noticia.SuscripcionTipo).ImagenIcono;
										}

										if (string.IsNullOrEmpty(icono) == false)
										{
											<div>
												<img src="@icono" style="width: 18px; height: 18px; margin-right: 20px;" alt="Store" />
											</div>
										}
									}

									<div style="margin-left: auto;">
										@Herramientas.Calculadora.DiferenciaTiempo(noticia.FechaEmpieza, idioma)
									</div>
								</div>
							</div>
						</a>
					</div>
				</div>
			}
		</div>

		<div class="noticia-enlaces" style="display: flex; align-items: center; justify-content: center; margin: 20px auto 0px auto;">
			<a class="boton-pequeño" style="padding: 15px 20px; font-size: 17px; text-align: center; min-width: 300px; width: auto;" href="/last-news">
				@Herramientas.Idiomas.CogerCadena(idioma, "LastNewsMore", "Index")
			</a>

			<div style="display: flex; flex-direction: column; gap: 10px">
				<label>@Herramientas.Idiomas.CogerCadena(idioma, "LastNewsSocial", "Index")</label>

				<pepeizqs_deals_web.Pages.Componentes.Interfaz.RedesSociales idioma="@idioma" tamañoFuente="22px"/>
			</div>
		</div>
	</div>
}
else
{
	<div class="noticia-enlaces" style="background-color: var(--fondoOscuro); padding: 30px; margin-bottom: 60px; max-width: 1000px; margin-left: auto; margin-right: auto; display: flex; align-items: center; justify-content: center;">
		<a class="boton-pequeño" style="padding: 15px 20px; font-size: 17px; text-align: center; min-width: 300px; width: auto;" href="/last-news">
			@Herramientas.Idiomas.CogerCadena(idioma, "LastNewsMore", "Index")
		</a>

		<div style="display: flex; flex-direction: column; gap: 10px">
			<label>@Herramientas.Idiomas.CogerCadena(idioma, "LastNewsSocial", "Index")</label>

			<pepeizqs_deals_web.Pages.Componentes.Interfaz.RedesSociales idioma="@idioma" tamañoFuente="22px"/>
		</div>
	</div>
}

<script>
	function hover(e, id) {
		var x = e.clientX,
			y = e.clientY;

		var tooltip = document.getElementById(id);

		if (screen.width / 2 > x) {
			tooltip.style.top = (y + 10) + 'px';
			tooltip.style.left = (x + 20) + 'px';
		}
		else {
			tooltip.style.top = (y - 10) + 'px';
			tooltip.style.left = (x - 20 - tooltip.getBoundingClientRect().width) + 'px';
		};
	};
</script>

@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	private List<Noticias.Noticia> noticiasMostrar = new List<Noticias.Noticia>();

	private SqlConnection conexion = new SqlConnection();

	protected override void OnInitialized()
	{
		conexion = Herramientas.BaseDatos.Conectar();

		using (conexion)
		{
			#region Noticias

			try
			{
				noticiasMostrar = BaseDatos.Noticias.Buscar.Actuales(conexion, true);
			}
			catch (Exception ex)
			{
				BaseDatos.Errores.Insertar.Mensaje("Portada Noticias", ex);
			}

			#endregion
		}
	}
}
