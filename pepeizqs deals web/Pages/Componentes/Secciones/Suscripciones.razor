@using Microsoft.AspNetCore.Components.Web;

<div style="font-size: 23px;">
	@Herramientas.Idiomas.CogerCadena(idioma, "Subscriptions.String1")
</div>

@foreach (var suscripcion in Suscripciones2.SuscripcionesCargar.GenerarListado())
{
	@if (juegosActuales.Count > 0)
	{
		<hr>

		<div style="display: flex; align-items: start;">
			<div class="perfil" style="width: 20%;">
				<img src="@suscripcion.ImagenLogo" />
			</div>

			<div class="perfil" style="width: 80%; display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 15px;">
				@foreach (var juego in juegosActuales)
				{
					@if (juego.Tipo == suscripcion.Id)
					{
						<div>
							<a href="@Herramientas.EnlaceAcortador.Generar(juego.Enlace, juego.Tipo)" class="boton-pequeño" style="padding: 10px;" target="_blank">
								<div>
									<img src="@juego.Imagen" style="max-width: 100%; max-height: 100%;" />
								</div>

								<div style="text-align: right; margin-top: 10px; height: 30px;">
									<img src="@Juegos.JuegoDRM2.SacarImagen(juego.DRM)" style="max-width: 30px; max-height: 30px;" />
								</div>
							</a>
						</div>
					}					
				}
			</div>
		</div>
	}	
}

<div style="font-size: 23px; margin-top: 60px">
	@Herramientas.Idiomas.CogerCadena(idioma, "Subscriptions.String2")
</div>

@foreach (var suscripcion in Suscripciones2.SuscripcionesCargar.GenerarListado())
{
	@if (juegosPasados.Count > 0)
	{
		<hr>

		<div style="display: flex; align-items: start;">
			<div class="perfil" style="width: 20%;">
				<img src="@suscripcion.ImagenLogo" />
			</div>

			<div class="perfil" style="width: 80%;">				
				@foreach (var juego in juegosPasados)
				{
					@if (juego.Tipo == suscripcion.Id)
					{
						<div>
							<a href="/game/@juego.JuegoId">@LimpiarNombre(juego.Nombre)</a> (@Juegos.JuegoDRM2.DevolverDRM(juego.DRM)) @juego.FechaTermina.Month.ToString()/@juego.FechaTermina.Year.ToString()
						</div>
					}					
				}
			</div>
		</div>
	}
}

@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	[Parameter]
	public string dominio { get; set; }

	List<Juegos.JuegoSuscripcion> juegos = new List<Juegos.JuegoSuscripcion>();

	List<Juegos.JuegoSuscripcion> juegosActuales = new List<Juegos.JuegoSuscripcion>();
	List<Juegos.JuegoSuscripcion> juegosPasados = new List<Juegos.JuegoSuscripcion>();

	protected override async Task OnInitializedAsync()
	{
		juegos = BaseDatos.Suscripciones.Buscar.Todos();

		if (juegos.Count > 0)
		{
			foreach (var juego in juegos)
			{
				if (DateTime.Now >= juego.FechaEmpieza && DateTime.Now <= juego.FechaTermina)
				{
					Juegos.Juego juego2 = BaseDatos.Juegos.Buscar.UnJuego(juego.JuegoId.ToString());

					if (juego2.Tipo == Juegos.JuegoTipo.Game)
					{
						juego.Imagen = await Herramientas.Imagenes.DescargarYGuardar(juego2.Imagenes.Library_600x900, "juegos", juego2.Id.ToString(), "library_600x900", dominio);
					}
					else if (juego2.Tipo == Juegos.JuegoTipo.DLC)
					{
						juego.Imagen = await Herramientas.Imagenes.DescargarYGuardar(juego2.Imagenes.Capsule_231x87, "juegos", juego2.Id.ToString(), "capsule_231x87", dominio);
					}

					juegosActuales.Add(juego);
				}
				else
				{
					juegosPasados.Add(juego);
				}
			}
		}

		if (juegosActuales.Count > 0)
		{
			juegosActuales = juegosActuales.OrderBy(x => x.Nombre).ToList();
		}

		if (juegosPasados.Count > 0)
		{
			juegosPasados = juegosPasados.OrderBy(x => x.Nombre).ToList();
		}
	}

	private string LimpiarNombre(string nombre)
	{
		nombre = nombre.Replace("???", null);
		nombre = nombre.Trim();

		return nombre;
	}
}
