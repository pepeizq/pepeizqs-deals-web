@using APIs.Steam
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.AspNetCore.Identity
@using pepeizqs_deals_web.Areas.Identity.Data

@inject UserManager<Usuario> UserManager
@inject SignInManager<Usuario> SignInManager
@inject IHttpContextAccessor HttpContextAccessor

<div style="font-size: 23px;">
	@Herramientas.Idiomas.CogerCadena(idioma, "Subscriptions.String1")
</div>

@foreach (var suscripcion in Suscripciones2.SuscripcionesCargar.GenerarListado())
{
	@if (juegosActuales.Count > 0)
	{
		<hr>

		<div style="display: flex; align-items: start;">
			<div class="perfil" style="width: 20%;">
				<img src="@suscripcion.ImagenLogo" />
			</div>

			<div class="perfil" style="width: 80%; display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 20px;">
				@foreach (var juego in juegosActuales)
				{
					@if (juego.Tipo == suscripcion.Id)
					{
						<div>
                            <a href="@Herramientas.EnlaceAcortador.Generar(juego.Enlace, juego.Tipo)" class="boton-pequeño tooltip2" style="padding: 0px; position: static;" target="_blank">
								<div>
									<img src="@juego.Imagen" style="max-width: 100%; max-height: 100%;" />
								</div>

                                <div style="display: flex; align-items: center; justify-content: right; height: 40px;">
									<img src="@Juegos.JuegoDRM2.SacarImagen(juego.DRM)" style="max-width: 24px; max-height: 24px; margin: 10px;" />

                                    @if (juego.Juego.Tipo == Juegos.JuegoTipo.Game)
                                    {
                                        @if (usuario != null)
                                        {
                                            @if (ComprobarUsuarioJuego(juego.Juego, juego.DRM) != null)
                                            {
                                                @if (ComprobarUsuarioJuego(juego.Juego, juego.DRM) == "3" || ComprobarUsuarioJuego(juego.Juego, juego.DRM) == "5")
                                                {
                                                    <div style="padding: 8px 11px; background-color: var(--fondoBien); color: var(--colorTextoBien); margin-left: 5px;">
                                                        <i class="fa-solid fa-check" style="font-size: 20px;"></i>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div style="padding: 8px 11px; background-color: var(--fondoAlerta); color: var(--colorTextoAlerta); margin-left: 5px;">
                                                        <i class="fa-solid fa-xmark" style="font-size: 20px;"></i>
                                                    </div>
                                                }
                                            }
                                        }
                                    }
                                </div>

                                @if (juego.Juego.Tipo == Juegos.JuegoTipo.Game)
                                {
                                    <div class="tooltip-abrir tooltip-abajo2" style="top: 50%; left: 50%; white-space: pre;">
                                        @if (usuario != null)
                                        {
                                            @if (ComprobarUsuarioJuego(juego.Juego, juego.DRM) != null)
                                            {
                                                @if (ComprobarUsuarioJuego(juego.Juego, juego.DRM) == "3" || ComprobarUsuarioJuego(juego.Juego, juego.DRM) == "5")
                                                {
                                                    <div style="padding: 20px; font-size: 14px; background-color: var(--fondoBien); color: var(--colorTextoBien);">
                                                        <span>@Herramientas.Idiomas.CogerCadena(idioma, "Free.String" + ComprobarUsuarioJuego(juego.Juego, juego.DRM))</span>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div style="padding: 20px; font-size: 14px; background-color: var(--fondoAlerta); color: var(--colorTextoAlerta);">
                                                        <span>@Herramientas.Idiomas.CogerCadena(idioma, "Free.String" + ComprobarUsuarioJuego(juego.Juego, juego.DRM))</span>
                                                    </div>
                                                }
                                            }
                                        }
                                    </div>
                                }
                            </a>
						</div>
					}					
				}
			</div>
		</div>
	}	
}

<div style="font-size: 23px; margin-top: 60px">
	@Herramientas.Idiomas.CogerCadena(idioma, "Subscriptions.String2")
</div>

<div style="display: flex; align-items: center; margin-top: 10px;">
    @foreach (var año in años)
    {
        <button @onclick="@(e => CambiarAño(e, año))" class="boton-pequeño" style="margin-right: 15px; padding: 6px 10px; width: auto;">
            @año
        </button>
    }
</div>

<div>
    @foreach (var suscripcion in Suscripciones2.SuscripcionesCargar.GenerarListado())
    {
        List<Juegos.JuegoSuscripcion> suscripcionesAño = new List<Juegos.JuegoSuscripcion>();

        foreach (var juego in juegosPasados)
        {
            if (juego.FechaEmpieza.Year.ToString() == añoSeleccionado && suscripcion.Id == juego.Tipo)
            {
                suscripcionesAño.Add(juego);
            }
        }

        if (suscripcionesAño.Count > 0)
        {
            <hr>

            <div style="display: flex; align-items: start;">
                <div class="perfil" style="width: 20%;">
                    <img src="@suscripcion.ImagenLogo" />
                </div>

                <div class="perfil" style="width: 80%;">
                    @{
                        int i = 1;
                        while (i < 13)
                        {
                            List<Juegos.JuegoSuscripcion> suscripcionesMensual = new List<Juegos.JuegoSuscripcion>();

                            foreach (var juego in suscripcionesAño)
                            {
                                if (juego.FechaEmpieza.Month == i)
                                {
                                    suscripcionesMensual.Add(juego);
                                }
                            }

                            if (suscripcionesMensual.Count > 0)
                            {
                                <label>@Herramientas.Idiomas.CogerCadena(idioma, "Month." + i.ToString())</label>

                                <ul>
                                    @foreach (var juegoMensual in suscripcionesMensual)
                                    {
                                        <li>
                                            <div>
                                                <a href="/game/@juegoMensual.JuegoId">@LimpiarNombre(juegoMensual.Nombre)</a> (@Juegos.JuegoDRM2.DevolverDRM(juegoMensual.DRM))
                                            </div>
                                        </li>
                                    }
                                </ul>
                            }

                            i += 1;
                        }
                    }
                </div>
            </div>
        }
    } 
</div>

@code {

    #nullable disable

    [Parameter]
    public string idioma { get; set; }

    [Parameter]
    public string dominio { get; set; }

    List<Juegos.JuegoSuscripcion> juegos = new List<Juegos.JuegoSuscripcion>();

    List<Juegos.JuegoSuscripcion> juegosActuales = new List<Juegos.JuegoSuscripcion>();
    List<Juegos.JuegoSuscripcion> juegosPasados = new List<Juegos.JuegoSuscripcion>();

    private Usuario usuario = new Usuario();
    private List<string> juegosUsuario = new List<string>();

    private List<string> años = new List<string>();
    private string añoSeleccionado = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        usuario = await UserManager.GetUserAsync(HttpContextAccessor.HttpContext.User);

        if (usuario != null)
        {
            if (usuario.SteamGames != null)
            {
                bool tiempo = true;

                if (usuario.SteamAccountLastCheck != null)
                {
                    if (Convert.ToDateTime(usuario.SteamAccountLastCheck) + TimeSpan.FromDays(7) > DateTime.Now)
                    {
                        tiempo = false;
                    }
                }

                if (tiempo == true)
                {
                    SteamUsuario datos = await Cuenta.CargarDatos(usuario.SteamAccount);

                    usuario.SteamGames = datos.Juegos;
                    usuario.SteamWishlist = datos.Deseados;
                    usuario.Avatar = datos.Avatar;
                    usuario.Nickname = datos.Nombre;
                    usuario.SteamAccountLastCheck = DateTime.Now.ToString();
                    usuario.OfficialGroup = datos.GrupoPremium;
                    usuario.OfficialGroup2 = datos.GrupoNormal;

                    await UserManager.UpdateAsync(usuario);
                }
            }

            juegosUsuario = Herramientas.Listados.Generar(usuario.SteamGames);
        }

        //--------------------------------------------------------------------

        DateTime arranque = new DateTime(2023, 9, 1);

        int i = 0;
        while (i < 100)
        {
            if (arranque.Year != DateTime.Now.Year)
            {
                años.Add(arranque.Year.ToString());
                arranque = arranque.AddYears(1);
            }
            i += 1;
        }

        años.Add(DateTime.Now.Year.ToString());
        años.Reverse();

        añoSeleccionado = DateTime.Now.Year.ToString();

        //--------------------------------------------------------------------

        juegos = BaseDatos.Suscripciones.Buscar.Todos();

        if (juegos.Count > 0)
        {
            foreach (var juego in juegos)
            {
                if (DateTime.Now >= juego.FechaEmpieza && DateTime.Now <= juego.FechaTermina)
                {
                    Juegos.Juego juego2 = BaseDatos.Juegos.Buscar.UnJuego(juego.JuegoId.ToString());

                    if (juego2.Tipo == Juegos.JuegoTipo.Game)
                    {
                        juego.Imagen = await Herramientas.Imagenes.DescargarYGuardar(juego2.Imagenes.Library_600x900, "juegos", juego2.Id.ToString(), "library_600x900", dominio);
                    }
                    else if (juego2.Tipo == Juegos.JuegoTipo.DLC)
                    {
                        juego.Imagen = await Herramientas.Imagenes.DescargarYGuardar(juego2.Imagenes.Capsule_231x87, "juegos", juego2.Id.ToString(), "capsule_231x87", dominio);
                    }

                    juego.Juego = juego2;
                    juegosActuales.Add(juego);
                }
                else
                {
                    juegosPasados.Add(juego);
                }
            }
        }

        if (juegosActuales.Count > 0)
        {
            juegosActuales = juegosActuales.OrderBy(x => x.Nombre).ToList();
        }

        if (juegosPasados.Count > 0)
        {
            juegosPasados = juegosPasados.OrderBy(x => x.Nombre).ToList();
        }
    }

    private void CambiarAño(MouseEventArgs e, string nuevoAño)
    {
        añoSeleccionado = nuevoAño;
    }

    private string LimpiarNombre(string nombre)
    {
        nombre = nombre.Replace("???", null);
        nombre = nombre.Trim();

        return nombre;
    }

    private string ComprobarUsuarioJuego(Juegos.Juego juego, Juegos.JuegoDRM drm)
    {
		if (usuario != null && juego.Tipo == Juegos.JuegoTipo.Game)
		{
			if (juegosUsuario.Count > 0)
			{
				foreach (var juegoUsuario in juegosUsuario)
				{
					if (juegoUsuario == juego.IdSteam.ToString())
					{
						if (drm == Juegos.JuegoDRM.Steam)
						{
							return "3";
						}
						else
						{
							return "5";
						}
					}
				}

                if (drm == Juegos.JuegoDRM.Steam)
				{
					return "4";
				}
				else
				{
					return "6";
				}
			}
		}

		return null;
	}
}
