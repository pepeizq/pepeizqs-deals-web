@using BaseDatos.Juegos;
@using Juegos;
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.Data.SqlClient;
@using Microsoft.JSInterop;
@using pepeizqs_deals_web.Areas.Identity.Data;

@inject UserManager<Usuario> UserManager
@inject IHttpContextAccessor HttpContextAccessor

@if (juegosMostrar.Count > 0)
{
	<div style="display: flex; align-items: center; width: 100%;">
		<div style="width: 80%; font-size: 23px; text-align: left;">
			@Herramientas.Idiomas.CogerCadena(idioma, "HistoricalLow.String1")
		</div>

		<div style="width: 20%; font-size: 16px; text-align: right;">
			@minimo.ToString()/@juegosConMinimos.Count.ToString()
		</div>
	</div>

	<hr/>

	<div style="position: fixed; z-index: 1; margin-top: -40px; width: 100%; left: 0;">
		@if (minimo >= 50)
		{
			<button @onclick="ClickearAtras" class="boton-pequeño" style="width: 50px; font-size: 22px; text-align: center; margin: 40px; left: 0; position: fixed;"><i class="fa-solid fa-chevron-left" /></button>
		}

		<button @onclick="ClickearAdelante" class="boton-pequeño" style="width: 50px; font-size: 22px; text-align: center; margin: 40px; right: 0; position: fixed;"><i class="fa-solid fa-chevron-right"></i></button>
	</div>

	<div class="perfil" id="caja" style="padding: 15px 20px;">
		@foreach (var juego in juegosMostrar)
		{
			<div class="perfil-flexible-centrado" style="margin-top: 15px; margin-bottom: 15px;">
				<a class="boton-pequeño" style="padding: 0px;" href="/game/@juego.Id">
					<div class="perfil-flexible-centrado">
						<div style="width: 18%;">
							<img src="@juego.Imagenes.Capsule_231x87" style="max-height: 100%; max-width: 100%;" />
						</div>

						<div style="width: 56%; padding: 4px 15px;">
							<div>@juego.Nombre</div>

							<div class="perfil-flexible-centrado" style="justify-content: left;">
								<div style="width: 20px; height: 20px;"><img src="@CargarImagenDRM(juego)" style="max-width: 100%; max-height: 100%;" /></div>

								@if (BaseDatos.Usuarios.Buscar.RolDios(UserManager.GetUserName(HttpContextAccessor.HttpContext!.User)) == true)
								{
									<div style="margin-left: 10px; margin-right: 10px;">@juego.Id</div>
									<div style="margin-left: 10px; margin-right: 10px;">@int.Parse(juego.Analisis.Cantidad.Replace(",", null))</div>
								}
							</div>						
						</div>

						<div style="width: 10%; padding: 4px 25px 4px 0px; text-align: right;">
							<img src="@CargarImagenTienda(juego)" style="max-width: 100%; max-height: 100%;" />
						</div>

						<div style="width: 6%; text-align: center;" class="juego-descuento">
							@CargarDescuento(juego)
						</div>

						<div style="width: 10%; padding: 4px 15px 4px 15px; text-align: center; font-size: 18px;">
							@CargarPrecio(juego)
						</div>
					</div>
				</a>
			</div>
		}
	</div>
}

@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	[Inject] 
	IJSRuntime javascript { get; set; }

	private List<Juego> juegosConMinimos = new List<Juego>();
	private List<Juego> juegosMostrar = new List<Juego>();

	private int minimo = 0;
	private int maximo = 0;

	protected override void OnInitialized()
	{
		minimo = 0;
		maximo = 50;

		juegosConMinimos = BaseDatos.Juegos.Precios.DevolverMinimos();

		if (juegosConMinimos != null)
		{
			if (juegosConMinimos.Count > 0)
			{
				juegosConMinimos.Sort(delegate (Juego j1, Juego j2)
				{
					int j1Analisis = int.Parse(j1.Analisis.Cantidad.Replace(",", null));
					int j2Analisis = int.Parse(j2.Analisis.Cantidad.Replace(",", null));

					return j2Analisis.CompareTo(j1Analisis);
				});
			}
		}

		CargarJuegos(minimo, maximo, false);
	}

	private void CargarJuegos(int minimo2, int maximo2, bool volverArriba)
	{
		if (juegosConMinimos != null)
		{
			if (juegosConMinimos.Count > 0)
			{
				juegosMostrar.Clear();	

				for (int i = minimo2; i < maximo2; i += 1)
				{
					juegosMostrar.Add(juegosConMinimos[i]);
				}
			}
		}
	}

	private void ClickearAdelante()
	{
		if (minimo + 50 <= juegosConMinimos.Count && maximo + 50 <= juegosConMinimos.Count)
		{
			minimo = minimo + 50;
			maximo = maximo + 50;
		}

		CargarJuegos(minimo, maximo, true);
	}

	private void ClickearAtras()
	{
		if (minimo - 50 >= 0 && maximo - 50 >= 0)
		{
			minimo = minimo - 50;
			maximo = maximo - 50;
		}

		CargarJuegos(minimo, maximo, true);
	}

	private string CargarImagenDRM(Juego juego)
	{
		string imagen = null;
		decimal precio = 10000000;

		foreach (var minimo in juego.PrecioMinimosHistoricos)
		{
			if (minimo.Precio < precio)
			{
				precio = minimo.Precio;

				JuegoPrecio oferta = minimo;
				imagen = oferta.DRM.ToString();
			}
		}

		if (imagen != null)
		{
			return JuegoDRM2.SacarImagen(imagen);
		}
		else
		{
			return null;
		}
	}

	private string CargarImagenTienda(Juego juego)
	{
		string imagen = null;
		decimal precio = 10000000;

		foreach (var minimo in juego.PrecioMinimosHistoricos)
		{
			if (minimo.Precio < precio)
			{
				precio = minimo.Precio;

				JuegoPrecio oferta = minimo;
				List<Tiendas2.Tienda> tiendas = Tiendas2.TiendasCargar.GenerarListado();

				foreach (var tienda in tiendas)
				{
					if (tienda.Id == oferta.Tienda)
					{
						imagen = tienda.Imagen300x80;
					}
				}
			}
		}

		if (imagen != null)
		{
			return imagen;
		}
		else
		{
			return null;
		}	
	}

	private string CargarDescuento(Juego juego)
	{
		string descuento = null;
		decimal precio = 10000000;

		foreach (var minimo in juego.PrecioMinimosHistoricos)
		{
			if (minimo.Precio < precio)
			{
				precio = minimo.Precio;

				JuegoPrecio oferta = minimo;
				descuento = oferta.Descuento.ToString() + "%";
			}
		}

		if (descuento != null)
		{
			return descuento;
		}
		else
		{
			return null;
		}
	}

	private string CargarPrecio(Juego juego)
	{
		string precioMensaje = null;
		decimal precio = 10000000;

		foreach (var minimo in juego.PrecioMinimosHistoricos)
		{
			if (minimo.Precio < precio)
			{
				precio = minimo.Precio;

				JuegoPrecio oferta = minimo;
				precioMensaje = oferta.Precio.ToString();
				precioMensaje = precioMensaje.Replace(".", ",");
				precioMensaje = precioMensaje + "€";
			}
		}

		if (precioMensaje != null)
		{
			return precioMensaje;
		}
		else
		{
			return null;
		}
	}
}
