@using APIs.Steam
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.AspNetCore.Identity;
@using pepeizqs_deals_web.Areas.Identity.Data;
@using Toolbelt.Blazor.HeadElement

@inject UserManager<Usuario> UserManager
@inject SignInManager<Usuario> SignInManager
@inject IHttpContextAccessor HttpContextAccessor

<script>
    function moverScroll(id) {
        const yOffset = -30;
        const element = document.getElementById(id);
        const y = element.getBoundingClientRect().top + window.pageYOffset + yOffset;

        window.scrollTo({ top: y, behavior: 'smooth' });
    }
</script>

<Title>
   @titulo • pepeizq's deals
</Title>

<Meta Property="og:title" Content="@titulo" />
<Meta Property="description" Content="@Herramientas.Idiomas.CogerCadena(idioma, "Free.String11")" />
<Meta Property="robots" Content="index, follow" />

@if (juegosActuales.Count > 0)
{
	<div style="font-size: 23px;">
		@Herramientas.Idiomas.CogerCadena(idioma, "Free.String1")
	</div>

    <hr>

    <div class="perfil" style="padding: 30px;">
        @foreach (var juego in juegosActuales)
        {
            bool usuarioTieneJuego = Herramientas.Tooltip.ComprobarUsuarioTieneJuego(usuario, juegosUsuario, juego.Juego, juego.DRM);
            bool usuarioTieneDeseado = false;

            string fondoColor = string.Empty;

            if (usuarioTieneJuego == true)
            {
                fondoColor = "background-color: var(--fondoBien);";
            }
            else
            {
                usuarioTieneDeseado = Herramientas.Deseados.ComprobarSiEsta(usuario, juego.Juego, juego.DRM);

                if (usuarioTieneDeseado == true)
                {
                    fondoColor = "background-color: var(--fondoAlerta);";
                }
            }

            bool usuarioConectado = false;

            if (usuario != null)
            {
                usuarioConectado = true;
            }

            Herramientas.ToolTipDatos tooltipDatos = Herramientas.Tooltip.Generar(idioma, juego.Juego, juego.DRM, usuarioConectado, usuarioTieneJuego, usuarioTieneDeseado);

            <div class="tooltip-juego" onmousemove="hoverTooltip(event, 'tooltip-@juego.JuegoId.ToString()')">
                <div id="tooltip-@juego.JuegoId.ToString()" class="tooltip-relleno">
                    @if (string.IsNullOrEmpty(tooltipDatos.Video) == false)
                    {
                        <video src="@tooltipDatos.Video" autoplay="autoplay" loop muted style="width: 460px; height: 215px; object-fit: cover;" />
                    }

                    <div style="padding: 15px; text-align: center;">
                        <div style="text-align: center;">
                            @tooltipDatos.Nombre
                        </div>

                        @if (string.IsNullOrEmpty(tooltipDatos.ReviewsIcono) == false && string.IsNullOrEmpty(tooltipDatos.ReviewsCantidad) == false)
                        {
                            <div style="display: flex; align-items: center; margin-top: 5px; margin-bottom: 5px; padding: 5px; text-align: center; justify-content: center;">
                                <img src="@tooltipDatos.ReviewsIcono" style="width: 20px; height: 20px; margin-right: 15px;" />
                                <label style="font-size: 14px;">@tooltipDatos.ReviewsCantidad</label>
                            </div>
                        }

                        @if (string.IsNullOrEmpty(tooltipDatos.UsuarioMensaje) == false)
                        {
                            <div style="text-align: center;">
                                @tooltipDatos.UsuarioMensaje
                            </div>
                        }
                    </div>
                </div>

                <a href="@Herramientas.EnlaceAcortador.Generar(juego.Enlace, juego.Tipo)" class="boton-pequeño" style="padding: 0px; text-align: center; background: transparent; position: relative; @fondoColor" target="_blank">
                    <div style="display: flex; align-items: center; padding: 10px;">
                        <div style="text-align: center; width: 17%;">
                            <img src="@juego.Imagen" style="width: 100%; height: 100%;" />
                        </div>

                        <div style="padding-left: 20px; padding-right: 20px; text-align: left;">
                            <div style="margin-bottom: 10px; font-size: 17px;">
                                @juego.Nombre
                            </div>

                            <div style="display: flex; align-items: center;">
                                @{
                                    Gratis2.Gratis gratis = Gratis2.GratisCargar.DevolverGratis(juego.Tipo);

                                    <div>
                                        <img src="@gratis.ImagenIcono" style="width: 20px; height: 20px;" />
                                    </div>

                                    if (gratis.DRMEnseñar == true)
                                    {
                                        <div style="margin-left: 15px;">
                                            <img src="@Juegos.JuegoDRM2.SacarImagen(juego.DRM)" style="width: 20px; height: 20px;" />
                                        </div>
                                    }

                                    if (juego.Juego.Tipo == Juegos.JuegoTipo.DLC)
                                    {
                                        <div style="margin-left: 15px; font-size: 14px; background: var(--fondoDlc);">
                                            <span style="padding: 4px 6px; line-height: 24px; vertical-align: middle;">@Herramientas.Idiomas.CogerCadena(idioma, "Bundles.String15")</span>
                                        </div>
                                    }
                                }
                            </div>
                        </div>

                        <div style="margin-left: auto; margin-right: 5px; display: flex; align-items: center;">
                            @{
                                int bundlesEstado = 0;

                                if (juego.Juego.Bundles != null)
                                {
                                    bundlesEstado = juego.Juego.Bundles.Count;
                                }

                                <div style="padding-left: 20px; text-align: center;">
                                    <div style="margin-bottom: 5px;">
                                        @Herramientas.Idiomas.CogerCadena(idioma, "Bundles.String10")
                                    </div>

                                    <div>
                                        @bundlesEstado
                                    </div>
                                </div>

                                int gratisEstado = 0;

                                if (juego.Juego.Gratis != null)
                                {
                                    gratisEstado = juego.Juego.Gratis.Count;

                                    if (gratisEstado > 0)
                                    {
                                        gratisEstado -= 1;
                                    }
                                }

                                <div style="padding-left: 20px; text-align: center;">
                                    <div style="margin-bottom: 5px;">
                                        @Herramientas.Idiomas.CogerCadena(idioma, "Bundles.String11")
                                    </div>

                                    <div>
                                        @gratisEstado
                                    </div>
                                </div>

                                int suscripcionesEstado = 0;

                                if (juego.Juego.Suscripciones != null)
                                {
                                    suscripcionesEstado = juego.Juego.Suscripciones.Count;
                                }

                                <div style="padding-left: 20px; text-align: center;">
                                    <div style="margin-bottom: 5px;">
                                        @Herramientas.Idiomas.CogerCadena(idioma, "Bundles.String12")
                                    </div>

                                    <div>
                                        @suscripcionesEstado
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </a>
            </div>
            
            <hr />
        }
    </div>
}

<div style="font-size: 23px; margin-top: 60px;">
    @Herramientas.Idiomas.CogerCadena(idioma, "Free.String2")
</div>

<div style="display: flex; align-items: start; margin-top: 10px;">
    @foreach (var año in años)
    {
        <div style="margin-right: 15px;">
            <button @onclick="@(e => CambiarAño(e, año))" class="boton-pequeño" style=" padding: 6px 10px; width: auto;">
                @año
            </button>

            @if (añoSeleccionado == año)
            {
                <div style="margin-top: 10px; background: var(--colorTexto); padding: 1px;">
                </div>

                <div style="position: absolute; margin-top: 15px; display: flex; align-items: center;">
                    @foreach (var gratisPasado in gratisPasados)
                    {
                        List<Juegos.JuegoGratis> gratisAño = new List<Juegos.JuegoGratis>();

                        foreach (var juego in gratisPasado.Juegos)
                        {
                            if (juego.FechaEmpieza.Year.ToString() == añoSeleccionado)
                            {
                                gratisAño.Add(juego);
                            }
                        }

                        if (gratisAño.Count > 0)
                        {
                            <div style="margin-right: 15px; font-size: 14px;">
                                <a onclick="moverScroll('pasado-@gratisPasado.Tipo.Nombre')" style="color: var(--colorTexto); text-decoration: none; cursor: pointer;"><img src="@gratisPasado.Tipo.ImagenIcono" style="width: 22px; height: 22px;" /> (@gratisAño.Count.ToString())</a>
                            </div>                           
                        }
                    }
                </div>
            }
        </div>
    }
</div>

<div style="margin-top: 55px;">
    @foreach (var gratisPasado in gratisPasados)
    {
        List<Juegos.JuegoGratis> gratisAño = new List<Juegos.JuegoGratis>();

        foreach (var juego in gratisPasado.Juegos)
        {
            if (juego.FechaEmpieza.Year.ToString() == añoSeleccionado)
            {
                gratisAño.Add(juego);
            }
        }

        if (gratisAño.Count > 0)
        {
            <hr>

            <div id="pasado-@gratisPasado.Tipo.Nombre" style="display: flex; align-items: start;">
                <div class="perfil" style="width: 20%;">
                    <img src="@gratisPasado.Tipo.ImagenLogo" />
                </div>

                <div class="perfil" style="width: 80%;">
                    @{
                        int i = 1;
                        while (i < 13)
                        {
                            List<Juegos.JuegoGratis> gratisMensual = new List<Juegos.JuegoGratis>();

                            foreach (var juego in gratisAño)
                            {
                                if (juego.FechaEmpieza.Month == i)
                                {
                                    gratisMensual.Add(juego);
                                }
                            }

                            if (gratisMensual.Count > 0)
                            {
                                <label>@Herramientas.Idiomas.CogerCadena(idioma, "Month." + i.ToString())</label>

                                <ul>
                                    @foreach (var juegoMensual in gratisMensual)
                                    {
                                        <li>
                                            <a href="/game/@juegoMensual.JuegoId">
                                                <label style="cursor: pointer;">@juegoMensual.Nombre</label>

                                                @if (gratisPasado.Tipo.DRMEnseñar == true)
                                                {
                                                    <label style="cursor: pointer; margin-left: 5px;">(@Juegos.JuegoDRM2.DevolverDRM(juegoMensual.DRM))</label>
                                                }
                                            </a>
                                        </li>
                                    }
                                </ul>
                            }

                            i += 1;
                        }
                    }
                </div>
            </div>
        }
    }
</div>

@code {

    #nullable disable

    [Parameter]
    public string idioma { get; set; }

    [Parameter]
    public string dominio { get; set; }

    private string titulo = string.Empty;

    private List<Juegos.JuegoGratis> juegosActuales = new List<Juegos.JuegoGratis>();
    private List<Gratis2.GratisComponente> gratisPasados = new List<Gratis2.GratisComponente>();

    private Usuario usuario = new Usuario();
    private List<string> juegosUsuario = new List<string>();

    private List<string> años = new List<string>();
    private string añoSeleccionado = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        usuario = UserManager.GetUserAsync(HttpContextAccessor.HttpContext.User).Result;

        if (usuario != null)
        {
            if (string.IsNullOrEmpty(usuario.SteamAccount) == false && string.IsNullOrEmpty(usuario.SteamAccountLastCheck) == false)
            {
                bool tiempo = true;

                if (string.IsNullOrEmpty(usuario.SteamAccountLastCheck) == false)
                {
                    if (Convert.ToDateTime(usuario.SteamAccountLastCheck) + TimeSpan.FromDays(7) > DateTime.Now)
                    {
                        tiempo = false;
                    }
                }

                if (tiempo == true)
                {
                    SteamUsuario datos = await Cuenta.CargarDatos(usuario.SteamAccount);

                    usuario.SteamGames = datos.Juegos;
                    usuario.SteamWishlist = datos.Deseados;
                    usuario.Avatar = datos.Avatar;
                    usuario.Nickname = datos.Nombre;
                    usuario.SteamAccountLastCheck = DateTime.Now.ToString();
                    usuario.OfficialGroup = datos.GrupoPremium;
                    usuario.OfficialGroup2 = datos.GrupoNormal;

                    await UserManager.UpdateAsync(usuario);
                }
            }

            juegosUsuario =	Herramientas.Listados.Generar(usuario.SteamGames);
        }

        //--------------------------------------------------------------------

        DateTime arranque = new DateTime(2011, 1, 1);

        int i = 0;
        while (i < 100)
        {
            if (arranque.Year != DateTime.Now.Year)
            {
                años.Add(arranque.Year.ToString());
                arranque = arranque.AddYears(1);
            }
            i += 1;
        }

        años.Add(DateTime.Now.Year.ToString());
        años.Reverse();

        añoSeleccionado = DateTime.Now.Year.ToString();

        //--------------------------------------------------------------------

        List<Juegos.JuegoGratis> juegosTodos = BaseDatos.Gratis.Buscar.Todos();

        if (juegosTodos.Count > 0)
        {           
            List<Juegos.JuegoGratis> juegosPasados = new List<Juegos.JuegoGratis>();

            foreach (var juego in juegosTodos)
            {
                if (DateTime.Now >= juego.FechaEmpieza && DateTime.Now <= juego.FechaTermina)
                {
                    Juegos.Juego juego2 = BaseDatos.Juegos.Buscar.UnJuego(juego.JuegoId.ToString());

                    juego.Imagen = await Herramientas.Imagenes.DescargarYGuardar(juego2.Imagenes.Header_460x215, "juegos", juego2.Id.ToString(), "library_600x900", dominio);
                    juego.Juego = juego2;

                    juegosActuales.Add(juego);
                }
                else
                {
                    juegosPasados.Add(juego);
                }
            }

            if (juegosActuales.Count > 0)
            {
                juegosActuales = juegosActuales.OrderBy(x => x.Nombre).ToList();

                int juegos = 0;
                int dlcs = 0;

                foreach (var juego in juegosActuales)
                {
                    if (juego.Juego.Tipo == Juegos.JuegoTipo.Game)
                    {
                        juegos += 1;
                    }
                    else if (juego.Juego.Tipo == Juegos.JuegoTipo.DLC)
                    {
                        dlcs += 1;
                    }
                }

                if (juegos == 0)
                {
                    if (dlcs == 1)
                    {
                        titulo = string.Format(Herramientas.Idiomas.CogerCadena(idioma, "Free.String6"), dlcs.ToString()) + " " + Herramientas.Idiomas.CogerCadena(idioma, "Free.String8");
                    }
                    else if (dlcs > 1)
                    {
                        titulo = string.Format(Herramientas.Idiomas.CogerCadena(idioma, "Free.String7"), dlcs.ToString()) + " " + Herramientas.Idiomas.CogerCadena(idioma, "Free.String9");
                    }
                }
                else if (juegos > 0)
                {
                    if (juegos == 1 && dlcs == 0)
                    {
                        titulo = string.Format(Herramientas.Idiomas.CogerCadena(idioma, "Free.String3"), juegos.ToString()) + " " + Herramientas.Idiomas.CogerCadena(idioma, "Free.String8");
                    }
                    else if (juegos > 1 && dlcs == 0)
                    {
                        titulo = string.Format(Herramientas.Idiomas.CogerCadena(idioma, "Free.String4"), juegos.ToString()) + " " + Herramientas.Idiomas.CogerCadena(idioma, "Free.String9");
                    }
                    else if (juegos == 1 && dlcs == 1)
                    {
                        titulo = string.Format(Herramientas.Idiomas.CogerCadena(idioma, "Free.String3"), juegos.ToString()) + " " +
                            Herramientas.Idiomas.CogerCadena(idioma, "Free.String5") + " " +
                            string.Format(Herramientas.Idiomas.CogerCadena(idioma, "Free.String6"), dlcs.ToString()) + " " +
                            Herramientas.Idiomas.CogerCadena(idioma, "Free.String9");
                    }
                    else if (juegos > 1 && dlcs == 1)
                    {
                        titulo = string.Format(Herramientas.Idiomas.CogerCadena(idioma, "Free.String4"), juegos.ToString()) + " " +
                            Herramientas.Idiomas.CogerCadena(idioma, "Free.String5") + " " +
                            string.Format(Herramientas.Idiomas.CogerCadena(idioma, "Free.String6"), dlcs.ToString()) + " " +
                            Herramientas.Idiomas.CogerCadena(idioma, "Free.String9");
                    }
                    else if (juegos == 1 && dlcs > 1)
                    {
                        titulo = string.Format(Herramientas.Idiomas.CogerCadena(idioma, "Free.String3"), juegos.ToString()) + " " +
                            Herramientas.Idiomas.CogerCadena(idioma, "Free.String5") + " " +
                            string.Format(Herramientas.Idiomas.CogerCadena(idioma, "Free.String7"), dlcs.ToString()) + " " +
                            Herramientas.Idiomas.CogerCadena(idioma, "Free.String9");
                    }
                    else if (juegos > 1 && dlcs > 1)
                    {
                        titulo = string.Format(Herramientas.Idiomas.CogerCadena(idioma, "Free.String4"), juegos.ToString()) + " " + 
                            Herramientas.Idiomas.CogerCadena(idioma, "Free.String5") + " " +
                            string.Format(Herramientas.Idiomas.CogerCadena(idioma, "Free.String7"), dlcs.ToString()) + " " +
                            Herramientas.Idiomas.CogerCadena(idioma, "Free.String9");
                    }
                }

                if (string.IsNullOrEmpty(titulo) == true)
                {
                    titulo = Herramientas.Idiomas.CogerCadena(idioma, "Free.String10");
                }
            }

            if (juegosPasados.Count > 0)
            {
                juegosPasados = juegosPasados.OrderBy(x => x.Nombre).ToList();

                foreach (var gratis in Gratis2.GratisCargar.GenerarListado())
                {
                    List<Juegos.JuegoGratis> juegos2 = new List<Juegos.JuegoGratis>();

                    foreach (var juego in juegosPasados)
                    {
                        if (juego.Tipo == gratis.Tipo)
                        {
                            juegos2.Add(juego);
                        }
                    }

                    if (juegos2.Count > 0)
                    {
                        Gratis2.GratisComponente componente = new Gratis2.GratisComponente();
                        componente.Juegos = juegos2;
                        componente.Tipo = gratis;

                        gratisPasados.Add(componente);
                    }
                }
            }
        }
    }

    private void CambiarAño(MouseEventArgs e, string nuevoAño)
    {
        añoSeleccionado = nuevoAño;
    }
}
