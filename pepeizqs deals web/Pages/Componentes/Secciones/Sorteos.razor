@using APIs.Steam
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.AspNetCore.Identity;
@using pepeizqs_deals_web.Areas.Identity.Data;

@inject UserManager<Usuario> UserManager
@inject SignInManager<Usuario> SignInManager
@inject IHttpContextAccessor HttpContextAccessor

@if (sorteosGrupoNormal != null)
{
    if (sorteosGrupoNormal.Count > 0)
    {
        <div style="font-size: 23px; display: flex; align-items: center;">
            <label>@Herramientas.Idiomas.CogerCadena(idioma, "Giveaways.String2")</label>

            @if (usuario != null)
            {
                if (string.IsNullOrEmpty(usuario.OfficialGroup2) == false)
                {
                    if (usuario.OfficialGroup2.ToLower() == "true")
                    {
                        <label style="font-size: 15px; margin-left: 20px;">(@Herramientas.Idiomas.CogerCadena(idioma, "Giveaways.String5"))</label>
                    }
                    else
                    {
                        <label style="font-size: 15px; margin-left: 20px;">(@Herramientas.Idiomas.CogerCadena(idioma, "Giveaways.String6"))</label>
                    }
                }
                else
                {
                    <label style="font-size: 15px; margin-left: 20px;">(@Herramientas.Idiomas.CogerCadena(idioma, "Giveaways.String6"))</label>
                }
            }
        </div>

        <hr/>

        <div class="perfil">
            @foreach (var sorteo in sorteosGrupoNormal)
            {
                if (sorteo.Sorteo.FechaTermina >= DateTime.Now)
                {
                    if (sorteo.PuedeParticipar == true)
                    {
                        <button class="boton-pequeño" style="padding: 0px;" @onclick="@(e => Entrar(e, sorteo))">
                            <div class="perfil-flexible-centrado">
                                <div style="width: 20%;">
                                    <img src="@sorteo.Juego.Imagenes.Capsule_231x87" style="max-height: 100%; max-width: 100%;" />
                                </div>

                                <div style="width: 80%; padding-left: 15px; padding-right: 15px;">
                                    <div style="margin-bottom: 10px;">@sorteo.Juego.Nombre</div>

                                    <div>@CalcularParticipantes(sorteo.Sorteo)</div>
                                </div>
                            </div>
                        </button>
                    }
                    else
                    {
                        <button class="boton-pequeño" style="padding: 0px; cursor: not-allowed; pointer-events: none;">
                            <div class="perfil-flexible-centrado">
                                <div style="width: 20%;">
                                    <img src="@sorteo.Juego.Imagenes.Capsule_231x87" style="max-height: 100%; max-width: 100%;" />
                                </div>

                                <div style="width: 80%; padding-left: 15px; padding-right: 15px;">
                                    <div style="margin-bottom: 10px;">@sorteo.Juego.Nombre</div>

                                    <div style="display: flex; align-items: center;">
                                        <div>@CalcularParticipantes(sorteo.Sorteo)</div>

                                        @if (sorteo.TieneJuego == true)
                                        {
                                            <div style="margin-left: 20px;">test</div>
                                        }
                                    </div>                                    
                                </div>
                            </div>
                        </button>
                    }                    
                }
            }
        </div>
    }
}

@code {

    #nullable disable

    [Parameter]
    public string idioma { get; set; }

    [Parameter]
    public string dominio { get; set; }

    List<JuegoSorteo> sorteosGrupoPremium = new List<JuegoSorteo>();
    List<JuegoSorteo> sorteosGrupoNormal = new List<JuegoSorteo>();

    private Usuario usuario = new Usuario();
    private List<string> juegosUsuario = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        usuario = await UserManager.GetUserAsync(HttpContextAccessor.HttpContext.User);

        if (usuario != null)
        {
            if (string.IsNullOrEmpty(usuario.SteamGames) == false && string.IsNullOrEmpty(usuario.SteamAccount) == false)
            {
                bool tiempo = true;

                if (string.IsNullOrEmpty(usuario.SteamAccountLastCheck) == false)
                {
                    if (Convert.ToDateTime(usuario.SteamAccountLastCheck) + TimeSpan.FromDays(7) > DateTime.Now)
                    {
                        tiempo = false;
                    }
                }

                if (tiempo == true)
                {
                    SteamUsuario datos = await Cuenta.CargarDatos(usuario.SteamAccount);

                    usuario.SteamGames = datos.Juegos;
                    usuario.SteamWishlist = datos.Deseados;
                    usuario.Avatar = datos.Avatar;
                    usuario.Nickname = datos.Nombre;
                    usuario.SteamAccountLastCheck = DateTime.Now.ToString();
                    usuario.OfficialGroup = datos.GrupoPremium;
                    usuario.OfficialGroup2 = datos.GrupoNormal;

                    await UserManager.UpdateAsync(usuario);
                }
            }

            juegosUsuario = Herramientas.Listados.Generar(usuario.SteamGames);
        }

        //--------------------------------------------------------------------

        List<Sorteos2.Sorteo> listaSorteos = BaseDatos.Sorteos.Buscar.Todos();

        if (listaSorteos != null)
        {
            if (listaSorteos.Count > 0)
            {
                foreach (var sorteo in listaSorteos)
                {
                    if (sorteo.FechaTermina >= DateTime.Now)
                    {
                        if (string.IsNullOrEmpty(sorteo.JuegoId.ToString()) == false)
                        {
                            Juegos.Juego juego = BaseDatos.Juegos.Buscar.UnJuego(sorteo.JuegoId.ToString());

                            if (juego != null)
                            {                               
                                bool puedeParticipar = true;
                                bool tieneJuego = false;

                                if (usuario != null)
                                {
                                    if (string.IsNullOrEmpty(usuario.SteamGames) == false)
                                    {
                                        List<string> juegosUsuario = Herramientas.Listados.Generar(usuario.SteamGames);

                                        foreach (var juegoUsuario in juegosUsuario)
                                        {
                                            if (juegoUsuario == juego.IdSteam.ToString())
                                            {
                                                puedeParticipar = false;
                                                tieneJuego = true;
                                            }
                                        }
                                    }
                                }

                                JuegoSorteo nuevoSorteo = new JuegoSorteo();
                                nuevoSorteo.Sorteo = sorteo;
                                nuevoSorteo.Juego = juego;
                                nuevoSorteo.PuedeParticipar = puedeParticipar;
                                nuevoSorteo.TieneJuego = tieneJuego;

                                if (sorteo.GrupoId == "40604285")
                                {
                                    if (nuevoSorteo.PuedeParticipar == true)
                                    {
                                        puedeParticipar = false;

                                        if (usuario != null)
                                        {
                                            if (string.IsNullOrEmpty(usuario.OfficialGroup) == false)
                                            {
                                                if (usuario.OfficialGroup2.ToLower() == "true")
                                                {
                                                    puedeParticipar = true;
                                                }
                                            }
                                        }

                                        nuevoSorteo.PuedeParticipar = puedeParticipar;
                                    }

                                    sorteosGrupoPremium.Add(nuevoSorteo);
                                }
                                else if (sorteo.GrupoId == "33500256")
                                {
                                    if (nuevoSorteo.PuedeParticipar == true)
                                    {
                                        puedeParticipar = false;

                                        if (usuario != null)
                                        {
                                            if (string.IsNullOrEmpty(usuario.OfficialGroup) == false)
                                            {
                                                if (usuario.OfficialGroup2.ToLower() == "true")
                                                {
                                                    puedeParticipar = true;
                                                }
                                            }
                                        }

                                        nuevoSorteo.PuedeParticipar = puedeParticipar;
                                    }                                  

                                    sorteosGrupoNormal.Add(nuevoSorteo);
                                }                             
                            }
                        }                      
                    }
                }
            }
        }

    }

    private string CalcularParticipantes(Sorteos2.Sorteo sorteo)
    {
        string mensaje = string.Empty;

        if (sorteo != null)
        {
            if (sorteo.Participantes != null)
            {
                if (sorteo.Participantes.Count == 1)
                {
                    mensaje = sorteo.Participantes.Count.ToString() + " " + Herramientas.Idiomas.CogerCadena(idioma, "Giveaways.String3");
                }
                else
                {
                    mensaje = sorteo.Participantes.Count.ToString() + " " + Herramientas.Idiomas.CogerCadena(idioma, "Giveaways.String4");
                }
            }
        }

        if (mensaje == string.Empty)
        {
            mensaje = "0 " + Herramientas.Idiomas.CogerCadena(idioma, "Giveaways.String4");
        }

        return mensaje;
    }

    private void Entrar(MouseEventArgs e, JuegoSorteo sorteo)
    {
        if (sorteo != null)
        {

        }
    }

    public class JuegoSorteo
    {
        public Sorteos2.Sorteo Sorteo;
        public Juegos.Juego Juego;
        public bool PuedeParticipar;
        public bool TieneJuego;
    }
}
