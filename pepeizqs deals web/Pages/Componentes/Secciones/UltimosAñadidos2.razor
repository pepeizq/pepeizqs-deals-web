@using BaseDatos.Juegos;
@using Juegos;
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.AspNetCore.Identity
@using Microsoft.Data.SqlClient;
@using pepeizqs_deals_web.Areas.Identity.Data;

@inject UserManager<Usuario> UserManager
@inject IHttpContextAccessor HttpContextAccessor

@if (juegosMostrar.Count > 0)
{
	<div style="position: fixed; z-index: 1; margin-top: -40px; width: 100%; left: 0;">
		<button @onclick="ClickearAtras" class="boton-pequeño" style="width: 50px; font-size: 22px; text-align: center; margin: 40px; left: 0; position: fixed;"><i class="fa-solid fa-chevron-left"></i></button>
		<button @onclick="ClickearAdelante" class="boton-pequeño" style="width: 50px; font-size: 22px; text-align: center; margin: 40px; right: 0; position: fixed;"><i class="fa-solid fa-chevron-right"></i></button>
	</div>

	<div class="perfil" style="padding: 15px 20px;">
		@foreach (var juego in juegosMostrar)
		{
			<div class="perfil-flexible-centrado" style="margin-top: 15px; margin-bottom: 15px;">
				<a class="boton-pequeño" style="padding: 0px;" href="/game/@juego.Id" target="_blank">
					<div class="perfil-flexible-centrado">
						<div style="width: 20%;">
							<img src="@juego.Imagenes.Capsule_231x87" style="max-height:100%; max-width:100%;" />
						</div>

						<div style="width: 60%; padding: 4px 15px;">
							@juego.Nombre

							@if (BaseDatos.Usuarios.Buscar.RolDios(UserManager.GetUserName(HttpContextAccessor.HttpContext.User)) == true)
							{
								<br /> @juego.Id
							}
						</div>

						<div style="width: 20%; padding: 4px 30px 4px 0px; text-align: right;">
							@Juegos.JuegoFicha.MensajeMinimoActual(juego, true)
						</div>
					</div>
				</a>
			</div>
		}
	</div>
}

@code {

	#nullable disable

	private List<Juego> juegos = new List<Juego>();
	private List<Juego> juegosMostrar = new List<Juego>();

	private int minimo = 0;
	private int maximo = 0;

	protected override void OnInitialized()
	{
		minimo = 0;
		maximo = 50;

		SqlConnection conexion = Herramientas.BaseDatos.Conectar();

		using (conexion)
		{
			conexion.Open();

			juegos = Buscar.Todos(conexion);

			if (juegos.Count > 0)
			{
				juegos = juegos.OrderBy(x => x.Id).Reverse().ToList();
			}
		}

		CargarJuegos(minimo, maximo);
	}

	private void CargarJuegos(int minimo2, int maximo2)
	{
		juegosMostrar.Clear();

		for (int i = minimo2; i < maximo2; i += 1)
		{
			juegosMostrar.Add(juegos[i]);
		}
	}

	private void ClickearAdelante()
	{
		if (minimo + 50 < juegos.Count && maximo + 50 < juegos.Count)
		{
			minimo = minimo + 50;
			maximo = maximo + 50;
		}

		CargarJuegos(minimo, maximo);
	}

	private void ClickearAtras()
	{
		if (minimo - 50 >= 0 && maximo - 50 >= 0)
		{
			minimo = minimo - 50;
			maximo = maximo - 50;
		}

		CargarJuegos(minimo, maximo);
	}
}
