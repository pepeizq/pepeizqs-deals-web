@using Microsoft.AspNetCore.Components.Web

<div style="display: flex; align-items: start;">
	<div class="perfil" style="width: 20%; padding: 20px;">
		<img src="@imagen" style="width: 100%; height: 100%;" />
	</div>
	
	<div class="perfil" style="width: 100%; display: grid; grid-template-columns: 1fr 1fr 1fr 1fr; grid-gap: 20px;">
		@if (juegos != null)
		{
			foreach (var juego in juegos)
			{
				<button class="boton-pequeño">
					<div>
						<img src="@juego.Imagenes.Header_460x215" style="width: 100%; height: 100%;"/>
					</div>
				</button>
			}
		}
	</div>
</div>



@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	[Parameter]
	public string id { get; set; }

	[Parameter]
	public string nombre { get; set; }

	[Parameter]
	public string descripcion { get; set; }

	[Parameter]
	public string imagen { get; set; }

	[Parameter]
	public List<string> acepciones { get; set; }

	public List<Juegos.Juego> juegos = new List<Juegos.Juego>();

	#nullable enable
	[CascadingParameter]
	public HttpContext? HttpContext { get; set; }
	#nullable disable

	protected override async Task OnInitializedAsync()
	{
		if (HttpContext == null)
		{
			await Task.Delay(10);
			juegos = BaseDatos.Publishers.Buscar.Juegos(nombre);

			if (acepciones != null)
			{
				if (acepciones.Count > 0)
				{
					foreach (var acepcion in acepciones)
					{
						if (acepcion != "acepcion")
						{
							List<Juegos.Juego> nuevosJuegos = BaseDatos.Publishers.Buscar.Juegos(acepcion);

							foreach (var nuevoJuego in nuevosJuegos)
							{
								juegos.Add(nuevoJuego);
							}
						}
					}
				}
			}
		}
	}
}
