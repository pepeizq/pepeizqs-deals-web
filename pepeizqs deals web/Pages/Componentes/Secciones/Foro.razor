@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using Microsoft.AspNetCore.Identity
@using Microsoft.JSInterop
@using pepeizqs_deals_web.Areas.Identity.Data

@inject UserManager<Usuario> UserManager
@inject IJSRuntime JavaScript

<script>
    window.ChangeUrl = function (url) {
        history.pushState(null, '', url);
    }
</script>

<style>
    .titulo-foro {
        width: 100%;
        max-width: 1100px;
        margin: auto;
    }

    .caja-foro {
		background: linear-gradient(180deg, var(--fondoOscuro) 0%, var(--fondoMinimo) 211.07%);
		border: 2px solid var(--fondoOscuro);
		box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.28),0px 0px 2px 0px rgba(0, 0, 0, 0.24);
		border-radius: 5px;
        padding: 20px;
        width: 100%;
        max-width: 1100px;
        margin: auto;
    }
</style>

@if (categoriaId == 0 && postId == 0)
{
    if (categorias != null)
    {
        if (categorias.Count > 0)
        {
            <div class="titulo-foro">
                <div style="display: flex; align-items: center; gap: 5px; justify-content: space-between; height: 30px;">
                    <h1 style="font-size: 20px; margin: 0px;">
                        @Herramientas.Idiomas.BuscarTexto(idioma, "String6", "Forum")
                    </h1>

                    <div style="display: flex; align-items: center; gap: 20px; justify-content: right;">
                        @if (idiomaId != 0)
                        {
                            <button @onclick="@(e => CambiarIdioma(e, 0))" class="boton-pequeño" style="background: transparent; padding: 0px; width: fit-content;">
                                <img src="/imagenes/banderas/english.svg" style="width: 24px; height: 24px;" alt="English" />
                            </button>
                        }

                        @if (idiomaId != 1)
                        {
                            <button @onclick="@(e => CambiarIdioma(e, 1))" class="boton-pequeño" style="background: transparent; padding: 0px; width: fit-content;">
                                <img src="/imagenes/banderas/spanish.svg" style="width: 24px; height: 24px;" alt="Spanish" />
                            </button>
                        }
                    </div>
                </div>  
                <hr/>
            </div>

            <div style="display: flex; flex-direction: column; gap: 30px;">
                @if (moderadorOAdmin == true)
                {
                    <div class="caja-foro">
                        <div style="display: flex; flex-direction: column; gap: 20px;">
                            @foreach (var categoria in categoriasAdmin)
                            {
                                <button @onclick="@(e => NavegacionCategoria(e, categoria.Id))" class="boton-pequeño" style="padding: 15px 20px;">
                                    <div style="display: flex; align-items: center; gap: 20px; justify-content: space-between;">
                                        <div>
                                            @Herramientas.Idiomas.BuscarTexto(idioma, "Category" + categoria.Id.ToString(), "Forum")
                                        </div>

                                        <div>
                                            @categoria.CantidadPosts.ToString()
                                        </div>
                                      </div>
                                </button>
                            }
                        </div>
                    </div>
                }

                <div class="caja-foro">
                    @if (idiomaId == 0)
                    {
                        <div style="display: flex; align-items: center; gap: 20px;">
                            <img src="/imagenes/banderas/english.svg" style="width: 24px; height: 24px;" alt="English" />

                            <div style="font-size: 14px;">
                                @Herramientas.Idiomas.BuscarTexto(idioma, "String7", "Forum")
                            </div>
                        </div>
                    }
                    else if (idiomaId == 1)
                    {
                        <div style="display: flex; align-items: center; gap: 20px;">
                            <img src="/imagenes/banderas/spanish.svg" style="width: 24px; height: 24px;" alt="Spanish" />

                            <div style="font-size: 14px;">
                                @Herramientas.Idiomas.BuscarTexto(idioma, "String8", "Forum")
                            </div>
                        </div>
                    }

                    <div style="display: flex; flex-direction: column; gap: 20px; margin-top: 20px;">
                        @foreach (var categoria in categorias)
                        {
                            if (categoria.SoloAdmin == false)
                            {
                                <button @onclick="@(e => NavegacionCategoria(e, categoria.Id))" class="boton-pequeño" style="padding: 15px 20px;">
                                    <div style="display: flex; align-items: center; gap: 20px; justify-content: space-between;">
                                        <div>
                                            @Herramientas.Idiomas.BuscarTexto(idioma, "Category" + categoria.Id.ToString(), "Forum")
                                        </div>

                                        <div>
                                            @categoria.CantidadPosts.ToString()
                                        </div>
                                    </div>
                                </button>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    }

    if (postsUltimosTodoForo != null)
    {
        if (postsUltimosTodoForo.Count > 0)
        {
            <div class="titulo-foro" style="margin-top: 40px;">
                <div style="display: flex; align-items: center; gap: 5px; justify-content: space-between; height: 30px;">
                    <h1 style="font-size: 20px; margin: 0px;">
                        @Herramientas.Idiomas.BuscarTexto(idioma, "String17", "Forum")
                    </h1>
                </div>
                <hr/>
            </div>

            <div class="caja-foro">
                <div style="display: flex; flex-direction: column;">
                    <Virtualize Context="post" Items="postsUltimosTodoForo">
                        <ItemContent>
                            @{
                                Usuario? usuario = null;
                                DateTime fechaUsar = post.FechaCreacion;

                                if (string.IsNullOrEmpty(post.AutorIdUltimaRespuesta) == false)
                                {
                                    usuario = UserManager.FindByIdAsync(post.AutorIdUltimaRespuesta).Result;
                                    fechaUsar = post.FechaUltimaRespuesta;
                                }
                                else
                                {
                                    usuario = UserManager.FindByIdAsync(post.AutorId).Result;
                                }

                                <button @onclick="@(e => NavegacionPost(e, post.Id))" class="boton-pequeño" style="padding: 15px 20px; margin-top: 10px; margin-bottom: 10px;">
                                    <div style="display: flex; align-items: center; gap: 20px;">
                                        <div>
                                            <img src="@usuario?.Avatar" style="width: 26px; height: 26px;" alt="@usuario?.Nickname" />
                                        </div>

                                        <div style="width: 100%;">
                                            @{
                                                string contenido = post.Contenido;

                                                if (contenido.Length > 40)
                                                {
                                                    contenido = contenido.Remove(40, contenido.Length - 40) + "...";
                                                }
                                            }

                                            @contenido
                                        </div>

                                        <div style="flex-shrink: 0;">
                                            @Herramientas.Calculadora.DiferenciaTiempo(fechaUsar, idioma)
                                        </div>
                                    </div>
                                </button>
                            }                           
                        </ItemContent>
                    </Virtualize>
                </div>
            </div>
        }
    }
}
else if (categoriaId > 0 && postId == 0)
{
    bool sePuedeVer = true;

    if (moderadorOAdmin == false && BaseDatos.Foro.Buscar.CategoriaSoloAdmin(categoriaId) == true)
    {
        sePuedeVer = false;
    }

    if (sePuedeVer == true)
    {
        if (postsUltimos != null)
        {
            <div class="titulo-foro">
                <div style="display: flex; align-items: center; gap: 5px;">
                    <button @onclick="@(e => NavegacionPrincipalVolver(e))" style="width: fit-content; padding: 0px; border: 0px; background: transparent; color: var(--colorEnlace);">
                        <h1 style="font-size: 20px; margin: 0px;">
                            @Herramientas.Idiomas.BuscarTexto(idioma, "String6", "Forum")
                        </h1>
                    </button>

                    <div style="font-size: 20px">
                        •
                    </div>

                    <h1 style="font-size: 20px; margin: 0px;">
                        @Herramientas.Idiomas.BuscarTexto(idioma, "Category" + categoriaId.ToString(), "Forum")
                    </h1>
                </div>

                <hr />
            </div>

            <div class="caja-foro">
                @if (usuario != null)
                {
                    if (crearPostEnseñar == false)
                    {
                        <div>
                            <button @onclick="@(e => CrearPostEnseñar(e))" class="boton-pequeño" style="width: fit-content; padding: 10px 15px;">
                                @Herramientas.Idiomas.BuscarTexto(idioma, "String1", "Forum")
                            </button>
                        </div>
                    }
                    else
                    {
                        <div style="display: flex; flex-direction: column; gap: 20px;">
                            <input type="text" @oninput="@(e => CrearPostTituloTexto(e))" class="entrada-texto" style="min-width: 50px;" placeholder="@Herramientas.Idiomas.BuscarTexto(idioma, "String2", "Forum")" />

                            <textarea type="text" @oninput="@(e => CrearPostContenidoTexto(e))" class="entrada-texto" rows="6" style="min-width: 50px;" placeholder="@Herramientas.Idiomas.BuscarTexto(idioma, "String3", "Forum")" />

                            <div style="width: 100%; display: flex; align-items: center; gap: 20px; justify-content: space-between;">
                                <button @onclick="@(e => CrearPostEnviar(e))" class="boton-pequeño" style="width: fit-content; padding: 10px 15px;">
                                    @Herramientas.Idiomas.BuscarTexto(idioma, "String4", "Forum")
                                </button>

                                <button @onclick="@(e => CrearPostCerrar(e))" class="boton-pequeño" style="width: fit-content; padding: 10px 15px;">
                                    @Herramientas.Idiomas.BuscarTexto(idioma, "String5", "Forum")
                                </button>
                            </div>
                        </div>
                    }

                    <hr />
                }

                @if (postsFijos.Count > 0)
                {
                    <div style="display: flex; flex-direction: column;">
                        <Virtualize Context="post" Items="postsFijos">
                            <ItemContent>
                                @{
                                    Usuario? usuario = null;
                                    DateTime fechaUsar = post.FechaCreacion;

                                    if (string.IsNullOrEmpty(post.AutorIdUltimaRespuesta) == false)
                                    {
                                        usuario = UserManager.FindByIdAsync(post.AutorIdUltimaRespuesta).Result;
                                        fechaUsar = post.FechaUltimaRespuesta;
                                    }
                                    else
                                    {
                                        usuario = UserManager.FindByIdAsync(post.AutorId).Result;
                                    }

                                    <button @onclick="@(e => NavegacionPost(e, post.Id))" class="boton-pequeño" style="padding: 15px 20px; margin-top: 10px; margin-bottom: 10px;">
                                        <div style="display: flex; align-items: center; gap: 20px;">
                                            <div style="height: 20px;">
                                                <svg class="svg-boton" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512">
                                                    <path d="M32 32C32 14.3 46.3 0 64 0L320 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-29.5 0 11.4 148.2c36.7 19.9 65.7 53.2 79.5 94.7l1 3c3.3 9.8 1.6 20.5-4.4 28.8s-15.7 13.3-26 13.3L32 352c-10.3 0-19.9-4.9-26-13.3s-7.7-19.1-4.4-28.8l1-3c13.8-41.5 42.8-74.8 79.5-94.7L93.5 64 64 64C46.3 64 32 49.7 32 32zM160 384l64 0 0 96c0 17.7-14.3 32-32 32s-32-14.3-32-32l0-96z" />
                                                </svg>
                                            </div>

                                            @if (post.Cerrado == true)
                                            {
                                                <div style="width: 20px;">
                                                    <svg class="svg-boton" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
                                                        <path d="M144 144l0 48 160 0 0-48c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192l0-48C80 64.5 144.5 0 224 0s144 64.5 144 144l0 48 16 0c35.3 0 64 28.7 64 64l0 192c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64L0 256c0-35.3 28.7-64 64-64l16 0z"/>
                                                    </svg>
                                                </div>
                                            }

                                            <div style="width: 100%;">
                                                @post.Titulo
                                            </div>

                                            <div>
                                                @post.CantidadRespuestas
                                            </div>

                                            <div>
                                                <img src="@usuario?.Avatar" style="width: 26px; height: 26px;" alt="@usuario?.Nickname" />
                                            </div>

                                            <div style="flex-shrink: 0;">
                                                @Herramientas.Calculadora.DiferenciaTiempo(fechaUsar, idioma)
                                            </div>
                                        </div>
                                    </button>
                                }
                            </ItemContent>
                        </Virtualize>
                    </div>

                    <hr />
                }

                @if (postsUltimos.Count > 0)
                {
                    <div style="display: flex; flex-direction: column;">
                        <Virtualize Context="post" Items="postsUltimos">
                            <ItemContent>
                                @{
                                    Usuario? usuario = null;
                                    DateTime fechaUsar = post.FechaCreacion;

                                    if (string.IsNullOrEmpty(post.AutorIdUltimaRespuesta) == false)
                                    {
                                        usuario = UserManager.FindByIdAsync(post.AutorIdUltimaRespuesta).Result;
                                        fechaUsar = post.FechaUltimaRespuesta;
                                    }
                                    else
                                    {
                                        usuario = UserManager.FindByIdAsync(post.AutorId).Result;
                                    }

                                    <button @onclick="@(e => NavegacionPost(e, post.Id))" class="boton-pequeño" style="padding: 15px 20px; margin-top: 10px; margin-bottom: 10px;">
                                        <div style="display: flex; align-items: center; gap: 20px;">
                                            @if (post.Cerrado == true)
                                            {
                                                <div style="width: 20px;">
                                                    <svg class="svg-boton" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
                                                        <path d="M144 144l0 48 160 0 0-48c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192l0-48C80 64.5 144.5 0 224 0s144 64.5 144 144l0 48 16 0c35.3 0 64 28.7 64 64l0 192c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64L0 256c0-35.3 28.7-64 64-64l16 0z"/>
                                                    </svg>
                                                </div>
                                            }
                                        
                                            <div style="width: 100%;">
                                                @post.Titulo
                                            </div>

                                            <div>
                                                @post.CantidadRespuestas
                                            </div>

                                            <div>
                                                <img src="@usuario?.Avatar" style="width: 26px; height: 26px;" alt="@usuario?.Nickname" />
                                            </div>

                                            <div style="flex-shrink: 0;">
                                                @Herramientas.Calculadora.DiferenciaTiempo(fechaUsar, idioma)
                                            </div>
                                        </div>
                                    </button>
                                }
                            </ItemContent>
                        </Virtualize>
                    </div>
                }
            </div>
        }
    }
}
else if (categoriaId > 0 && postId > 0)
{
    bool sePuedeVer = true;

    if (moderadorOAdmin == false && BaseDatos.Foro.Buscar.CategoriaSoloAdmin(categoriaId) == true)
    {
        sePuedeVer = false;
    }

    if (sePuedeVer == true)
    {
        if (postAbierto != null)
        {
            <div class="titulo-foro">
                <div style="display: flex; align-items: center; gap: 5px;">
                    <button @onclick="@(e => NavegacionPrincipalVolver(e))" style="width: fit-content; padding: 0px; border: 0px; background: transparent; color: var(--colorEnlace);">
                        <h1 style="font-size: 20px; margin: 0px;">
                            @Herramientas.Idiomas.BuscarTexto(idioma, "String6", "Forum")
                        </h1>
                    </button>

                    <div style="font-size: 20px">
                        •
                    </div>

                    <button @onclick="@(e => NavegacionCategoriaVolver(e))" style="width: fit-content; padding: 0px; border: 0px; background: transparent; color: var(--colorEnlace);">
                        <h1 style="font-size: 20px; margin: 0px;">
                            @Herramientas.Idiomas.BuscarTexto(idioma, "Category" + categoriaId.ToString(), "Forum")
                        </h1>
                    </button>
                </div>

                <hr />
            </div>

            <div class="caja-foro">
                <div style="font-size: 20px;">@postAbierto.Titulo</div>

                <div style="margin-top: 20px; display: flex; align-items: center; gap: 20px; justify-content: space-between;">
                    @{
                        var autor = UserManager.FindByIdAsync(postAbierto.AutorId).Result;

                        if (autor != null)
                        {
                            <div style="display: flex; align-items: center; gap: 20px;">
                                <div style="font-size: 14px;">
                                    @string.Format(Herramientas.Idiomas.BuscarTexto(idioma, "String9", "Forum"), autor.Nickname, Herramientas.Calculadora.DiferenciaTiempo(postAbierto.FechaCreacion, idioma))
                                </div>
                            </div>

                            if (usuario != null)
                            {
                                <div style="display: flex; align-items: center; gap: 20px;">
                                    @if (moderadorOAdmin == true)
                                    {
                                        <button @onclick="@(e => BorrarPost(e, postAbierto.Id))" style="width: fit-content; font-size: 14px; padding: 0px; border: 0px; background: transparent; color: var(--colorTextoPeligro);">
                                            @Herramientas.Idiomas.BuscarTexto(idioma, "String14", "Forum")
                                        </button>

                                         <button @onclick="@(e => CerrarPost(e, postAbierto.Id))" style="width: fit-content; font-size: 14px; padding: 0px; border: 0px; background: transparent; color: var(--colorEnlace);">
                                            @if (postAbierto.Cerrado == false)
                                            {
                                                @Herramientas.Idiomas.BuscarTexto(idioma, "String18", "Forum")
                                            }
                                            else
                                            {
                                                @Herramientas.Idiomas.BuscarTexto(idioma, "String19", "Forum")
                                            }
                                        </button>

                                        <button @onclick="@(e => FijarPost(e, postAbierto.Id))" style="width: fit-content; font-size: 14px; padding: 0px; border: 0px; background: transparent; color: var(--colorEnlace);">
                                            @if (postAbierto.Fijo == false)
                                            {
                                                @Herramientas.Idiomas.BuscarTexto(idioma, "String15", "Forum")
                                            }
                                            else
                                            {
                                                @Herramientas.Idiomas.BuscarTexto(idioma, "String16", "Forum")
                                            }
                                        </button>
                                    }

                                    @if (usuario.Id == postAbierto.AutorId)
                                    {
                                        if (editarPostEnseñar == false)
                                        {
                                            <button @onclick="@(e => EditarPostEnseñar(e, postAbierto.Id, false))" style="width: fit-content; font-size: 14px; padding: 0px; border: 0px; background: transparent; color: var(--colorEnlace);">
                                                @Herramientas.Idiomas.BuscarTexto(idioma, "String11", "Forum")
                                            </button>
                                        }
                                    }
                                </div>
                            }
                        }
                    }
                </div>

                <hr />

                <div>
                    @if (editarPostEnseñar == false || (editarPostId > 0 && editarPostId != postAbierto.Id))
                    {
                        <div style="white-space: pre-line; max-width: 100%; overflow-wrap: anywhere;">
                            @((MarkupString)postAbierto.Contenido)
                        </div>
                    }
                    else if (editarPostEnseñar == true && editarPostId == postAbierto.Id)
                    {
                        <textarea type="text" @oninput="@(e => EditarPostContenidoTexto(e))" class="entrada-texto" rows="6" style="min-width: 50px;">
                            @postAbierto.Contenido  
                        </textarea>

                        <div style="width: 100%; display: flex; align-items: center; gap: 20px; justify-content: space-between; margin-top: 20px;">
                            <button @onclick="@(e => EditarPostEnviar(e))" class="boton-pequeño" style="width: fit-content; padding: 10px 15px;">
                                @Herramientas.Idiomas.BuscarTexto(idioma, "String12", "Forum")
                            </button>

                            <button @onclick="@(e => EditarPostCerrar(e))" class="boton-pequeño" style="width: fit-content; padding: 10px 15px;">
                                @Herramientas.Idiomas.BuscarTexto(idioma, "String5", "Forum")
                            </button>
                        </div>
                    }
                </div>
            </div>

            @if (respuestasPost != null)
            {
                if (respuestasPost.Count > 0)
                {
                    <div style="display: flex; flex-direction: column; gap: 30px; margin-top: 30px;">
                        @foreach (var respuesta in respuestasPost)
                        {
                            <div id="message-@respuesta.Id" class="caja-foro">
                                <div style="display: flex; align-items: start; gap: 30px;">
                                    @{
                                        var autor2 = UserManager.FindByIdAsync(respuesta.AutorId).Result;
                                    }

                                    <div style="width: 60px; padding: 5px;">
                                        @if (autor2 != null)
                                        {
                                            <img src="@autor2.Avatar" style="width: 50px; height: 50px;" alt="@autor2.Nickname" />
                                        }
                                    </div>

                                    <div style="display: flex; flex-direction: column; width: 100%;">
                                        <div style="display: flex; align-items: start; gap: 20px; justify-content: space-between; width: 100%;">
                                            <div>
                                                @if (autor2 != null)
                                                {
                                                    @autor2.Nickname
                                                }
                                            </div>

                                            <div style="font-size: 14px; display: flex; align-items: start; gap: 20px;">
                                                @if (usuario != null)
                                                {
                                                    if (moderadorOAdmin == true)
                                                    {
                                                        <button @onclick="@(e => BorrarPost(e, postAbierto.Id))" style="width: fit-content; font-size: 14px; padding: 0px; border: 0px; background: transparent; color: var(--colorTextoPeligro);">
                                                            @Herramientas.Idiomas.BuscarTexto(idioma, "String14", "Forum")
                                                        </button>
                                                    }

                                                    if (usuario.Id == respuesta.AutorId)
                                                    {
                                                        if (editarPostEnseñar == false)
                                                        {
                                                            <button @onclick="@(e => EditarPostEnseñar(e, respuesta.Id, true))" style="width: fit-content; font-size: 14px; padding: 0px; border: 0px; background: transparent; color: var(--colorEnlace);">
                                                                @Herramientas.Idiomas.BuscarTexto(idioma, "String11", "Forum")
                                                            </button>
                                                        }
                                                    }
                                                }

                                                @Herramientas.Calculadora.DiferenciaTiempo(respuesta.FechaCreacion, idioma)
                                            </div>
                                        </div>

                                        <hr />

                                        @if (editarPostEnseñar == false || (editarPostId > 0 && editarPostId != respuesta.Id))
                                        {
                                            <div style="white-space: pre-line; max-width: 100%; overflow-wrap: anywhere;">
                                                @((MarkupString)respuesta.Contenido)
                                            </div>
                                        }
                                        else if (editarPostEnseñar == true && editarPostId == respuesta.Id)
                                        {
                                            <textarea type="text" @oninput="@(e => EditarPostContenidoTexto(e))" class="entrada-texto" rows="6" style="min-width: 50px;">
                                                @respuesta.Contenido    
                                            </textarea>

                                            <div style="width: 100%; display: flex; align-items: center; gap: 20px; justify-content: space-between; margin-top: 20px;">
                                                <button @onclick="@(e => EditarPostEnviar(e))" class="boton-pequeño" style="width: fit-content; padding: 10px 15px;">
                                                    @Herramientas.Idiomas.BuscarTexto(idioma, "String12", "Forum")
                                                </button>

                                                <button @onclick="@(e => EditarPostCerrar(e))" class="boton-pequeño" style="width: fit-content; padding: 10px 15px;">
                                                    @Herramientas.Idiomas.BuscarTexto(idioma, "String5", "Forum")
                                                </button>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            }

            @if (usuario != null)
            {
                bool poderResponder = true;

                if (postAbierto.Cerrado == true)
                {
                    poderResponder = false;
                }

                if (poderResponder == true)
                {
                    <div class="caja-foro" style="margin-top: 30px;">
                        @if (responderPostEnseñar == false)
                        {
                            <div>
                                <button @onclick="@(e => ResponderPostEnseñar(e))" class="boton-pequeño" style="width: fit-content; padding: 10px 15px;">
                                    @Herramientas.Idiomas.BuscarTexto(idioma, "String10", "Forum")
                                </button>
                            </div>
                        }
                        else
                        {
                            <div style="display: flex; flex-direction: column; gap: 20px;">
                                <textarea type="text" @oninput="@(e => ResponderPostContenidoTexto(e))" class="entrada-texto" rows="6" style="min-width: 50px;" placeholder="@Herramientas.Idiomas.BuscarTexto(idioma, "String3", "Forum")" />

                                <div style="width: 100%; display: flex; align-items: center; gap: 20px; justify-content: space-between;">
                                    <button @onclick="@(e => ResponderPostEnviar(e))" class="boton-pequeño" style="width: fit-content; padding: 10px 15px;">
                                        @Herramientas.Idiomas.BuscarTexto(idioma, "String13", "Forum")
                                    </button>

                                    <button @onclick="@(e => ResponderPostCerrar(e))" class="boton-pequeño" style="width: fit-content; padding: 10px 15px;">
                                        @Herramientas.Idiomas.BuscarTexto(idioma, "String5", "Forum")
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                }
            }
        }
    }
}

@code {

    #nullable disable

    [Parameter]
    public string idioma { get; set; }

    private int idiomaId = 0;

    [Parameter]
    public string usuarioId { get; set; }

    [Parameter]
    public bool usuarioLogeado { get; set; }

    private bool moderadorOAdmin = false;

    private Usuario usuario = null;

    private List<BaseDatos.Foro.ForoCategoria> categoriasAdmin = null;
    private List<BaseDatos.Foro.ForoCategoria> categorias = null;
    private List<BaseDatos.Foro.ForoPost> postsUltimosTodoForo = null;
    private List<BaseDatos.Foro.ForoPost> postsFijos = null;
    private List<BaseDatos.Foro.ForoPost> postsUltimos = null;
    private BaseDatos.Foro.ForoPost postAbierto = null;
    private List<BaseDatos.Foro.ForoPost> respuestasPost = null;

    [Parameter]
    public int categoriaId { get; set; } = 0;

    [Parameter]
    public int postId { get; set; } = 0;

    private PeriodicTimer cronometro = null;

    private bool crearPostEnseñar = false;
    private string crearPostTitulo = null;
    private string crearPostContenido = null;

    private bool responderPostEnseñar = false;
    private string responderPostContenido = null;

    private bool editarPostEnseñar = false;
    private int editarPostId = 0;
    private string editarPostContenido = null;
    private bool editarPostEsRespuesta = false;

    protected override async Task OnInitializedAsync()
    {
        Cronometro();

        foreach (var codigo in Herramientas.Idiomas.ListadoIdiomasGenerar()[1].Codigos)
        {
            if (codigo == idioma)
            {
                idiomaId = 1;
            }
        }

        if (usuarioLogeado == true)
        {
            usuario = await UserManager.FindByIdAsync(usuarioId);

            if (string.IsNullOrEmpty(usuario.Nickname) == true)
            {
                usuario = null;
            }
            else
            {
                if (string.IsNullOrEmpty(usuario.Avatar) == true)
                {
                    usuario.Avatar = "/imagenes/otros/avatardefectosteam.jpg";
                }
            }

            if (usuario != null)
            {
                if (usuario.ForumRank > 99 || BaseDatos.Usuarios.Buscar.RolDios(usuario.Id) == true)
                {
                    moderadorOAdmin = true;
                }
            }
        }

        if (categoriaId == 0 && postId == 0)
        {
            if (moderadorOAdmin == true)
            {
                categoriasAdmin = BaseDatos.Foro.Buscar.CategoriasAdmin();
            }

            categorias = BaseDatos.Foro.Buscar.CategoriasIdiomas(idiomaId);
            postsUltimosTodoForo = BaseDatos.Foro.Buscar.UltimosPostsTodoForo(idiomaId, 10);
        }
        else if (categoriaId > 0 && postId == 0)
        {
            postsFijos = BaseDatos.Foro.Buscar.UltimosPosts(categoriaId, 5, true);
            postsUltimos = BaseDatos.Foro.Buscar.UltimosPosts(categoriaId, 30, false);
        }
        else if (categoriaId > 0 && postId > 0)
        {
            postAbierto = BaseDatos.Foro.Buscar.Post(postId);

            if (postAbierto != null)
            {
                respuestasPost = BaseDatos.Foro.Buscar.RespuestasPost(postAbierto.Id);
            }
        }
    }

    private async void Cronometro()
    {
        cronometro = new PeriodicTimer(TimeSpan.FromSeconds(1));

        while (await cronometro.WaitForNextTickAsync())
        {
            await InvokeAsync(StateHasChanged);
        }
    }

    private void CambiarIdioma(MouseEventArgs e, int nuevoIdiomaId)
    {
        idiomaId = nuevoIdiomaId;

        categorias = BaseDatos.Foro.Buscar.CategoriasIdiomas(idiomaId);
        postsUltimosTodoForo = BaseDatos.Foro.Buscar.UltimosPostsTodoForo(idiomaId, 10);
    }

    #region Navegación

    private async void NavegacionPrincipalVolver(MouseEventArgs e)
    {
        NavegacionOcultarControles();

        categoriaId = 0;
        postId = 0;

        if (moderadorOAdmin == true)
        {
            categoriasAdmin = BaseDatos.Foro.Buscar.CategoriasAdmin();
        }

        categorias = BaseDatos.Foro.Buscar.CategoriasIdiomas(idiomaId);
        postsUltimosTodoForo = BaseDatos.Foro.Buscar.UltimosPostsTodoForo(idiomaId, 10);

        await JavaScript.InvokeVoidAsync("ChangeUrl", "/forum/");
    }

    private async void NavegacionCategoria(MouseEventArgs e, int nuevaCategoriaId)
    {
        NavegacionOcultarControles();

        categoriaId = nuevaCategoriaId;

        postsFijos = BaseDatos.Foro.Buscar.UltimosPosts(nuevaCategoriaId, 5, true);
        postsUltimos = BaseDatos.Foro.Buscar.UltimosPosts(nuevaCategoriaId, 30, false);

        await JavaScript.InvokeVoidAsync("ChangeUrl", "/forum/" + categoriaId.ToString() + "/");
    }

    private async void NavegacionCategoriaVolver(MouseEventArgs e)
    {
        NavegacionOcultarControles();

        postId = 0;

        postsFijos = BaseDatos.Foro.Buscar.UltimosPosts(categoriaId, 5, true);
        postsUltimos = BaseDatos.Foro.Buscar.UltimosPosts(categoriaId, 30, false);

        await JavaScript.InvokeVoidAsync("ChangeUrl", "/forum/" + categoriaId.ToString() + "/");
    }

    private async void NavegacionPost(MouseEventArgs e, int nuevoPostId)
    {
        NavegacionOcultarControles();

        postId = nuevoPostId;

        postAbierto = BaseDatos.Foro.Buscar.Post(postId);

        if (postAbierto != null)
        {
            categoriaId = postAbierto.CategoriaId;

            respuestasPost = BaseDatos.Foro.Buscar.RespuestasPost(postAbierto.Id);

            await JavaScript.InvokeVoidAsync("ChangeUrl", "/forum/" + categoriaId.ToString() + "/" + postAbierto.Id.ToString() + "/" + Herramientas.EnlaceAdaptador.Nombre(postAbierto.Titulo) + "/");
        }
    }

    private void NavegacionOcultarControles()
    {
        crearPostEnseñar = false;
        responderPostEnseñar = false;
        editarPostEnseñar = false;
    }

    #endregion

    #region Crear

    private void CrearPostEnseñar(MouseEventArgs e)
    {
        crearPostEnseñar = true;

        crearPostTitulo = null;
        crearPostContenido = null;
    }

    private void CrearPostTituloTexto(ChangeEventArgs e)
    {
        crearPostTitulo = e.Value.ToString();
    }

    private void CrearPostContenidoTexto(ChangeEventArgs e)
    {
        crearPostContenido = e.Value.ToString();

        if (crearPostContenido.Contains("<iframe") == true)
        {
            crearPostContenido = crearPostContenido.Replace("<iframe", "<div").Replace("</iframe>", "</div>");
        }
    }

    private void CrearPostEnviar(MouseEventArgs e)
    {
        if (string.IsNullOrEmpty(crearPostTitulo) == false && string.IsNullOrEmpty(crearPostContenido) == false)
        {
            if (crearPostTitulo.Length > 5 && crearPostContenido.Length > 5)
            {
                BaseDatos.Foro.ForoPost postEnviar = new BaseDatos.Foro.ForoPost
                {
                    Titulo = crearPostTitulo,
                    Contenido = crearPostContenido,
                    AutorId = usuario.Id,
                    CategoriaId = categoriaId,
                    FechaCreacion = DateTime.Now
                };

                BaseDatos.Foro.Insertar.Post(postEnviar);

                postsUltimos = BaseDatos.Foro.Buscar.UltimosPosts(categoriaId, 30, false);

                crearPostEnseñar = false;
            }
        }
    }

    private void CrearPostCerrar(MouseEventArgs e)
    {
        crearPostEnseñar = false;
    }

    #endregion

    #region Responder

    private void ResponderPostEnseñar(MouseEventArgs e)
    {
        responderPostEnseñar = true;

        responderPostContenido = null;
    }

    private void ResponderPostContenidoTexto(ChangeEventArgs e)
    {
        responderPostContenido = e.Value.ToString();
    }

    private void ResponderPostEnviar(MouseEventArgs e)
    {
        if (postAbierto != null)
        {
            BaseDatos.Foro.ForoPost postEnviar = new BaseDatos.Foro.ForoPost
            {
                Titulo = postAbierto.Titulo + " - Respuesta",
                Contenido = responderPostContenido,
                AutorId = usuario.Id,
                CategoriaId = categoriaId,
                FechaCreacion = DateTime.Now,
                RespuestaId = postAbierto.Id
            };

            BaseDatos.Foro.Insertar.Post(postEnviar);

            respuestasPost = BaseDatos.Foro.Buscar.RespuestasPost(postAbierto.Id);

            responderPostEnseñar = false;
        }
    }

    private void ResponderPostCerrar(MouseEventArgs e)
    {
        responderPostEnseñar = false;
    }

    #endregion

    #region Edición

    private void EditarPostEnseñar(MouseEventArgs e, int id, bool esRespuesta)
    {
        editarPostEnseñar = true;

        editarPostId = id;
        editarPostContenido = null;
        editarPostEsRespuesta = esRespuesta;
    }

    private void EditarPostContenidoTexto(ChangeEventArgs e)
    {
        editarPostContenido = e.Value.ToString();

        if (editarPostContenido.Contains("<iframe") == true)
        {
            editarPostContenido = editarPostContenido.Replace("<iframe", "<div").Replace("</iframe>", "</div>");
        }
    }

    private void EditarPostEnviar(MouseEventArgs e)
    {
        if (editarPostId > 0)
        {
            if (string.IsNullOrEmpty(editarPostContenido) == false)
            {
                if (editarPostContenido.Length > 5)
                {
                    BaseDatos.Foro.Actualizar.Post(editarPostId, editarPostContenido);

                    if (editarPostEsRespuesta == false)
                    {
                        postAbierto = BaseDatos.Foro.Buscar.Post(editarPostId);
                    }

                    if (postAbierto != null)
                    {
                        respuestasPost = BaseDatos.Foro.Buscar.RespuestasPost(postAbierto.Id);
                    }

                    editarPostEnseñar = false;
                    editarPostId = 0;
                }
            }
        }
    }

    private void EditarPostCerrar(MouseEventArgs e)
    {
        editarPostEnseñar = false;
    }

    #endregion

    #region Admin

    private void FijarPost(MouseEventArgs e, int id)
    {
        if (id > 0)
        {
            BaseDatos.Foro.Actualizar.Fijo(id);

            postAbierto = BaseDatos.Foro.Buscar.Post(id);
        }
    }

    private void CerrarPost(MouseEventArgs e, int id)
    {
        if (id > 0)
        {
            BaseDatos.Foro.Actualizar.Cerrado(id);

            postAbierto = BaseDatos.Foro.Buscar.Post(id);
        }
    }

    private async void BorrarPost(MouseEventArgs e, int id)
    {
        if (id > 0)
        {
            BaseDatos.Foro.Limpiar.Post(id);

            NavegacionOcultarControles();

            postId = 0;

            postsFijos = BaseDatos.Foro.Buscar.UltimosPosts(categoriaId, 5, true);
            postsUltimos = BaseDatos.Foro.Buscar.UltimosPosts(categoriaId, 30, false);

            await JavaScript.InvokeVoidAsync("ChangeUrl", "/forum/" + categoriaId.ToString() + "/");
        }
    }

    #endregion
}
