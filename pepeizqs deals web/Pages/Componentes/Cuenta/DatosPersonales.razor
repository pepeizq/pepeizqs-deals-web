@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc
@using Microsoft.JSInterop
@using System.Text
@using System.Text.Json
@using pepeizqs_deals_web.Areas.Identity.Data

@inject UserManager<Usuario> UserManager
@inject SignInManager<Usuario> SignInManager
@inject IHttpContextAccessor HttpContextAccessor
@inject IJSRuntime JavaScript
@inject NavigationManager NavManager

<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 40px;">
    <div>@Herramientas.Idiomas.BuscarTexto(idioma, "PersonalData1", "Account")</div>

    <div style="margin: 20px 0px 30px 0px;">@Herramientas.Idiomas.BuscarTexto(idioma, "PersonalData2", "Account")</div>

    <button @onclick="DescargarDatos" class="boton" style="font-size: 18px; max-width: 250px;">@Herramientas.Idiomas.BuscarTexto(idioma, "PersonalData3", "Account")</button>
</div>

<div style="background-color: var(--fondoOscuro); border: 1px solid var(--fondoBotonPequeño); padding: 40px; margin-top: 20px;">
    <div>@Herramientas.Idiomas.BuscarTexto(idioma, "PersonalData4", "Account")</div>
    
    @if (enseñarAvisoBorrado1 == false)
    {
        <div style="margin: 20px 0px 30px 0px;">@Herramientas.Idiomas.BuscarTexto(idioma, "PersonalData5", "Account")</div>

        <button @onclick="BorrarDatosPaso1" class="boton-peligro" style="font-size: 18px; max-width: 250px;">@Herramientas.Idiomas.BuscarTexto(idioma, "PersonalData6", "Account")</button>
    }
    else
    {
        @if (enseñarAvisoBorrado2 == false)
        {
            <div style="margin: 20px 0px 30px 0px;">@Herramientas.Idiomas.BuscarTexto(idioma, "PersonalData7", "Account")</div>

            <input type="password" value="@contraseñaBorrado" @onchange="@(e => CambiarContraseñaBorrado(e))" style="padding: 5px 10px; background-color: var(--fondoEntrada); border: 0px; color: var(--colorTexto); width: 100%;" />
        }
        else
        {
            <div style="font-size: 20px; margin: 20px 0px 30px 0px;">@Herramientas.Idiomas.BuscarTexto(idioma, "PersonalData8", "Account")</div>

            <button @onclick="BorrarDatosPaso2" class="boton-peligro" style="font-size: 18px; max-width: 250px;">@Herramientas.Idiomas.BuscarTexto(idioma, "PersonalData9", "Account")</button>
        }
    }
</div>

<script>
    window.downloadFileFromStream = async (fileName, contentStreamReference) => {
        const arrayBuffer = await contentStreamReference.arrayBuffer();
        const blob = new Blob([arrayBuffer]);
        const url = URL.createObjectURL(blob);
        const anchorElement = document.createElement('a');
        anchorElement.href = url;
        anchorElement.download = fileName ?? '';
        anchorElement.click();
        anchorElement.remove();
        URL.revokeObjectURL(url);
    }
</script>

@code {

    #nullable disable

    [Parameter]
    public string idioma { get; set; }

    private Usuario usuario = new Usuario();

    protected override async void OnInitialized()
    {
        usuario = await UserManager.GetUserAsync(HttpContextAccessor.HttpContext.User);

        enseñarAvisoBorrado1 = false;
        enseñarAvisoBorrado2 = false;
    }

    #region Descargar Datos

    private async Task DescargarDatos()
    {
        if (usuario != null)
        {
            string contenido = JsonSerializer.Serialize(usuario);

            MemoryStream ficheroStream = new MemoryStream(Encoding.UTF8.GetBytes(contenido));

            string ficheroNombre = "user.json";

            using var streamRef = new DotNetStreamReference(stream: ficheroStream);

            await JavaScript.InvokeVoidAsync("downloadFileFromStream", ficheroNombre, streamRef);
        }
    }

    #endregion

    #region Borrar Cuenta

    private bool enseñarAvisoBorrado1 = false;
    private string contraseñaBorrado = string.Empty;
    private bool enseñarAvisoBorrado2 = false;

    private void BorrarDatosPaso1()
    {
        enseñarAvisoBorrado1 = true;
    }

    private async void CambiarContraseñaBorrado(ChangeEventArgs texto)
    {
        contraseñaBorrado = texto.Value.ToString();

        if (string.IsNullOrEmpty(contraseñaBorrado) == false)
        {
            if (await UserManager.CheckPasswordAsync(usuario, contraseñaBorrado) == true)
            {
                enseñarAvisoBorrado2 = true;
            }
        }
    }

    private async void BorrarDatosPaso2()
    {
        IdentityResult resultado = await UserManager.DeleteAsync(usuario);

        if (resultado.Succeeded == true)
        {
            await SignInManager.SignOutAsync();
            NavManager.NavigateTo("/", true);
        }
    }

    #endregion
}
