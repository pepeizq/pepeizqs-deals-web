@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Identity
@using System.Net.Mail
@using pepeizqs_deals_web.Areas.Identity.Data

@inject UserManager<Usuario> UserManager
@inject IHttpContextAccessor HttpContextAccessor

<style>
    .caja-diseño {
        background: linear-gradient(180deg, var(--fondoOscuro) 0%, var(--fondoMinimo) 211.07%);
        border: 2px solid var(--fondoOscuro);
        box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.28),0px 0px 2px 0px rgba(0, 0, 0, 0.24);
        border-radius: 5px;
    }
</style>

@if (usuario != null)
{
    if (Herramientas.Patreon.VerificarActivo(usuario.PatreonLastCheck) == true)
    {
        <div style="background-color: var(--fondoBien); border: 1px solid var(--fondoBotonPequeño); border-radius: 5px; padding: 20px 25px; display: flex; flex-direction: column; gap: 30px;">
            <div style="display: flex; align-items: center; gap: 25px;">
                <div style="max-width: 26px;">
                    <svg class="svg-boton" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
                        <path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z" />
                    </svg>
                </div>

                <div style="display: flex; flex-direction: column; gap: 10px;">
                    <label style="text-align: left; width: 100%;">@Herramientas.Idiomas.BuscarTexto(idioma, "Patreon1", "Account")</label>

                    <div>
                        <a href="/patreon">https://pepeizqdeals.com/patreon</a>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div style="display: flex; flex-direction: column; gap: 30px;">
            <div style="background-color: var(--fondoAlerta); border: 1px solid var(--fondoBotonPequeño); border-radius: 5px; padding: 20px 25px; display: flex; flex-direction: column; gap: 30px;">
                <div style="display: flex; align-items: center; gap: 25px;">
                    <div style="max-width: 26px;">
                        <svg class="svg-boton" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                            <path d="M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zm0-384c13.3 0 24 10.7 24 24l0 112c0 13.3-10.7 24-24 24s-24-10.7-24-24l0-112c0-13.3 10.7-24 24-24zM224 352a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z" />
                        </svg>
                    </div>

                    <div style="display: flex; flex-direction: column; gap: 10px;">
                        <label style="text-align: left; width: 100%;">@Herramientas.Idiomas.BuscarTexto(idioma, "Patreon2", "Account")</label>

                        <div>
                            <a href="/patreon">https://pepeizqdeals.com/patreon</a>
                        </div>
                    </div>
                </div>
            </div>

            <div class="caja-diseño" style="padding: 40px; display: flex; flex-direction: column; gap: 10px;">
                <label style="margin-left: 5px;">@Herramientas.Idiomas.BuscarTexto(idioma, "Patreon3", "Account")</label>
                <label style="margin-left: 5px; margin-bottom: 5px; font-size: 14px;">@Herramientas.Idiomas.BuscarTexto(idioma, "Patreon4", "Account")</label>

                <input value="@correoAlternativo" @onchange="@(e => CambiarCorreo(e))" class="entrada-texto" placeholder="@Herramientas.Idiomas.BuscarTexto(idioma, "Patreon5", "Account")" />

                @if (string.IsNullOrEmpty(correoAlternativo) == false && correoUsado == true)
                {
                    <label style="margin-left: 5px; font-size: 14px;">@Herramientas.Idiomas.BuscarTexto(idioma, "Patreon6", "Account")</label>
                }
            </div>

            <div class="caja-diseño" style="padding: 30px;">
                <div style="display: flex; align-items: center; gap: 25px;">
                    <div style="max-width: 26px;">
                        <svg class="svg-boton" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                            <path d="M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336l24 0 0-64-24 0c-13.3 0-24-10.7-24-24s10.7-24 24-24l48 0c13.3 0 24 10.7 24 24l0 88 8 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-80 0c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z" />
                        </svg>
                    </div>

                    <label style="text-align: left; width: 100%;">@Herramientas.Idiomas.BuscarTexto(idioma, "Patreon7", "Account")</label>
                </div>
            </div>
        </div>
    }
}

@code {

    #nullable disable

    [Parameter]
    public string idioma { get; set; }

    private Usuario usuario = new Usuario();

    private string correoAlternativo = null;
    private bool correoUsado = false;

    protected override async Task OnInitializedAsync()
    {
        usuario = await UserManager.GetUserAsync(HttpContextAccessor.HttpContext.User);

        if (usuario != null)
        {
            if (string.IsNullOrEmpty(usuario.PatreonMail) == false)
            {
                correoAlternativo = usuario.PatreonMail;
            }
        }
    }

    private void CambiarCorreo(ChangeEventArgs texto)
    {
        correoAlternativo = texto.Value.ToString();

        if (string.IsNullOrEmpty(correoAlternativo) == false)
        {
            bool correoValido = true;

            try
            {
                MailAddress comprobar = new MailAddress(correoAlternativo);
            }
            catch
            {
                correoValido = false;
            }

            if (correoValido == true)
            {
                correoUsado = BaseDatos.Usuarios.Actualizar.PatreonCorreo(usuario.Id, correoAlternativo);
            }
        }
    }
}
