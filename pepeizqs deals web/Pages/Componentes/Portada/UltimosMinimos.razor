@using BaseDatos.Juegos;
@using Juegos;
@using Microsoft.Data.SqlClient;

@if (juegosMostrar.Count > 0)
{
	<div style="font-size: 20px; margin-bottom: 10px; margin-left: 20px;">
		Last Historical Lows
	</div>

	<div class="perfil" style="padding: 15px 20px;">
		@foreach (var juego in juegosMostrar)
		{
			<div class="perfil-flexible-centrado" style="margin-top: 10px;">
				<a class="boton-pequeño" style="padding: 0px;" href="/game/@juego.Id" target="_blank">
					<div class="perfil-flexible-centrado">
						<div style="width: 20%;">
							<img src="@juego.Imagenes.Capsule_231x87" style="max-height:100%; max-width:100%;" />
						</div>

						<div style="width: 70%; padding: 4px 15px; font-size: 13px;">
							@juego.Nombre
						</div>

						<div style="width: 5%; height: 16px; position: relative;">
							<img src="@CargarIconoTienda(juego)" class="juego-icono-tienda" />
						</div>

						<div style="width: 15%; padding: 4px 15px 4px 0px; font-size: 13px; text-align: right;">
							@Herramientas.JuegoFicha.PrecioMinimoActual(juego, false)
						</div>
					</div>
				</a>
			</div>
		}

		<a class="boton-pequeño" style="padding: 10px 15px; margin-top: 20px; margin-bottom: 5px;" href="/HistoricalLow">
			Load more historical lows
		</a>
	</div>
}

@code {

	#nullable disable

	List<Juego> juegosMostrar = new List<Juego>();

	protected override void OnInitialized()
	{
		List<Juego> juegosConMinimos = BaseDatos.Juegos.Precios.DevolverMinimos();

		if (juegosConMinimos != null)
		{
			if (juegosConMinimos.Count > 0)
			{
				juegosMostrar.Clear();

				for (int i = 0; i < 10; i += 1)
				{
					juegosMostrar.Add(juegosConMinimos[i]);
				}
			}
		}
	}

	private string CargarIconoTienda(Juego juego)
	{
		JuegoPrecio oferta = juego.PrecioMinimosHistoricos[0];
		List<Tiendas2.Tienda> tiendas = Tiendas2.TiendasCargar.GenerarListado();

		foreach (var tienda in tiendas)
		{
			if (tienda.Id == oferta.Tienda)
			{
				return tienda.ImagenIcono;
			}
		}

		return null;
	}
}
