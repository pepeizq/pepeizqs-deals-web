@using APIs.Steam;
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.AspNetCore.Identity;
@using pepeizqs_deals_web.Areas.Identity.Data;

@inject UserManager<Usuario> UserManager
@inject IHttpContextAccessor HttpContextAccessor

<div style="margin-top: 10px;">
	<input class="entrada-texto" placeholder="https://steamcommunity.com/id/yourname/" value="@usuario.SteamAccount" @oninput="TextoCambiaSteamCuenta" />
	
	<div class="perfil-flexible-centrado" style="margin-top: 15px;">
		<div style="width: 5%; padding-right: 10px;">
			<i class="fa-solid fa-circle-info" style="font-size: 30px;"></i>
		</div>
		
		<div style="width: 95%;">
			<label class="texto-info-entrada">This website will only need your Steam account information if you want to save time creating your wishlist or if you want to access the game giveaways (in the near future I hope to launch this feature). In order for it to work correctly, your Steam account permissions must be <a href="/imagenes/otros/permisos.jpg" target="_blank">like this</a>.</label>
		</div>
	</div>
</div>

<hr style="margin-top: 20px; margin-bottom: 20px;"/>

<div class="perfil-flexible-centrado">
	@if (@usuario.Avatar != null)
	{
		<div style="width: 10%; padding-right: 10px; padding-bottom: 10px;">
			<img src="@usuario.Avatar" style="max-width: 70px; max-height: 70px;" />
		</div>
	}

	<div style="width: 90%;">
		@if (@usuario.Nickname != null)
		{
			<div>
				<label class="texto-info-entrada">Nickname: @usuario.Nickname</label>
			</div>
		}

		@if (@usuario.SteamGames != null)
		{
			<div>
				<label class="texto-info-entrada">Games on the account: @MensajeCantidad(usuario.SteamGames)</label>
			</div>
		}

		@if (@usuario.SteamWishlist != null)
		{
			<div>
				<label class="texto-info-entrada">Games on the wishlist: @MensajeCantidad(usuario.SteamWishlist)</label>
			</div>
		}

		@if (@usuario.OfficialGroup != null)
		{
			@if (@usuario.OfficialGroup == "True")
			{
				<div>
					<i class="fa-solid fa-check texto-info-entrada"></i> <label class="texto-info-entrada">You are in the Steam Group for the giveaways.</label>
				</div>
			}
			else
			{
				<div>
					<i class="fa-solid fa-xmark texto-info-entrada"></i> <label class="texto-info-entrada">You are not in the Steam Group for the giveaways.</label>
				</div>
			}
		}
	</div>
</div>

@code {

	#nullable disable

	private Usuario usuario = new Usuario();

	protected override void OnInitialized()
	{
		usuario = UserManager.GetUserAsync(HttpContextAccessor.HttpContext.User).Result;
	}

	private async void TextoCambiaSteamCuenta(ChangeEventArgs texto)
	{
		bool tiempo = true;

		if (usuario.SteamAccountLastCheck != null)
		{
			if (Convert.ToDateTime(usuario.SteamAccountLastCheck) + TimeSpan.FromDays(7) > DateTime.Now)
			{
				tiempo = false;
			}
		}

		if (tiempo == true)
		{
			if (texto.Value.ToString().Trim().Length > 1)
			{
				string enlace = texto.Value.ToString().Trim();

				if (enlace.Contains("https://steamcommunity.com/id/") == true || enlace.Contains("https://steamcommunity.com/profiles/") == true)
				{
					SteamUsuario datos = await Cuenta.CargarDatos(usuario.SteamAccount);

					usuario.SteamGames = datos.Juegos;
					usuario.SteamWishlist = datos.Deseados;
					usuario.Avatar = datos.Avatar;
					usuario.Nickname = datos.Nombre;
					usuario.SteamAccountLastCheck = DateTime.Now.ToString();
					usuario.OfficialGroup = datos.GrupoOficial;

					await UserManager.UpdateAsync(usuario);
				}
			}
		}
	}

	private string MensajeCantidad(string datos)
	{
		if (datos != null)
		{
			string juegos = datos;

			int i = 0;
			int j = 100000;

			while (i < j)
			{
				if (juegos.Contains(",") == true)
				{
					int int1 = juegos.IndexOf(",");
					juegos = juegos.Remove(0, int1 + 1);
				}
				else
				{
					break;
				}

				i += 1;
			}

			if (i > 0)
			{
				return i.ToString();
			}
		}

		return null;
	}
	
}
