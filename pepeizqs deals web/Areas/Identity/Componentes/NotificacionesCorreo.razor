@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.AspNetCore.Identity;
@using pepeizqs_deals_web.Areas.Identity.Data;

@inject UserManager<Usuario> UserManager
@inject IHttpContextAccessor HttpContextAccessor

<div class="row" style="margin-top: 10px;">
	<div style="display: flex; align-items: center;">
		<div style="width: 8%; text-align: center;">
			<div class="checkbox-caja">
				<input type="checkbox" class="checkbox-interior" checked="@estadoMinimos" @onchange="ClickearCambioMinimos">
			</div>
		</div>

		<div style="width: 92%; padding: 10px;">
			@Herramientas.Idiomas.CogerCadena(idioma, "Settings.String54")
		</div>
	</div>
	<div style="display: flex; align-items: center;">
		<div style="width: 8%; text-align: center;">
			<div class="checkbox-caja">
				<input type="checkbox" class="checkbox-interior" checked="@estadoNoticias" @onchange="ClickearCambioNoticias">
			</div>
		</div>

		<div style="width: 92%; padding: 10px;">
			@Herramientas.Idiomas.CogerCadena(idioma, "Settings.String56")
		</div>
	</div>
</div>

@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	private Usuario usuario = new Usuario();

	private string estadoMinimos = null;
	private string estadoNoticias = null;

	protected override void OnInitialized()
	{
		usuario = UserManager.GetUserAsync(HttpContextAccessor.HttpContext.User).Result;

		if (usuario != null)
		{
			if (usuario.NotificationLows == null)
			{
				estadoMinimos = null;
			}
			else
			{
				if (usuario.NotificationLows == true)
				{
					estadoMinimos = "checked";
				}
				else
				{
					estadoMinimos = null;
				}
			}

			if (usuario.NotificationNews == null)
			{
				estadoNoticias = null;
			}
			else
			{
				if (usuario.NotificationNews == true)
				{
					estadoNoticias = "checked";
				}
				else
				{
					estadoNoticias = null;
				}
			}
		}
	}

	private async void ClickearCambioMinimos()
	{
		if (usuario != null)
		{
			bool boolMinimos = false;

			if (estadoMinimos == null)
			{
				estadoMinimos = "checked";
				boolMinimos = true;
			}
			else
			{
				estadoMinimos = null;
				boolMinimos = false;
			}

			usuario.NotificationLows = boolMinimos;

			await UserManager.UpdateAsync(usuario);
		}
		
	}

	private async void ClickearCambioNoticias()
	{
		if (usuario != null)
		{
			bool boolNoticias = false;

			if (estadoNoticias == null)
			{
				estadoNoticias = "checked";
				boolNoticias = true;
			}
			else
			{
				estadoNoticias = null;
				boolNoticias = false;
			}

			usuario.NotificationNews = boolNoticias;

			await UserManager.UpdateAsync(usuario);
		}

	}
}
